<?xml version='1.0'?>
<signatures version='1.0'>
<opaque name='JKParseState' type='^{JKParseState=}'/>
<constant name='CFStringRef' declared_type='int' type='i'/>
<constant name='FBErrorHTTPStatusCodeKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorInnerErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorLoginFailedOriginalErrorCode' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorLoginFailedReason' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorLoginFailedReasonInlineCancelledValue' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorLoginFailedReasonInlineNotCancelledValue' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorLoginFailedReasonUnitTestResponseUnrecognized' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorNativeDialogCantBeDisplayed' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorNativeDialogInvalidForSession' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorNativeDialogNotSupported' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorNativeDialogReasonKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorParsedJSONResponseKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorReauthorizeFailedReasonSessionClosed' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorReauthorizeFailedReasonUserCancelled' declared_type='NSString*' type='@' const='true'/>
<constant name='FBErrorReauthorizeFailedReasonWrongUser' declared_type='NSString*' type='@' const='true'/>
<constant name='FBFriendPickerCacheIdentity' declared_type='NSString*' type='@' const='true'/>
<constant name='FBGraphBasePath' declared_type='NSString*' type='@' const='true'/>
<constant name='FBInvalidOperationException' declared_type='NSString*' type='@' const='true'/>
<constant name='FBLoggingBehaviorAccessTokens' declared_type='NSString*' type='@' const='true'/>
<constant name='FBLoggingBehaviorFBRequests' declared_type='NSString*' type='@' const='true'/>
<constant name='FBLoggingBehaviorFBURLConnections' declared_type='NSString*' type='@' const='true'/>
<constant name='FBLoggingBehaviorPerformanceCharacteristics' declared_type='NSString*' type='@' const='true'/>
<constant name='FBLoggingBehaviorSessionStateTransitions' declared_type='NSString*' type='@' const='true'/>
<constant name='FBNonJSONResponseProperty' declared_type='NSString*' type='@' const='true'/>
<constant name='FBPlacePickerCacheIdentity' declared_type='NSString*' type='@' const='true'/>
<constant name='FBSBJSONErrorDomain' declared_type='NSString*' type='@'/>
<constant name='FBSessionDidBecomeClosedActiveSessionNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='FBSessionDidBecomeOpenActiveSessionNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='FBSessionDidSetActiveSessionNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='FBSessionDidUnsetActiveSessionNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='FBTokenInformationExpirationDateKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBTokenInformationIsFacebookLoginKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBTokenInformationLoginTypeLoginKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBTokenInformationPermissionsKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBTokenInformationRefreshDateKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBTokenInformationTokenKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FBTokenInformationUserFBIDKey' declared_type='NSString*' type='@' const='true'/>
<constant name='FacebookSDKDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='ISO8601DefaultTimeSeparatorCharacter' declared_type='unichar' type='S'/>
<constant name='RKDefaultSeedDatabaseFileName' declared_type='NSString*' type='@' const='true'/>
<constant name='RKEntityDescriptionPrimaryKeyAttributeUserInfoKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKEntityDescriptionPrimaryKeyAttributeValuePredicateSubstitutionVariable' declared_type='NSString*' type='@' const='true'/>
<constant name='RKErrorDomain' declared_type='NSString*' type='@' const='true'/>
<constant name='RKErrorNotificationErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKMIMETypeFormURLEncoded' declared_type='NSString*' type='@' const='true'/>
<constant name='RKMIMETypeJSON' declared_type='NSString*' type='@' const='true'/>
<constant name='RKMIMETypeTextXML' declared_type='NSString*' type='@' const='true'/>
<constant name='RKMIMETypeXML' declared_type='NSString*' type='@' const='true'/>
<constant name='RKManagedObjectStoreDidFailSaveNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKObjectManagerDidBecomeOfflineNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKObjectManagerDidBecomeOnlineNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKObjectMapperErrorObjectsKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKReachabilityDidChangeNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKReachabilityFlagsUserInfoKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKReachabilityWasDeterminedNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestCacheDateHeaderKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestCacheMIMETypeHeadersKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestCachePermanentCacheDirectory' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestCacheSessionCacheDirectory' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestCacheStatusCodeHeadersKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestCacheURLHeadersKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestDidFailWithErrorNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestDidFailWithErrorNotificationUserInfoErrorKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestDidFinishLoadingNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestDidLoadResponseNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestDidLoadResponseNotificationUserInfoResponseKey' declared_type='NSString*' type='@' const='true'/>
<constant name='RKRequestSentNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKSearchWordPrimaryKeyAttribute' declared_type='NSString*' type='@' const='true'/>
<constant name='RKServiceDidBecomeUnavailableNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKTableControllerDidBecomeOffline' declared_type='NSString*' type='@' const='true'/>
<constant name='RKTableControllerDidBecomeOnline' declared_type='NSString*' type='@' const='true'/>
<constant name='RKTableControllerDidFinishLoadNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKTableControllerDidLoadEmptyNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKTableControllerDidLoadErrorNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKTableControllerDidLoadObjectsNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='RKTableControllerDidStartLoadNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='SDWebImageDownloadStartNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='SDWebImageDownloadStopNotification' declared_type='NSString*' type='@' const='true'/>
<constant name='defaultRadius' declared_type='NSInteger' type='i' const='true'/>
<constant name='defaultResultsLimit' declared_type='NSInteger' type='i' const='true'/>
<constant name='kSecondTestUserTag' declared_type='NSString*' type='@'/>
<constant name='kThirdTestUserTag' declared_type='NSString*' type='@'/>
<string_constant name='FB_BASE_URL' value='facebook.com' nsstring='true'/>
<string_constant name='FB_IOS_SDK_MIGRATION_BUNDLE' value='fbsdk:20121003' nsstring='true'/>
<string_constant name='FB_IOS_SDK_VERSION_STRING' value='3.1.1' nsstring='true'/>
<enum name='ECTRL' value='5'/>
<enum name='EDEPTH' value='7'/>
<enum name='EEOF' value='11'/>
<enum name='EESCAPE' value='8'/>
<enum name='EFRAGMENT' value='4'/>
<enum name='EINPUT' value='12'/>
<enum name='EPARSE' value='3'/>
<enum name='EPARSENUM' value='2'/>
<enum name='ETRAILCOMMA' value='9'/>
<enum name='ETRAILGARBAGE' value='10'/>
<enum name='EUNICODE' value='6'/>
<enum name='EUNSUPPORTED' value='1'/>
<enum name='FBErrorHTTPError' value='5'/>
<enum name='FBErrorInvalid' value='0'/>
<enum name='FBErrorLoginFailedOrCancelled' value='2'/>
<enum name='FBErrorNativeDialog' value='7'/>
<enum name='FBErrorNonTextMimeTypeReturned' value='6'/>
<enum name='FBErrorOperationCancelled' value='1'/>
<enum name='FBErrorProtocolMismatch' value='4'/>
<enum name='FBErrorRequestConnectionApi' value='3'/>
<enum name='FBFriendDisplayByFirstName' value='0'/>
<enum name='FBFriendDisplayByLastName' value='1'/>
<enum name='FBFriendSortByFirstName' value='0'/>
<enum name='FBFriendSortByLastName' value='1'/>
<enum name='FBGraphObjectPagingModeAsNeeded' value='2'/>
<enum name='FBGraphObjectPagingModeImmediate' value='0'/>
<enum name='FBGraphObjectPagingModeImmediateViewless' value='1'/>
<enum name='FBNativeDialogResultCancelled' value='1'/>
<enum name='FBNativeDialogResultError' value='2'/>
<enum name='FBNativeDialogResultSucceeded' value='0'/>
<enum name='FBProfilePictureCroppingOriginal' value='1'/>
<enum name='FBProfilePictureCroppingSquare' value='0'/>
<enum name='FBSessionDefaultAudienceEveryone' value='30'/>
<enum name='FBSessionDefaultAudienceFriends' value='20'/>
<enum name='FBSessionDefaultAudienceNone' value='0'/>
<enum name='FBSessionDefaultAudienceOnlyMe' value='10'/>
<enum name='FBSessionLoginBehaviorForcingWebView' value='2'/>
<enum name='FBSessionLoginBehaviorUseSystemAccountIfPresent' value='3'/>
<enum name='FBSessionLoginBehaviorWithFallbackToWebView' value='0'/>
<enum name='FBSessionLoginBehaviorWithNoFallbackToWebView' value='1'/>
<enum name='FBSessionLoginTypeFacebookApplication' value='2'/>
<enum name='FBSessionLoginTypeFacebookViaSafari' value='3'/>
<enum name='FBSessionLoginTypeNone' value='0'/>
<enum name='FBSessionLoginTypeSystemAccount' value='1'/>
<enum name='FBSessionLoginTypeTestUser' value='5'/>
<enum name='FBSessionLoginTypeWebView' value='4'/>
<enum name='FBSessionStateClosed' value='258'/>
<enum name='FBSessionStateClosedLoginFailed' value='257'/>
<enum name='FBSessionStateCreated' value='0'/>
<enum name='FBSessionStateCreatedOpening' value='2'/>
<enum name='FBSessionStateCreatedTokenLoaded' value='1'/>
<enum name='FBSessionStateOpen' value='513'/>
<enum name='FBSessionStateOpenTokenExtended' value='514'/>
<enum name='FB_SESSIONSTATEOPENBIT' value='512'/>
<enum name='FB_SESSIONSTATETERMINALBIT' value='256'/>
<enum name='FileHashDefaultChunkSizeForReadingData' value='4096'/>
<enum name='ISO8601DateFormatCalendar' value='0'/>
<enum name='ISO8601DateFormatOrdinal' value='1'/>
<enum name='ISO8601DateFormatWeek' value='2'/>
<enum name='JKParseOptionComments' value='1'/>
<enum name='JKParseOptionLooseUnicode' value='4'/>
<enum name='JKParseOptionNone' value='0'/>
<enum name='JKParseOptionPermitTextAfterValidJSON' value='8'/>
<enum name='JKParseOptionStrict' value='0'/>
<enum name='JKParseOptionUnicodeNewlines' value='2'/>
<enum name='JKParseOptionValidFlags' value='15'/>
<enum name='JKSerializeOptionEscapeForwardSlashes' value='16'/>
<enum name='JKSerializeOptionEscapeUnicode' value='2'/>
<enum name='JKSerializeOptionNone' value='0'/>
<enum name='JKSerializeOptionPretty' value='1'/>
<enum name='JKSerializeOptionValidFlags' value='19'/>
<enum name='JSONKIT_VERSION_MAJOR' value='1'/>
<enum name='JSONKIT_VERSION_MINOR' value='4'/>
<enum name='KKGridViewAnimationExplode' value='6'/>
<enum name='KKGridViewAnimationFade' value='0'/>
<enum name='KKGridViewAnimationImplode' value='7'/>
<enum name='KKGridViewAnimationNone' value='8'/>
<enum name='KKGridViewAnimationResize' value='1'/>
<enum name='KKGridViewAnimationSlideBottom' value='5'/>
<enum name='KKGridViewAnimationSlideLeft' value='2'/>
<enum name='KKGridViewAnimationSlideRight' value='4'/>
<enum name='KKGridViewAnimationSlideTop' value='3'/>
<enum name='KKGridViewCellAccessoryPositionBottomLeft' value='2'/>
<enum name='KKGridViewCellAccessoryPositionBottomRight' value='3'/>
<enum name='KKGridViewCellAccessoryPositionCenter' value='4'/>
<enum name='KKGridViewCellAccessoryPositionTopLeft' value='1'/>
<enum name='KKGridViewCellAccessoryPositionTopRight' value='0'/>
<enum name='KKGridViewCellAccessoryTypeBadgeExclamatory' value='6'/>
<enum name='KKGridViewCellAccessoryTypeBadgeNumeric' value='7'/>
<enum name='KKGridViewCellAccessoryTypeCheckmark' value='8'/>
<enum name='KKGridViewCellAccessoryTypeDelete' value='4'/>
<enum name='KKGridViewCellAccessoryTypeInfo' value='5'/>
<enum name='KKGridViewCellAccessoryTypeNew' value='3'/>
<enum name='KKGridViewCellAccessoryTypeNone' value='0'/>
<enum name='KKGridViewCellAccessoryTypeReadPartial' value='2'/>
<enum name='KKGridViewCellAccessoryTypeUnread' value='1'/>
<enum name='KKGridViewCellAppearanceStyleAppleDefault' value='0'/>
<enum name='KKGridViewCellAppearanceStyleChristianDalonzo' value='1'/>
<enum name='KKGridViewDefaultAnimationDuration' value='0.25'/>
<enum name='KKGridViewLayoutDirectionHorizontal' value='1'/>
<enum name='KKGridViewLayoutDirectionVertical' value='0'/>
<enum name='KKGridViewScrollPositionBottom' value='3'/>
<enum name='KKGridViewScrollPositionMiddle' value='2'/>
<enum name='KKGridViewScrollPositionNone' value='0'/>
<enum name='KKGridViewScrollPositionTop' value='1'/>
<enum name='KKGridViewUpdateSignNegative' value='-1'/>
<enum name='KKGridViewUpdateSignPositive' value='1'/>
<enum name='KKGridViewUpdateTypeItemDelete' value='1'/>
<enum name='KKGridViewUpdateTypeItemInsert' value='0'/>
<enum name='KKGridViewUpdateTypeItemMove' value='3'/>
<enum name='KKGridViewUpdateTypeItemReload' value='2'/>
<enum name='KKGridViewUpdateTypeSectionDelete' value='5'/>
<enum name='KKGridViewUpdateTypeSectionInsert' value='4'/>
<enum name='KKGridViewUpdateTypeSectionReload' value='6'/>
<enum name='RKFormControlTypeLabel' value='4'/>
<enum name='RKFormControlTypeSlider' value='3'/>
<enum name='RKFormControlTypeSwitch' value='2'/>
<enum name='RKFormControlTypeTextField' value='0'/>
<enum name='RKFormControlTypeTextFieldSecure' value='1'/>
<enum name='RKFormControlTypeUnknown' value='1000'/>
<enum name='RKLogComponent' value='14'/>
<enum name='RKLogLevelCritical' value='1'/>
<enum name='RKLogLevelDebug' value='5'/>
<enum name='RKLogLevelDefault' value='3'/>
<enum name='RKLogLevelError' value='2'/>
<enum name='RKLogLevelInfo' value='4'/>
<enum name='RKLogLevelOff' value='0'/>
<enum name='RKLogLevelTrace' value='6'/>
<enum name='RKLogLevelWarning' value='3'/>
<enum name='RKOAuthClientErrorInvalidClient' value='3003'/>
<enum name='RKOAuthClientErrorInvalidGrant' value='3001'/>
<enum name='RKOAuthClientErrorInvalidRequest' value='3004'/>
<enum name='RKOAuthClientErrorInvalidScope' value='3006'/>
<enum name='RKOAuthClientErrorRequestFailure' value='3007'/>
<enum name='RKOAuthClientErrorUnauthorizedClient' value='3002'/>
<enum name='RKOAuthClientErrorUnknown' value='0'/>
<enum name='RKOAuthClientErrorUnsupportedGrantType' value='3005'/>
<enum name='RKObjectLoaderRemoteSystemError' value='1'/>
<enum name='RKObjectLoaderUnexpectedResponseError' value='4'/>
<enum name='RKObjectManagerNetworkStatusOffline' value='1'/>
<enum name='RKObjectManagerNetworkStatusOnline' value='2'/>
<enum name='RKObjectManagerNetworkStatusUnknown' value='0'/>
<enum name='RKObjectMapperErrorFromMappingResult' value='1004'/>
<enum name='RKObjectMapperErrorObjectMappingNotFound' value='1001'/>
<enum name='RKObjectMapperErrorObjectMappingTypeMismatch' value='1002'/>
<enum name='RKObjectMapperErrorUnmappableContent' value='1003'/>
<enum name='RKObjectMapperErrorValidationFailure' value='1005'/>
<enum name='RKObjectMappingProviderContextErrors' value='1004'/>
<enum name='RKObjectMappingProviderContextObjectsByKeyPath' value='1000'/>
<enum name='RKObjectMappingProviderContextObjectsByResourcePathPattern' value='1002'/>
<enum name='RKObjectMappingProviderContextObjectsByType' value='1001'/>
<enum name='RKObjectMappingProviderContextPagination' value='1005'/>
<enum name='RKObjectMappingProviderContextSerialization' value='1003'/>
<enum name='RKReachabilityIndeterminate' value='0'/>
<enum name='RKReachabilityNotReachable' value='1'/>
<enum name='RKReachabilityReachableViaWWAN' value='3'/>
<enum name='RKReachabilityReachableViaWiFi' value='2'/>
<enum name='RKRefreshIdle' value='0'/>
<enum name='RKRefreshLoading' value='2'/>
<enum name='RKRefreshTriggered' value='1'/>
<enum name='RKRequestAuthenticationTypeHTTP' value='1'/>
<enum name='RKRequestAuthenticationTypeHTTPBasic' value='2'/>
<enum name='RKRequestAuthenticationTypeNone' value='0'/>
<enum name='RKRequestAuthenticationTypeOAuth1' value='3'/>
<enum name='RKRequestAuthenticationTypeOAuth2' value='4'/>
<enum name='RKRequestBackgroundPolicyCancel' value='1'/>
<enum name='RKRequestBackgroundPolicyContinue' value='2'/>
<enum name='RKRequestBackgroundPolicyNone' value='0'/>
<enum name='RKRequestBackgroundPolicyRequeue' value='3'/>
<enum name='RKRequestBaseURLOfflineError' value='2'/>
<enum name='RKRequestCachePolicyDefault' value='20'/>
<enum name='RKRequestCachePolicyEnabled' value='8'/>
<enum name='RKRequestCachePolicyEtag' value='4'/>
<enum name='RKRequestCachePolicyLoadIfOffline' value='1'/>
<enum name='RKRequestCachePolicyLoadOnError' value='2'/>
<enum name='RKRequestCachePolicyNone' value='0'/>
<enum name='RKRequestCachePolicyTimeout' value='16'/>
<enum name='RKRequestCacheStoragePolicyDisabled' value='0'/>
<enum name='RKRequestCacheStoragePolicyForDurationOfSession' value='1'/>
<enum name='RKRequestCacheStoragePolicyPermanently' value='2'/>
<enum name='RKRequestConnectionTimeoutError' value='5'/>
<enum name='RKRequestMethodDELETE' value='3'/>
<enum name='RKRequestMethodGET' value='0'/>
<enum name='RKRequestMethodHEAD' value='4'/>
<enum name='RKRequestMethodInvalid' value='-1'/>
<enum name='RKRequestMethodPOST' value='1'/>
<enum name='RKRequestMethodPUT' value='2'/>
<enum name='RKRequestUnexpectedResponseError' value='3'/>
<enum name='RKSearchModeAnd' value='0'/>
<enum name='RKSearchModeOr' value='1'/>
<enum name='RKTableControllerStateEmpty' value='4'/>
<enum name='RKTableControllerStateError' value='8'/>
<enum name='RKTableControllerStateLoading' value='2'/>
<enum name='RKTableControllerStateNormal' value='0'/>
<enum name='RKTableControllerStateNotYetLoaded' value='4278190080'/>
<enum name='RKTableControllerStateOffline' value='16'/>
<enum name='SDWebImageCacheMemoryOnly' value='4'/>
<enum name='SDWebImageLowPriority' value='2'/>
<enum name='SDWebImageProgressiveDownload' value='8'/>
<enum name='SDWebImageRetryFailed' value='1'/>
<enum name='SJNotificationLevelError' value='0'/>
<enum name='SJNotificationLevelMessage' value='1'/>
<enum name='SJNotificationLevelSuccess' value='2'/>
<enum name='kFBRequestStateComplete' value='2'/>
<enum name='kFBRequestStateError' value='3'/>
<enum name='kFBRequestStateLoading' value='1'/>
<enum name='kFBRequestStateReady' value='0'/>
<enum name='lcl_cApp' value='14'/>
<enum name='lcl_cRestKit' value='0'/>
<enum name='lcl_cRestKitCoreData' value='6'/>
<enum name='lcl_cRestKitCoreDataCache' value='7'/>
<enum name='lcl_cRestKitCoreDataSearchEngine' value='8'/>
<enum name='lcl_cRestKitNetwork' value='1'/>
<enum name='lcl_cRestKitNetworkCache' value='2'/>
<enum name='lcl_cRestKitNetworkQueue' value='3'/>
<enum name='lcl_cRestKitNetworkReachability' value='4'/>
<enum name='lcl_cRestKitObjectMapping' value='5'/>
<enum name='lcl_cRestKitSupport' value='9'/>
<enum name='lcl_cRestKitSupportParsers' value='10'/>
<enum name='lcl_cRestKitTesting' value='13'/>
<enum name='lcl_cRestKitThree20' value='11'/>
<enum name='lcl_cRestKitUI' value='12'/>
<enum name='lcl_vCritical' value='1'/>
<enum name='lcl_vDebug' value='5'/>
<enum name='lcl_vError' value='2'/>
<enum name='lcl_vInfo' value='4'/>
<enum name='lcl_vOff' value='0'/>
<enum name='lcl_vTrace' value='6'/>
<enum name='lcl_vWarning' value='3'/>
<function inline='true' name='KKCGRectIntersectsRectVertically'>
<arg name='rect1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='rect2' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='KKCGRectIntersectsRectVerticallyWithPositiveNegativeMargin'>
<arg name='rect1' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='rect2' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='margin' declared_type='CGFloat' type='f'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NewBase64Encode'>
<arg name='inputBuffer' declared_type='void*' type='^v' const='true'/>
<arg name='length' declared_type='size_t' type='L'/>
<arg name='separateLines' declared_type='_Bool' type='B'/>
<arg name='outputLength' declared_type='size_t*' type='^I'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='RKAlert'>
<arg name='message' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKAlertWithTitle'>
<arg name='message' declared_type='NSString*' type='@'/>
<arg name='title' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogInitialize'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogValidationError'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKMakePathWithObject'>
<arg name='path' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKMakePathWithObjectAddingEscapes'>
<arg name='pattern' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<arg name='addEscapes' declared_type='BOOL' type='B'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKMakeURL'>
<arg name='resourcePath' declared_type='NSString*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</function>
<function name='RKMakeURLPath'>
<arg name='resourcePath' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPathAppendQueryParams'>
<arg name='resourcePath' declared_type='NSString*' type='@'/>
<arg name='queryParams' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKRequestMethodNameFromType'>
<arg declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKRequestMethodTypeFromName'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='RKRequestMethod' type='i'/>
</function>
<function inline='true' name='SDScaledImageForPath'>
<arg name='path' declared_type='NSString*' type='@'/>
<arg name='imageOrData' declared_type='NSObject*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='lcl_configure_by_component'>
<arg name='component' declared_type='_lcl_component_t' type='I'/>
<arg name='level' declared_type='_lcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='lcl_configure_by_header'>
<arg name='header' declared_type='char*' type='*' const='true'/>
<arg name='level' declared_type='_lcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='lcl_configure_by_identifier'>
<arg name='identifier' declared_type='char*' type='*' const='true'/>
<arg name='level' declared_type='_lcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='lcl_configure_by_name'>
<arg name='name' declared_type='char*' type='*' const='true'/>
<arg name='level' declared_type='_lcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<class name='FBCacheDescriptor'>
<method selector='prefetchAndCacheForSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBCacheIndex'>
<method selector='currentDiskUsage'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='databaseQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='diskCapacity'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='entryCacheCountLimit'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='fileNameForKey:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithCacheFolder:'>
<arg name='folderPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeEntries:excludingFragment:'>
<arg name='keyFragment' declared_type='NSString*' index='0' type='@'/>
<arg name='exclude' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeEntryForKey:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDiskCapacity:'>
<arg name='diskCapacity' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntryCacheCountLimit:'>
<arg name='entryCacheCountLimit' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeFileForKey:withData:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='data' declared_type='NSData*' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBContentLink'>
<method selector='actionTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithURL:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='originalQueryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='ref'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='source'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='targetURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
</class>
<class name='FBDataDiskCache'>
<method selector='cacheSizeMemory'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='dataForURL:'>
<arg name='dataURL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='fileQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='removeDataForSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeDataForUrl:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheSizeMemory:'>
<arg name='cacheSizeMemory' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:forURL:'>
<arg name='data' declared_type='NSData*' index='0' type='@'/>
<arg name='url' declared_type='NSURL*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedCache'>
<retval declared_type='FBDataDiskCache*' type='@'/>
</method>
</class>
<class name='FBDialog'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dialogDidCancel:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialogDidSucceed:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialogWillAppear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialogWillDisappear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissWithError:animated:'>
<arg name='error' declared_type='NSError*' index='0' type='@'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissWithSuccess:animated:'>
<arg name='success' declared_type='BOOL' index='0' type='B'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getStringFromUrl:needle:'>
<arg name='url' declared_type='NSString*' index='0' type='@'/>
<arg name='needle' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithURL:params:isViewInvisible:frictionlessSettings:delegate:'>
<arg name='loadingURL' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSMutableDictionary*' index='1' type='@'/>
<arg name='isViewInvisible' declared_type='BOOL' index='2' type='B'/>
<arg name='frictionlessSettings' declared_type='FBFrictionlessRequestSettings*' index='3' type='@'/>
<arg name='delegate' declared_type='id' index='4' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadURL:get:'>
<arg name='url' declared_type='NSString*' index='0' type='@'/>
<arg name='getParams' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='params'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParams:'>
<arg name='params' declared_type='NSMutableDictionary*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBFrictionlessRequestSettings'>
<method selector='enableWithFacebook:'>
<arg name='facebook' declared_type='Facebook*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFrictionlessEnabledForRecipient:'>
<arg name='fbid' declared_type='id' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFrictionlessEnabledForRecipients:'>
<arg name='fbids' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reloadRecipientCacheWithFacebook:'>
<arg name='facebook' declared_type='Facebook*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateRecipientCacheWithRecipients:'>
<arg name='ids' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBFriendPickerCacheDescriptor'>
<method selector='fieldsForRequest'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFieldsForRequest:'>
<arg name='fieldsForRequest' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUserID:'>
<arg name='userID' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUserID:fieldsForRequest:'>
<arg name='userID' declared_type='NSString*' index='0' type='@'/>
<arg name='fieldsForRequest' declared_type='NSSet*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='userID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBFriendPickerViewController'>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='cacheDescriptor'>
<retval declared_type='FBCacheDescriptor*' type='@'/>
</method>
<method class_method='true' selector='cacheDescriptorWithUserID:fieldsForRequest:'>
<arg name='userID' declared_type='NSString*' index='0' type='@'/>
<arg name='fieldsForRequest' declared_type='NSSet*' index='1' type='@'/>
<retval declared_type='FBCacheDescriptor*' type='@'/>
</method>
<method selector='clearSelection'>
<retval declared_type='void' type='v'/>
</method>
<method selector='configureUsingCachedDescriptor:'>
<arg name='cacheDescriptor' declared_type='FBCacheDescriptor*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayOrdering'>
<retval declared_type='FBFriendDisplayOrdering' type='i'/>
</method>
<method selector='fieldsForRequest'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg name='aDecoder' declared_type='NSCoder*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg name='nibNameOrNil' declared_type='NSString*' index='0' type='@'/>
<arg name='nibBundleOrNil' declared_type='NSBundle*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemPicturesEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadData'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requestWithUserID:fields:dataSource:session:'>
<arg name='userID' declared_type='NSString*' index='0' type='@'/>
<arg name='fields' declared_type='NSSet*' index='1' type='@'/>
<arg name='datasource' declared_type='FBGraphObjectTableDataSource*' index='2' type='@'/>
<arg name='session' declared_type='FBSession*' index='3' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='selection'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='FBSession*' type='@'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg name='allowsMultipleSelection' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayOrdering:'>
<arg name='displayOrdering' declared_type='FBFriendDisplayOrdering' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldsForRequest:'>
<arg name='fieldsForRequest' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemPicturesEnabled:'>
<arg name='itemPicturesEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortOrdering:'>
<arg name='sortOrdering' declared_type='FBFriendSortOrdering' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpinner:'>
<arg name='spinner' declared_type='UIActivityIndicatorView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableView:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserID:'>
<arg name='userID' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortOrdering'>
<retval declared_type='FBFriendSortOrdering' type='i'/>
</method>
<method selector='spinner'>
<retval declared_type='UIActivityIndicatorView*' type='@'/>
</method>
<method selector='tableView'>
<retval declared_type='UITableView*' type='@'/>
</method>
<method selector='updateView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBGraphObject'>
<method class_method='true' selector='graphObject'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method class_method='true' selector='graphObjectWrappingDictionary:'>
<arg name='jsonDictionary' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method class_method='true' selector='isGraphObjectID:sameAs:'>
<arg name='anObject' declared_type='id' index='0' type='@'/>
<arg name='anotherObject' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='FBGraphObjectPagingLoader'>
<method selector='addResultsAndUpdateView:'>
<arg name='results' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataSource'>
<retval declared_type='FBGraphObjectTableDataSource*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDataSource:pagingMode:'>
<arg name='aDataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='pagingMode' declared_type='FBGraphObjectPagingMode' index='1' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isResultFromCache'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pagingMode'>
<retval declared_type='FBGraphObjectPagingMode' type='i'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='session'>
<retval declared_type='FBSession*' type='@'/>
</method>
<method selector='setDataSource:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableView:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startLoadingWithRequest:cacheIdentity:skipRoundtripIfCached:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='cacheIdentity' declared_type='NSString*' index='1' type='@'/>
<arg name='skipRoundtripIfCached' declared_type='BOOL' index='2' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView'>
<retval declared_type='UITableView*' type='@'/>
</method>
</class>
<class name='FBGraphObjectTableCell'>
<method selector='boldTitle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boldTitleSuffix'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='picture'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='rowHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setBoldTitle:'>
<arg name='boldTitle' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoldTitleSuffix:'>
<arg name='boldTitleSuffix' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPicture:'>
<arg name='picture' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitle:'>
<arg name='subtitle' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg name='title' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleSuffix:'>
<arg name='titleSuffix' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimatingActivityIndicator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimatingActivityIndicator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleSuffix'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBGraphObjectTableDataSource'>
<method selector='appendGraphObjects:'>
<arg name='data' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bindTableView:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelPendingRequests'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearGraphObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='controllerDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dataNeededDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultPicture'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method variadic='true' selector='fieldsForRequestIncluding:'>
<arg name='customFields' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupByField'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasGraphObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexPathForItem:'>
<arg name='item' declared_type='FBGraphObject*' index='0' type='@'/>
<retval declared_type='NSIndexPath*' type='@'/>
</method>
<method selector='itemAtIndexPath:'>
<arg name='indexPath' declared_type='NSIndexPath*' index='0' type='@'/>
<retval declared_type='FBGraphObject*' type='@'/>
</method>
<method selector='itemPicturesEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemSubtitleEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemTitleSuffixEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareForNewRequest'>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectionDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setControllerDelegate:'>
<arg name='controllerDelegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataNeededDelegate:'>
<arg name='dataNeededDelegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultPicture:'>
<arg name='defaultPicture' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupByField:'>
<arg name='groupByField' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemPicturesEnabled:'>
<arg name='itemPicturesEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSubtitleEnabled:'>
<arg name='itemSubtitleEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemTitleSuffixEnabled:'>
<arg name='itemTitleSuffixEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionDelegate:'>
<arg name='selectionDelegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg name='sortDescriptors' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortingByFields:ascending:'>
<arg name='fieldNames' declared_type='NSArray*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortingBySingleField:ascending:'>
<arg name='fieldName' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseCollation:'>
<arg name='useCollation' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='update'>
<retval declared_type='void' type='v'/>
</method>
<method selector='useCollation'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='FBGraphObjectTableSelection'>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearSelectionInTableView:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='initWithDataSource:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='selection'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg name='allowsMultipleSelection' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='NSObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBLogger'>
<method variadic='true' selector='appendFormat:'>
<arg name='formatString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendKey:value:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contents'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='emitToNSLog'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithLoggingBehavior:'>
<arg name='loggingBehavior' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loggerSerialNumber'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='loggingBehavior'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='newSerialNumber'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='registerCurrentTime:withTag:'>
<arg name='loggingBehavior' declared_type='NSString*' index='0' type='@'/>
<arg name='timestampTag' declared_type='NSObject*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='registerStringToReplace:replaceWith:'>
<arg name='replace' declared_type='NSString*' index='0' type='@'/>
<arg name='replaceWith' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContents:'>
<arg name='contents' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' variadic='true' selector='singleShotLogEntry:formatString:'>
<arg name='loggingBehavior' declared_type='NSString*' index='0' type='@'/>
<arg name='formatString' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='singleShotLogEntry:logEntry:'>
<arg name='loggingBehavior' declared_type='NSString*' index='0' type='@'/>
<arg name='logEntry' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' variadic='true' selector='singleShotLogEntry:timestampTag:formatString:'>
<arg name='loggingBehavior' declared_type='NSString*' index='0' type='@'/>
<arg name='timestampTag' declared_type='NSObject*' index='1' type='@'/>
<arg name='formatString' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBLoginDialog'>
<method selector='initWithURL:loginParams:delegate:'>
<arg name='loginURL' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSMutableDictionary*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='FBLoginView'>
<method selector='defaultAudience'>
<retval declared_type='FBSessionDefaultAudience' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPermissions:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPublishPermissions:defaultAudience:'>
<arg name='publishPermissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='defaultAudience' declared_type='FBSessionDefaultAudience' index='1' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithReadPermissions:'>
<arg name='readPermissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='permissions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='publishPermissions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='readPermissions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setDefaultAudience:'>
<arg name='defaultAudience' declared_type='FBSessionDefaultAudience' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPermissions:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublishPermissions:'>
<arg name='publishPermissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReadPermissions:'>
<arg name='readPermissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBNativeDialogs'>
<method class_method='true' selector='canPresentShareDialogWithSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='presentShareDialogModallyFrom:initialText:image:url:handler:'>
<arg name='viewController' declared_type='UIViewController*' index='0' type='@'/>
<arg name='initialText' declared_type='NSString*' index='1' type='@'/>
<arg name='image' declared_type='UIImage*' index='2' type='@'/>
<arg name='url' declared_type='NSURL*' index='3' type='@'/>
<arg name='handler' declared_type='FBShareDialogHandler' index='4' function_pointer='true' type='@?'>
<arg declared_type='FBNativeDialogResult' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='presentShareDialogModallyFrom:initialText:images:urls:handler:'>
<arg name='viewController' declared_type='UIViewController*' index='0' type='@'/>
<arg name='initialText' declared_type='NSString*' index='1' type='@'/>
<arg name='images' declared_type='NSArray*' index='2' type='@'/>
<arg name='urls' declared_type='NSArray*' index='3' type='@'/>
<arg name='handler' declared_type='FBShareDialogHandler' index='4' function_pointer='true' type='@?'>
<arg declared_type='FBNativeDialogResult' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='presentShareDialogModallyFrom:session:initialText:images:urls:handler:'>
<arg name='viewController' declared_type='UIViewController*' index='0' type='@'/>
<arg name='session' declared_type='FBSession*' index='1' type='@'/>
<arg name='initialText' declared_type='NSString*' index='2' type='@'/>
<arg name='images' declared_type='NSArray*' index='3' type='@'/>
<arg name='urls' declared_type='NSArray*' index='4' type='@'/>
<arg name='handler' declared_type='FBShareDialogHandler' index='5' function_pointer='true' type='@?'>
<arg declared_type='FBNativeDialogResult' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='FBPlacePickerCacheDescriptor'>
<method selector='fieldsForRequest'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='initWithLocationCoordinate:radiusInMeters:searchText:resultsLimit:fieldsForRequest:'>
<arg name='locationCoordinate' declared_type='CLLocationCoordinate2D' index='0' type='{_CLLocationCoordinate2D=dd}'/>
<arg name='radiusInMeters' declared_type='NSInteger' index='1' type='i'/>
<arg name='searchText' declared_type='NSString*' index='2' type='@'/>
<arg name='resultsLimit' declared_type='NSInteger' index='3' type='i'/>
<arg name='fieldsForRequest' declared_type='NSSet*' index='4' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='locationCoordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='radiusInMeters'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='resultsLimit'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='searchText'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBPlacePickerViewController'>
<method class_method='true' selector='cacheDescriptorWithLocationCoordinate:radiusInMeters:searchText:resultsLimit:fieldsForRequest:'>
<arg name='locationCoordinate' declared_type='CLLocationCoordinate2D' index='0' type='{_CLLocationCoordinate2D=dd}'/>
<arg name='radiusInMeters' declared_type='NSInteger' index='1' type='i'/>
<arg name='searchText' declared_type='NSString*' index='2' type='@'/>
<arg name='resultsLimit' declared_type='NSInteger' index='3' type='i'/>
<arg name='fieldsForRequest' declared_type='NSSet*' index='4' type='@'/>
<retval declared_type='FBCacheDescriptor*' type='@'/>
</method>
<method selector='clearSelection'>
<retval declared_type='void' type='v'/>
</method>
<method selector='configureUsingCachedDescriptor:'>
<arg name='cacheDescriptor' declared_type='FBCacheDescriptor*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fieldsForRequest'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg name='aDecoder' declared_type='NSCoder*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg name='nibNameOrNil' declared_type='NSString*' index='0' type='@'/>
<arg name='nibBundleOrNil' declared_type='NSBundle*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemPicturesEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationCoordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='radiusInMeters'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method class_method='true' selector='requestForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:fields:datasource:session:'>
<arg name='coordinate' declared_type='CLLocationCoordinate2D' index='0' type='{_CLLocationCoordinate2D=dd}'/>
<arg name='radius' declared_type='NSInteger' index='1' type='i'/>
<arg name='resultsLimit' declared_type='NSInteger' index='2' type='i'/>
<arg name='searchText' declared_type='NSString*' index='3' type='@'/>
<arg name='fieldsForRequest' declared_type='NSSet*' index='4' type='@'/>
<arg name='datasource' declared_type='FBGraphObjectTableDataSource*' index='5' type='@'/>
<arg name='session' declared_type='FBSession*' index='6' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='resultsLimit'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='searchText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='selection'>
<retval declared_type='id' type='@'/>
</method>
<method selector='session'>
<retval declared_type='FBSession*' type='@'/>
</method>
<method selector='setFieldsForRequest:'>
<arg name='fieldsForRequest' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemPicturesEnabled:'>
<arg name='itemPicturesEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocationCoordinate:'>
<arg name='locationCoordinate' declared_type='CLLocationCoordinate2D' index='0' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusInMeters:'>
<arg name='radiusInMeters' declared_type='NSInteger' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResultsLimit:'>
<arg name='resultsLimit' declared_type='NSInteger' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchText:'>
<arg name='searchText' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpinner:'>
<arg name='spinner' declared_type='UIActivityIndicatorView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableView:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spinner'>
<retval declared_type='UIActivityIndicatorView*' type='@'/>
</method>
<method selector='tableView'>
<retval declared_type='UITableView*' type='@'/>
</method>
</class>
<class name='FBProfilePictureView'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithProfileID:pictureCropping:'>
<arg name='profileID' declared_type='NSString*' index='0' type='@'/>
<arg name='pictureCropping' declared_type='FBProfilePictureCropping' index='1' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pictureCropping'>
<retval declared_type='FBProfilePictureCropping' type='i'/>
</method>
<method selector='profileID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setPictureCropping:'>
<arg name='pictureCropping' declared_type='FBProfilePictureCropping' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProfileID:'>
<arg name='profileID' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBRequest'>
<method selector='HTTPMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='connection'>
<retval declared_type='NSURLConnection*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='graphObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='graphPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='httpMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initForPostWithSession:graphPath:graphObject:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<arg name='graphPath' declared_type='NSString*' index='1' type='@'/>
<arg name='graphObject' declared_type='id' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSession:graphPath:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<arg name='graphPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSession:graphPath:parameters:HTTPMethod:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<arg name='graphPath' declared_type='NSString*' index='1' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='2' type='@'/>
<arg name='HTTPMethod' declared_type='NSString*' index='3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSession:restMethod:parameters:HTTPMethod:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<arg name='restMethod' declared_type='NSString*' index='1' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='2' type='@'/>
<arg name='HTTPMethod' declared_type='NSString*' index='3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parameters'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='params'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method class_method='true' selector='requestForGraphPath:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestForMe'>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestForMyFriends'>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:'>
<arg name='coordinate' declared_type='CLLocationCoordinate2D' index='0' type='{_CLLocationCoordinate2D=dd}'/>
<arg name='radius' declared_type='NSInteger' index='1' type='i'/>
<arg name='limit' declared_type='NSInteger' index='2' type='i'/>
<arg name='searchText' declared_type='NSString*' index='3' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestForPostStatusUpdate:'>
<arg name='message' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestForPostStatusUpdate:place:tags:'>
<arg name='message' declared_type='NSString*' index='0' type='@'/>
<arg name='place' declared_type='id' index='1' type='@'/>
<arg name='tags' declared_type='id' index='2' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestForPostWithGraphPath:graphObject:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestForUploadPhoto:'>
<arg name='photo' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method class_method='true' selector='requestWithGraphPath:parameters:HTTPMethod:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='HTTPMethod' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='responseText'>
<retval declared_type='NSMutableData*' type='@'/>
</method>
<method selector='restMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='serializeURL:params:'>
<arg name='baseUrl' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='serializeURL:params:httpMethod:'>
<arg name='baseUrl' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='httpMethod' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='FBSession*' type='@'/>
</method>
<method selector='sessionDidExpire'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setConnection:'>
<arg name='connection' declared_type='NSURLConnection*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg name='error' declared_type='NSError*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraphObject:'>
<arg name='graphObject' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraphPath:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPMethod:'>
<arg name='HTTPMethod' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHttpMethod:'>
<arg name='httpMethod' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParams:'>
<arg name='params' declared_type='NSMutableDictionary*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseText:'>
<arg name='responseText' declared_type='NSMutableData*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestMethod:'>
<arg name='restMethod' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDidExpire:'>
<arg name='sessionDidExpire' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg name='state' declared_type='FBRequestState' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUrl:'>
<arg name='url' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startWithCompletionHandler:'>
<arg name='handler' declared_type='FBRequestHandler' index='0' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method selector='state'>
<retval declared_type='FBRequestState' type='I'/>
</method>
<method selector='url'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBRequestBody'>
<method selector='appendWithKey:dataValue:logger:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='data' declared_type='NSData*' index='1' type='@'/>
<arg name='logger' declared_type='FBLogger*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendWithKey:formValue:logger:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='NSString*' index='1' type='@'/>
<arg name='logger' declared_type='FBLogger*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendWithKey:imageValue:logger:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='logger' declared_type='FBLogger*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mimeContentType'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBRequestConnection'>
<method selector='addRequest:completionHandler:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequest:completionHandler:batchEntryName:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='name' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTimeout:'>
<arg name='timeout' declared_type='NSTimeInterval' index='0' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isResultFromCache'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setUrlRequest:'>
<arg name='urlRequest' declared_type='NSMutableURLRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='startForMeWithCompletionHandler:'>
<arg name='handler' declared_type='FBRequestHandler' index='0' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method class_method='true' selector='startForMyFriendsWithCompletionHandler:'>
<arg name='handler' declared_type='FBRequestHandler' index='0' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method class_method='true' selector='startForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:completionHandler:'>
<arg name='coordinate' declared_type='CLLocationCoordinate2D' index='0' type='{_CLLocationCoordinate2D=dd}'/>
<arg name='radius' declared_type='NSInteger' index='1' type='i'/>
<arg name='limit' declared_type='NSInteger' index='2' type='i'/>
<arg name='searchText' declared_type='NSString*' index='3' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='4' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method class_method='true' selector='startForPostStatusUpdate:completionHandler:'>
<arg name='message' declared_type='NSString*' index='0' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method class_method='true' selector='startForPostStatusUpdate:place:tags:completionHandler:'>
<arg name='message' declared_type='NSString*' index='0' type='@'/>
<arg name='place' declared_type='id' index='1' type='@'/>
<arg name='tags' declared_type='id' index='2' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='3' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method class_method='true' selector='startForPostWithGraphPath:graphObject:completionHandler:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='2' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method class_method='true' selector='startForUploadPhoto:completionHandler:'>
<arg name='photo' declared_type='UIImage*' index='0' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method selector='startWithCacheIdentity:skipRoundtripIfCached:'>
<arg name='cacheIdentity' declared_type='NSString*' index='0' type='@'/>
<arg name='consultCache' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='startWithGraphPath:completionHandler:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method class_method='true' selector='startWithGraphPath:parameters:HTTPMethod:completionHandler:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='HTTPMethod' declared_type='NSString*' index='2' type='@'/>
<arg name='handler' declared_type='FBRequestHandler' index='3' function_pointer='true' type='@?'>
<arg declared_type='FBRequestConnection*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBRequestConnection*' type='@'/>
</method>
<method selector='urlRequest'>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='urlResponse'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
</class>
<class name='FBSBJSON'>
<method selector='fragmentWithString:error:'>
<arg name='jsonrep' declared_type='NSString*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithString:allowScalar:error:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<arg name='x' declared_type='BOOL' index='1' type='B'/>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithString:error:'>
<arg name='jsonrep' declared_type='NSString*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringWithFragment:error:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringWithObject:allowScalar:error:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<arg name='x' declared_type='BOOL' index='1' type='B'/>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringWithObject:error:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBSBJsonBase'>
<method selector='addErrorWithCode:description:'>
<arg name='code' declared_type='NSUInteger' index='0' type='I'/>
<arg name='str' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearErrorTrace'>
<retval declared_type='void' type='v'/>
</method>
<method selector='errorTrace'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='maxDepth'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setMaxDepth:'>
<arg name='maxDepth' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBSBJsonParser'>
<method selector='fragmentWithString:'>
<arg name='repr' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='FBSBJsonWriter'>
<method selector='stringWithFragment:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBSession'>
<method selector='accessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='activeSession'>
<retval declared_type='FBSession*' type='@'/>
</method>
<method class_method='true' selector='activeSessionIfOpen'>
<retval declared_type='FBSession*' type='@'/>
</method>
<method selector='appID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='authorizeWithPermissions:behavior:defaultAudience:isReauthorize:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='behavior' declared_type='FBSessionLoginBehavior' index='1' type='i'/>
<arg name='audience' declared_type='FBSessionDefaultAudience' index='2' type='i'/>
<arg name='isReauthorize' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeAndClearTokenInformation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeAndClearTokenInformation:'>
<arg name='error' declared_type='NSError*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultAppID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='deleteFacebookCookies'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='errorLoginFailedWithReason:errorCode:innerError:'>
<arg name='errorReason' declared_type='NSString*' index='0' type='@'/>
<arg name='errorCode' declared_type='NSString*' index='1' type='@'/>
<arg name='innerError' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='expirationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='expirationDateFromExpirationTimeString:'>
<arg name='expirationTime' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='handleDidBecomeActive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleOpenURL:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAppID:permissions:defaultAudience:urlSchemeSuffix:tokenCacheStrategy:'>
<arg name='appID' declared_type='NSString*' index='0' type='@'/>
<arg name='permissions' declared_type='NSArray*' index='1' type='@'/>
<arg name='defaultAudience' declared_type='FBSessionDefaultAudience' index='2' type='i'/>
<arg name='urlSchemeSuffix' declared_type='NSString*' index='3' type='@'/>
<arg name='tokenCachingStrategy' declared_type='FBSessionTokenCachingStrategy*' index='4' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAppID:permissions:urlSchemeSuffix:tokenCacheStrategy:'>
<arg name='appID' declared_type='NSString*' index='0' type='@'/>
<arg name='permissions' declared_type='NSArray*' index='1' type='@'/>
<arg name='urlSchemeSuffix' declared_type='NSString*' index='2' type='@'/>
<arg name='tokenCachingStrategy' declared_type='FBSessionTokenCachingStrategy*' index='3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPermissions:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loginType'>
<retval declared_type='FBSessionLoginType' type='i'/>
</method>
<method class_method='true' selector='openActiveSessionWithAllowLoginUI:'>
<arg name='allowLoginUI' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='openActiveSessionWithPermissions:allowLoginUI:completionHandler:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='allowLoginUI' declared_type='BOOL' index='1' type='B'/>
<arg name='handler' declared_type='FBSessionStateHandler' index='2' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='FBSessionState' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='openActiveSessionWithPublishPermissions:defaultAudience:allowLoginUI:completionHandler:'>
<arg name='publishPermissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='defaultAudience' declared_type='FBSessionDefaultAudience' index='1' type='i'/>
<arg name='allowLoginUI' declared_type='BOOL' index='2' type='B'/>
<arg name='handler' declared_type='FBSessionStateHandler' index='3' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='FBSessionState' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='openActiveSessionWithReadPermissions:allowLoginUI:completionHandler:'>
<arg name='readPermissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='allowLoginUI' declared_type='BOOL' index='1' type='B'/>
<arg name='handler' declared_type='FBSessionStateHandler' index='2' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='FBSessionState' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openWithBehavior:completionHandler:'>
<arg name='behavior' declared_type='FBSessionLoginBehavior' index='0' type='i'/>
<arg name='handler' declared_type='FBSessionStateHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='FBSessionState' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='openWithCompletionHandler:'>
<arg name='handler' declared_type='FBSessionStateHandler' index='0' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='FBSessionState' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='permissions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='reauthorizeWithPermissions:behavior:completionHandler:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='behavior' declared_type='FBSessionLoginBehavior' index='1' type='i'/>
<arg name='handler' declared_type='FBSessionReauthorizeResultHandler' index='2' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='reauthorizeWithPublishPermissions:defaultAudience:completionHandler:'>
<arg name='writePermissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='defaultAudience' declared_type='FBSessionDefaultAudience' index='1' type='i'/>
<arg name='handler' declared_type='FBSessionReauthorizeResultHandler' index='2' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='reauthorizeWithReadPermissions:completionHandler:'>
<arg name='readPermissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='handler' declared_type='FBSessionReauthorizeResultHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBSession*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='refreshAccessToken:expirationDate:'>
<arg name='token' declared_type='NSString*' index='0' type='@'/>
<arg name='expireDate' declared_type='NSDate*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='renewSystemAuthorization'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setActiveSession:'>
<arg name='session' declared_type='FBSession*' index='0' type='@'/>
<retval declared_type='FBSession*' type='@'/>
</method>
<method class_method='true' selector='setDefaultAppID:'>
<arg name='appID' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldExtendAccessToken'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='state'>
<retval declared_type='FBSessionState' type='i'/>
</method>
<method selector='transitionAndCallHandlerWithState:error:token:expirationDate:shouldCache:loginType:'>
<arg name='status' declared_type='FBSessionState' index='0' type='i'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<arg name='token' declared_type='NSString*' index='2' type='@'/>
<arg name='date' declared_type='NSDate*' index='3' type='@'/>
<arg name='shouldCache' declared_type='BOOL' index='4' type='B'/>
<arg name='loginType' declared_type='FBSessionLoginType' index='5' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transitionToState:andUpdateToken:andExpirationDate:shouldCache:loginType:'>
<arg name='state' declared_type='FBSessionState' index='0' type='i'/>
<arg name='token' declared_type='NSString*' index='1' type='@'/>
<arg name='date' declared_type='NSDate*' index='2' type='@'/>
<arg name='shouldCache' declared_type='BOOL' index='3' type='B'/>
<arg name='loginType' declared_type='FBSessionLoginType' index='4' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='urlSchemeSuffix'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBSessionManualTokenCachingStrategy'>
<method selector='accessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='expirationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='setAccessToken:'>
<arg name='accessToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpirationDate:'>
<arg name='expirationDate' declared_type='NSDate*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBSessionTokenCachingStrategy'>
<method selector='cacheTokenInformation:'>
<arg name='tokenInformation' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearToken'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultInstance'>
<retval declared_type='FBSessionTokenCachingStrategy*' type='@'/>
</method>
<method selector='fetchTokenInformation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUserDefaultTokenInformationKeyName:'>
<arg name='tokenInformationKeyName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='isValidTokenInformation:'>
<arg name='tokenInformation' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='FBSettings'>
<method class_method='true' selector='autoPublishInstall:'>
<arg name='appID' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='loggingBehavior'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='publishInstall:'>
<arg name='appID' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setLoggingBehavior:'>
<arg name='loggingBehavior' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setShouldAutoPublishInstall:'>
<arg name='autoPublishInstall' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shouldAutoPublishInstall'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='FBTestSession'>
<method selector='appAccessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='sessionWithPrivateUserWithPermissions:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='sessionWithSharedUserWithPermissions:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='sessionWithSharedUserWithPermissions:uniqueUserTag:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<arg name='uniqueUserTag' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='testAppID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='testAppSecret'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='testUserID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBURLConnection'>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithRequest:skipRoundTripIfCached:completionHandler:'>
<arg name='request' declared_type='NSURLRequest*' index='0' type='@'/>
<arg name='skipRoundtripIfCached' declared_type='BOOL' index='1' type='B'/>
<arg name='handler' declared_type='FBURLConnectionHandler' index='2' function_pointer='true' type='@?'>
<arg declared_type='FBURLConnection*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBURLConnection*' type='@'/>
</method>
<method selector='initWithURL:completionHandler:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='handler' declared_type='FBURLConnectionHandler' index='1' function_pointer='true' type='@?'>
<arg declared_type='FBURLConnection*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FBURLConnection*' type='@'/>
</method>
</class>
<class name='FBUserSettingsViewController'>
<method selector='defaultAudience'>
<retval declared_type='FBSessionDefaultAudience' type='i'/>
</method>
<method selector='permissions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='publishPermissions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='readPermissions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setDefaultAudience:'>
<arg name='defaultAudience' declared_type='FBSessionDefaultAudience' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPermissions:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublishPermissions:'>
<arg name='publishPermissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReadPermissions:'>
<arg name='readPermissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FBUtility'>
<method class_method='true' selector='centerView:tableView:'>
<arg name='view' declared_type='UIView*' index='0' type='@'/>
<arg name='tableView' declared_type='UITableView*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='currentTimeInMilliseconds'>
<retval declared_type='unsigned long' type='L'/>
</method>
<method class_method='true' selector='dictionaryByParsingURLQueryPart:'>
<arg name='encodedString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='facebookSDKBundle'>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method class_method='true' selector='graphObjectInArray:withSameIDAs:'>
<arg name='array' declared_type='NSArray*' index='0' type='@'/>
<arg name='item' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='localizedStringForKey:withDefault:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='localizedStringForKey:withDefault:inBundle:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='NSString*' index='1' type='@'/>
<arg name='bundle' declared_type='NSBundle*' index='2' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='randomTimeInterval:withMaxValue:'>
<arg name='minValue' declared_type='NSTimeInterval' index='0' type='d'/>
<arg name='maxValue' declared_type='NSTimeInterval' index='1' type='d'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='stringByURLDecodingString:'>
<arg name='escapedString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringByURLEncodingString:'>
<arg name='unescapedString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringFBIDFromObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FBViewController'>
<method selector='cancelButton'>
<retval declared_type='UIBarButtonItem*' type='@'/>
</method>
<method selector='canvasView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='compatiblePresentingViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='doneButton'>
<retval declared_type='UIBarButtonItem*' type='@'/>
</method>
<method selector='presentModallyFromViewController:animated:handler:'>
<arg name='viewController' declared_type='UIViewController*' index='0' type='@'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<arg name='handler' declared_type='FBModalCompletionHandler' index='2' function_pointer='true' type='@?'>
<arg declared_type='FBViewController*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButton:'>
<arg name='cancelButton' declared_type='UIBarButtonItem*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoneButton:'>
<arg name='doneButton' declared_type='UIBarButtonItem*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='Facebook'>
<method selector='accessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='authorize:'>
<arg name='permissions' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialog:andDelegate:'>
<arg name='action' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialog:andParams:andDelegate:'>
<arg name='action' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSMutableDictionary*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableFrictionlessRequests'>
<retval declared_type='void' type='v'/>
</method>
<method selector='expirationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='extendAccessToken'>
<retval declared_type='void' type='v'/>
</method>
<method selector='extendAccessTokenIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleOpenURL:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithAppId:andDelegate:'>
<arg name='appId' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAppId:urlSchemeSuffix:andDelegate:'>
<arg name='appId' declared_type='NSString*' index='0' type='@'/>
<arg name='urlSchemeSuffix' declared_type='NSString*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isFrictionlessEnabledForRecipient:'>
<arg name='fbid' declared_type='id' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFrictionlessEnabledForRecipients:'>
<arg name='fbids' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFrictionlessRequestsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSessionValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logout:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadFrictionlessRecipientCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestWithGraphPath:andDelegate:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='requestWithGraphPath:andParams:andDelegate:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSMutableDictionary*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='requestWithGraphPath:andParams:andHttpMethod:andDelegate:'>
<arg name='graphPath' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSMutableDictionary*' index='1' type='@'/>
<arg name='httpMethod' declared_type='NSString*' index='2' type='@'/>
<arg name='delegate' declared_type='id' index='3' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='requestWithMethodName:andParams:andHttpMethod:andDelegate:'>
<arg name='methodName' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSMutableDictionary*' index='1' type='@'/>
<arg name='httpMethod' declared_type='NSString*' index='2' type='@'/>
<arg name='delegate' declared_type='id' index='3' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='requestWithParams:andDelegate:'>
<arg name='params' declared_type='NSMutableDictionary*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='FBRequest*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='FBSession*' type='@'/>
</method>
<method selector='sessionDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAccessToken:'>
<arg name='accessToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpirationDate:'>
<arg name='expirationDate' declared_type='NSDate*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDelegate:'>
<arg name='sessionDelegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUrlSchemeSuffix:'>
<arg name='urlSchemeSuffix' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldExtendAccessToken'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='urlSchemeSuffix'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GCOAuth'>
<method class_method='true' selector='URLRequestForPath:GETParameters:host:consumerKey:consumerSecret:accessToken:tokenSecret:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='host' declared_type='NSString*' index='2' type='@'/>
<arg name='consumerKey' declared_type='NSString*' index='3' type='@'/>
<arg name='consumerSecret' declared_type='NSString*' index='4' type='@'/>
<arg name='accessToken' declared_type='NSString*' index='5' type='@'/>
<arg name='tokenSecret' declared_type='NSString*' index='6' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method class_method='true' selector='URLRequestForPath:GETParameters:scheme:host:consumerKey:consumerSecret:accessToken:tokenSecret:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='scheme' declared_type='NSString*' index='2' type='@'/>
<arg name='host' declared_type='NSString*' index='3' type='@'/>
<arg name='consumerKey' declared_type='NSString*' index='4' type='@'/>
<arg name='consumerSecret' declared_type='NSString*' index='5' type='@'/>
<arg name='accessToken' declared_type='NSString*' index='6' type='@'/>
<arg name='tokenSecret' declared_type='NSString*' index='7' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method class_method='true' selector='URLRequestForPath:HTTPMethod:parameters:scheme:host:consumerKey:consumerSecret:accessToken:tokenSecret:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<arg name='HTTPMethod' declared_type='NSString*' index='1' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='2' type='@'/>
<arg name='scheme' declared_type='NSString*' index='3' type='@'/>
<arg name='host' declared_type='NSString*' index='4' type='@'/>
<arg name='consumerKey' declared_type='NSString*' index='5' type='@'/>
<arg name='consumerSecret' declared_type='NSString*' index='6' type='@'/>
<arg name='accessToken' declared_type='NSString*' index='7' type='@'/>
<arg name='tokenSecret' declared_type='NSString*' index='8' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method class_method='true' selector='URLRequestForPath:POSTParameters:host:consumerKey:consumerSecret:accessToken:tokenSecret:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='host' declared_type='NSString*' index='2' type='@'/>
<arg name='consumerKey' declared_type='NSString*' index='3' type='@'/>
<arg name='consumerSecret' declared_type='NSString*' index='4' type='@'/>
<arg name='accessToken' declared_type='NSString*' index='5' type='@'/>
<arg name='tokenSecret' declared_type='NSString*' index='6' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method class_method='true' selector='URLRequestForPath:POSTParameters:scheme:host:consumerKey:consumerSecret:accessToken:tokenSecret:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<arg name='parameters' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='scheme' declared_type='NSString*' index='2' type='@'/>
<arg name='host' declared_type='NSString*' index='3' type='@'/>
<arg name='consumerKey' declared_type='NSString*' index='4' type='@'/>
<arg name='consumerSecret' declared_type='NSString*' index='5' type='@'/>
<arg name='accessToken' declared_type='NSString*' index='6' type='@'/>
<arg name='tokenSecret' declared_type='NSString*' index='7' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method class_method='true' selector='setHTTPShouldHandleCookies:'>
<arg name='handle' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setTimeStampOffset:'>
<arg name='offset' declared_type='time_t' index='0' type='l'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setUserAgent:'>
<arg name='agent' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='outTimeZone' declared_type='NSTimeZone**' index='1' type='^@' type_modifier='o'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateComponentsFromString:timeZone:range:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='outTimeZone' declared_type='NSTimeZone**' index='1' type='^@' type_modifier='o'/>
<arg name='outRange' declared_type='NSRange*' index='2' type='^{_NSRange=II}' type_modifier='o'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='outTimeZone' declared_type='NSTimeZone**' index='1' type='^@' type_modifier='o'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:timeZone:range:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='outTimeZone' declared_type='NSTimeZone**' index='1' type='^@' type_modifier='o'/>
<arg name='outRange' declared_type='NSRange*' index='2' type='^{_NSRange=II}' type_modifier='o'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='defaultTimeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method selector='format'>
<retval declared_type='ISO8601DateFormat' type='I'/>
</method>
<method selector='includeTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parsesStrictly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='purgeGlobalCaches'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTimeZone:'>
<arg name='defaultTimeZone' declared_type='NSTimeZone*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg name='format' declared_type='ISO8601DateFormat' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTime:'>
<arg name='includeTime' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParsesStrictly:'>
<arg name='parsesStrictly' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeSeparator:'>
<arg name='timeSeparator' declared_type='unichar' index='0' type='S'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDate:'>
<arg name='date' declared_type='NSDate*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromDate:timeZone:'>
<arg name='date' declared_type='NSDate*' index='0' type='@'/>
<arg name='timeZone' declared_type='NSTimeZone*' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
</class>
<class name='JSONDecoder'>
<method selector='clearCache'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='decoder'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='decoderWithParseOptions:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithParseOptions:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectWithData:'>
<arg name='jsonData' declared_type='NSData*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectWithData:error:'>
<arg name='jsonData' declared_type='NSData*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectWithUTF8String:length:'>
<arg name='string' declared_type='unsigned char*' index='0' type='*' const='true'/>
<arg name='length' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectWithUTF8String:length:error:'>
<arg name='string' declared_type='unsigned char*' index='0' type='*' const='true'/>
<arg name='length' declared_type='NSUInteger' index='1' type='I'/>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithData:'>
<arg name='jsonData' declared_type='NSData*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithData:error:'>
<arg name='jsonData' declared_type='NSData*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithUTF8String:length:'>
<arg name='string' declared_type='unsigned char*' index='0' type='*' const='true'/>
<arg name='length' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectWithUTF8String:length:error:'>
<arg name='string' declared_type='unsigned char*' index='0' type='*' const='true'/>
<arg name='length' declared_type='NSUInteger' index='1' type='I'/>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parseJSONData:'>
<arg name='jsonData' declared_type='NSData*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parseJSONData:error:'>
<arg name='jsonData' declared_type='NSData*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parseUTF8String:length:'>
<arg name='string' declared_type='unsigned char*' index='0' type='*' const='true'/>
<arg name='length' declared_type='size_t' index='1' type='L'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parseUTF8String:length:error:'>
<arg name='string' declared_type='unsigned char*' index='0' type='*' const='true'/>
<arg name='length' declared_type='size_t' index='1' type='L'/>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='KKBlocksDelegate'>
<method selector='cell'>
<retval declared_type='int *(^)(int *, int *)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int*' type='^i'/>
</retval>
</method>
<method selector='didDeselectItem'>
<retval declared_type='void (^)(int *, int *)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='didSelectItem'>
<retval declared_type='void (^)(int *, int *)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='heightForFooter'>
<retval declared_type='CGFloat (^)(int *, NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</retval>
</method>
<method selector='heightForHeader'>
<retval declared_type='CGFloat (^)(int *, NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</retval>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSUInteger (^)(int *, NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</retval>
</method>
<method selector='numberOfSections'>
<retval declared_type='NSUInteger (^)(int *)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<retval declared_type='NSUInteger' type='I'/>
</retval>
</method>
<method selector='setCell:'>
<arg name='cell' declared_type='int *(^)(int *, int *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int*' type='^i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidDeselectItem:'>
<arg name='didDeselectItem' declared_type='void (^)(int *, int *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidSelectItem:'>
<arg name='didSelectItem' declared_type='void (^)(int *, int *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightForFooter:'>
<arg name='heightForFooter' declared_type='CGFloat (^)(int *, NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightForHeader:'>
<arg name='heightForHeader' declared_type='CGFloat (^)(int *, NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfItems:'>
<arg name='numberOfItems' declared_type='NSUInteger (^)(int *, NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfSections:'>
<arg name='numberOfSections' declared_type='NSUInteger (^)(int *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<retval declared_type='NSUInteger' type='I'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleForFooter:'>
<arg name='titleForFooter' declared_type='NSString *(^)(int *, NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleForHeader:'>
<arg name='titleForHeader' declared_type='NSString *(^)(int *, NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewForFooter:'>
<arg name='viewForFooter' declared_type='UIView *(^)(int *, NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='UIView*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewForHeader:'>
<arg name='viewForHeader' declared_type='UIView *(^)(int *, NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='UIView*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillDeselectItem:'>
<arg name='willDeselectItem' declared_type='int *(^)(int *, int *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int*' type='^i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillDisplayCell:'>
<arg name='willDisplayCell' declared_type='void (^)(int *, int *, int *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSelectItem:'>
<arg name='willSelectItem' declared_type='int *(^)(int *, int *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int*' type='^i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='titleForFooter'>
<retval declared_type='NSString *(^)(int *, NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</retval>
</method>
<method selector='titleForHeader'>
<retval declared_type='NSString *(^)(int *, NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</retval>
</method>
<method selector='viewForFooter'>
<retval declared_type='UIView *(^)(int *, NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='UIView*' type='@'/>
</retval>
</method>
<method selector='viewForHeader'>
<retval declared_type='UIView *(^)(int *, NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='UIView*' type='@'/>
</retval>
</method>
<method selector='willDeselectItem'>
<retval declared_type='int *(^)(int *, int *)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int*' type='^i'/>
</retval>
</method>
<method selector='willDisplayCell'>
<retval declared_type='void (^)(int *, int *, int *)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='willSelectItem'>
<retval declared_type='int *(^)(int *, int *)' function_pointer='true' type='@?'>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int*' type='^i'/>
</retval>
</method>
</class>
<class name='KKGridView'>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='batchUpdating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cellPadding'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='cellSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deleteItemsAtIndexPaths:withAnimation:'>
<arg name='indexPaths' declared_type='NSArray*' index='0' type='@'/>
<arg name='animation' declared_type='KKGridViewAnimation' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dequeueReusableCellWithIdentifier:'>
<arg name='identifier' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='deselectAll:'>
<arg name='animated' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deselectItemsAtIndexPaths:animated:'>
<arg name='indexPaths' declared_type='NSArray*' index='0' type='@'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='gridFooterView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='gridHeaderView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='indexPathForCell:'>
<arg name='cell' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='indexPathForItemAtPoint:'>
<arg name='point' declared_type='CGPoint' index='0' type='{CGPoint=ff}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='indexPathForSelectedCell'>
<retval declared_type='id' type='@'/>
</method>
<method selector='indexPathsForItemsInRect:'>
<arg name='rect' declared_type='CGRect' index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexPathsForSelectedCells'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='insertItemsAtIndexPaths:withAnimation:'>
<arg name='indexPaths' declared_type='NSArray*' index='0' type='@'/>
<arg name='animation' declared_type='KKGridViewAnimation' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutDirection'>
<retval declared_type='KKGridViewLayoutDirection' type='i'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfSections'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='rectForCellAtIndexPath:'>
<arg name='indexPath' declared_type='id' index='0' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='reloadContentSize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadItemsAtIndexPaths:'>
<arg name='indexPaths' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToItemAtIndexPath:animated:position:'>
<arg name='indexPath' declared_type='id' index='0' type='@'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<arg name='scrollPosition' declared_type='KKGridViewScrollPosition' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemsAtIndexPaths:animated:'>
<arg name='indexPaths' declared_type='NSArray*' index='0' type='@'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedItemCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg name='allowsMultipleSelection' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg name='backgroundView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellPadding:'>
<arg name='cellPadding' declared_type='CGSize' index='0' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellSize:'>
<arg name='cellSize' declared_type='CGSize' index='0' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg name='dataSource' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridFooterView:'>
<arg name='gridFooterView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridHeaderView:'>
<arg name='gridHeaderView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutDirection:'>
<arg name='layoutDirection' declared_type='KKGridViewLayoutDirection' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleIndexPaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='KKGridViewCell'>
<method selector='accessoryPosition'>
<retval declared_type='KKGridViewCellAccessoryPosition' type='i'/>
</method>
<method selector='accessoryType'>
<retval declared_type='KKGridViewCellAccessoryType' type='i'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method class_method='true' selector='cellForGridView:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='cellIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='contentView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='editing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='highlightAlpha'>
<retval declared_type='float' type='f'/>
</method>
<method selector='imageView'>
<retval declared_type='UIImageView*' type='@'/>
</method>
<method selector='indexPath'>
<retval declared_type='KKIndexPath*' type='@'/>
</method>
<method selector='initWithFrame:reuseIdentifier:'>
<arg name='frame' declared_type='CGRect' index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='reuseIdentifier' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reuseIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='selectedBackgroundView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='setAccessoryPosition:'>
<arg name='accessoryPosition' declared_type='KKGridViewCellAccessoryPosition' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessoryType:'>
<arg name='accessoryType' declared_type='KKGridViewCellAccessoryType' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg name='backgroundView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg name='contentView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:'>
<arg name='editing' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditing:animated:'>
<arg name='editing' declared_type='BOOL' index='0' type='B'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightAlpha:'>
<arg name='highlightAlpha' declared_type='float' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg name='highlighted' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageView:'>
<arg name='imageView' declared_type='UIImageView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndexPath:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReuseIdentifier:'>
<arg name='reuseIdentifier' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:'>
<arg name='selected' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:animated:'>
<arg name='selected' declared_type='BOOL' index='0' type='B'/>
<arg name='animated' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedBackgroundView:'>
<arg name='selectedBackgroundView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='KKGridViewController'>
<method selector='gridView'>
<retval declared_type='KKGridView*' type='@'/>
</method>
<method selector='setGridView:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='KKGridViewIndexView'>
<method selector='sectionIndexTitles'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sectionTracked'>
<retval declared_type='void (^)(NSUInteger)' function_pointer='true' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='setSectionIndexTitles:'>
<arg name='sectionIndexTitles' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionTracked:'>
<arg name='sectionTracked' declared_type='void (^)(NSUInteger)' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTracking:'>
<arg name='tracking' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTracking:location:'>
<arg name='tracking' declared_type='BOOL' index='0' type='B'/>
<arg name='location' declared_type='CGPoint' index='1' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tracking'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='KKGridViewSectionInfo'>
<method selector='initWithView:'>
<arg name='view' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setView:'>
<arg name='view' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='UIView*' type='@'/>
</method>
</class>
<class name='KKGridViewSectionLabel'>
<method selector='initWithString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='KKGridViewUpdate'>
<method selector='animating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animation'>
<retval declared_type='KKGridViewAnimation' type='i'/>
</method>
<method selector='destinationPath'>
<retval declared_type='KKIndexPath*' type='@'/>
</method>
<method selector='indexPath'>
<retval declared_type='KKIndexPath*' type='@'/>
</method>
<method selector='initWithIndexPath:isSectionUpdate:type:animation:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<arg name='sectionUpdate' declared_type='BOOL' index='1' type='B'/>
<arg name='type' declared_type='KKGridViewUpdateType' index='2' type='i'/>
<arg name='animation' declared_type='KKGridViewAnimation' index='3' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sectionUpdate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnimating:'>
<arg name='animating' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimation:'>
<arg name='animation' declared_type='KKGridViewAnimation' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationPath:'>
<arg name='destinationPath' declared_type='KKIndexPath*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndexPath:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionUpdate:'>
<arg name='sectionUpdate' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimestamp:'>
<arg name='timestamp' declared_type='CFTimeInterval' index='0' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg name='type' declared_type='KKGridViewUpdateType' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sign'>
<retval declared_type='KKGridViewUpdateSign' type='i'/>
</method>
<method selector='timestamp'>
<retval declared_type='CFTimeInterval' type='d'/>
</method>
<method selector='type'>
<retval declared_type='KKGridViewUpdateType' type='i'/>
</method>
<method class_method='true' selector='updateWithIndexPath:isSectionUpdate:type:animation:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<arg name='sectionUpdate' declared_type='BOOL' index='1' type='B'/>
<arg name='type' declared_type='KKGridViewUpdateType' index='2' type='i'/>
<arg name='animation' declared_type='KKGridViewAnimation' index='3' type='i'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='KKGridViewUpdateStack'>
<method selector='addUpdate:'>
<arg name='update' declared_type='KKGridViewUpdate*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addUpdates:'>
<arg name='updates' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasUpdateForIndexPath:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemsToUpdate'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='nextUpdateFromIndexPath:fallbackPath:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<arg name='fallback' declared_type='KKIndexPath*' index='1' type='@'/>
<retval declared_type='KKIndexPath*' type='@'/>
</method>
<method selector='removeUpdate:'>
<arg name='update' declared_type='KKGridViewUpdate*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeUpdateForIndexPath:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateForIndexPath:'>
<arg name='indexPath' declared_type='KKIndexPath*' index='0' type='@'/>
<retval declared_type='KKGridViewUpdate*' type='@'/>
</method>
</class>
<class name='KKIndexPath'>
<method selector='NSIndexPath'>
<retval declared_type='NSIndexPath*' type='@'/>
</method>
<method selector='compare:'>
<arg name='other' declared_type='id' index='0' type='@'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='index'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='indexPathForIndex:inSection:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='indexPathWithNSIndexPath:'>
<arg name='indexPath' declared_type='NSIndexPath*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='indexPathsWithNSIndexPaths:'>
<arg name='indexPaths' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithIndex:section:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNSIndexPath:'>
<arg name='indexPath' declared_type='NSIndexPath*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='nonexistantIndexPath'>
<retval declared_type='KKIndexPath*' type='@'/>
</method>
<method selector='section'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setIndex:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSection:'>
<arg name='section' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='zeroIndexPath'>
<retval declared_type='KKIndexPath*' type='@'/>
</method>
</class>
<class name='NSArray'>
<method selector='JSONData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONDataWithOptions:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONDataWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='block' declared_type='id (^)(id)' index='1' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONDataWithOptions:serializeUnsupportedClassesUsingDelegate:selector:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='selector' declared_type='SEL' index='2' type=':'/>
<arg name='error' declared_type='NSError**' index='3' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='JSONStringWithOptions:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='JSONStringWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='block' declared_type='id (^)(id)' index='1' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='JSONStringWithOptions:serializeUnsupportedClassesUsingDelegate:selector:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='selector' declared_type='SEL' index='2' type=':'/>
<arg name='error' declared_type='NSError**' index='3' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sectionsGroupedByKeyPath:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSBundle'>
<method selector='MIMETypeForResource:withExtension:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='extension' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dataWithContentsOfResource:withExtension:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='extension' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='imageWithContentsOfResource:withExtension:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='extension' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='parsedObjectWithContentsOfResource:withExtension:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='extension' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='restKitResourcesBundle'>
<retval declared_type='NSBundle*' type='@'/>
</method>
<method selector='stringWithContentsOfResource:withExtension:encoding:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='extension' declared_type='NSString*' index='1' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' index='2' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSData'>
<method selector='MD5'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='base64EncodedString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='base64EncodedStringWithSeparateLines:'>
<arg name='separateLines' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='dataFromBase64String:'>
<arg name='aString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='mutableObjectFromJSONData'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectFromJSONDataWithParseOptions:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectFromJSONDataWithParseOptions:error:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromJSONData'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromJSONDataWithParseOptions:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromJSONDataWithParseOptions:error:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='JSONData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONDataWithOptions:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONDataWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='block' declared_type='id (^)(id)' index='1' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONDataWithOptions:serializeUnsupportedClassesUsingDelegate:selector:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='selector' declared_type='SEL' index='2' type=':'/>
<arg name='error' declared_type='NSError**' index='3' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='JSONStringWithOptions:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='JSONStringWithOptions:serializeUnsupportedClassesUsingBlock:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='block' declared_type='id (^)(id)' index='1' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='JSONStringWithOptions:serializeUnsupportedClassesUsingDelegate:selector:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='selector' declared_type='SEL' index='2' type=':'/>
<arg name='error' declared_type='NSError**' index='3' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='URLEncodedString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryByReplacingPercentEscapesInEntries'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method sentinel='0' class_method='true' variadic='true' selector='dictionaryWithKeysAndObjects:'>
<arg name='firstKey' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dictionaryWithURLEncodedString:'>
<arg name='URLEncodedString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='stringWithURLEncodedEntries'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSEntityDescription'>
<method selector='coerceValueForPrimaryKey:'>
<arg name='primaryKeyValue' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='predicateForPrimaryKeyAttribute'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='predicateForPrimaryKeyAttributeWithValue:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='primaryKeyAttribute'>
<retval declared_type='NSAttributeDescription*' type='@'/>
</method>
<method selector='primaryKeyAttributeClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='primaryKeyAttributeName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setPrimaryKeyAttributeName:'>
<arg name='primaryKeyAttributeName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSManagedObject'>
<method class_method='true' selector='allObjects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' variadic='true' selector='ascendingSortDescriptors:'>
<arg name='attributesToSortBy' declared_type='id' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='count:'>
<arg name='error' declared_type='NSError**' index='0' type='^@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='countOfObjectsWithFetchRequest:'>
<arg name='fetchRequest' declared_type='NSFetchRequest*' index='0' type='@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='createEntity'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='createFetchRequest'>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='createFetchRequestInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='createInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='deleteEntity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deleteInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' variadic='true' selector='descendingSortDescriptors:'>
<arg name='attributesToSortyBy' declared_type='id' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method class_method='true' selector='entityDescription'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method class_method='true' selector='entityDescriptionInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method class_method='true' selector='executeFetchRequest:'>
<arg name='request' declared_type='NSFetchRequest*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='executeFetchRequest:inContext:'>
<arg name='request' declared_type='NSFetchRequest*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='fetchAllSortedBy:ascending:withPredicate:groupBy:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='2' type='@'/>
<arg name='groupingKeyPath' declared_type='NSString*' index='3' type='@'/>
<retval declared_type='NSFetchedResultsController*' type='@'/>
</method>
<method class_method='true' selector='fetchAllSortedBy:ascending:withPredicate:groupBy:inContext:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='2' type='@'/>
<arg name='groupingKeyPath' declared_type='NSString*' index='3' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='4' type='@'/>
<retval declared_type='NSFetchedResultsController*' type='@'/>
</method>
<method class_method='true' selector='fetchRequest'>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='fetchRequest:groupedBy:'>
<arg name='request' declared_type='NSFetchRequest*' index='0' type='@'/>
<arg name='group' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='NSFetchedResultsController*' type='@'/>
</method>
<method class_method='true' selector='fetchRequest:groupedBy:inContext:'>
<arg name='request' declared_type='NSFetchRequest*' index='0' type='@'/>
<arg name='group' declared_type='NSString*' index='1' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='NSFetchedResultsController*' type='@'/>
</method>
<method class_method='true' selector='fetchRequestAllGroupedBy:withPredicate:sortedBy:ascending:'>
<arg name='group' declared_type='NSString*' index='0' type='@'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='1' type='@'/>
<arg name='sortTerm' declared_type='NSString*' index='2' type='@'/>
<arg name='ascending' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='NSFetchedResultsController*' type='@'/>
</method>
<method class_method='true' selector='fetchRequestAllGroupedBy:withPredicate:sortedBy:ascending:inContext:'>
<arg name='group' declared_type='NSString*' index='0' type='@'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='1' type='@'/>
<arg name='sortTerm' declared_type='NSString*' index='2' type='@'/>
<arg name='ascending' declared_type='BOOL' index='3' type='B'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='4' type='@'/>
<retval declared_type='NSFetchedResultsController*' type='@'/>
</method>
<method class_method='true' selector='findAll'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findAllInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findAllSortedBy:ascending:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findAllSortedBy:ascending:inContext:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findAllSortedBy:ascending:withPredicate:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='2' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findAllSortedBy:ascending:withPredicate:inContext:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='2' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='3' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findAllWithPredicate:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findAllWithPredicate:inContext:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findByAttribute:withValue:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findByAttribute:withValue:andOrderBy:ascending:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<arg name='sortTerm' declared_type='NSString*' index='2' type='@'/>
<arg name='ascending' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findByAttribute:withValue:andOrderBy:ascending:inContext:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<arg name='sortTerm' declared_type='NSString*' index='2' type='@'/>
<arg name='ascending' declared_type='BOOL' index='3' type='B'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='4' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findByAttribute:withValue:inContext:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='findByPrimaryKey:'>
<arg name='primaryKeyValue' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findByPrimaryKey:inContext:'>
<arg name='primaryKeyValue' declared_type='id' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirst'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstByAttribute:withValue:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstByAttribute:withValue:inContext:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstWithPredicate:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstWithPredicate:andRetrieveAttributes:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='attributes' declared_type='NSArray*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstWithPredicate:andRetrieveAttributes:inContext:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='attributes' declared_type='NSArray*' index='1' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstWithPredicate:inContext:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstWithPredicate:sortedBy:ascending:'>
<arg name='searchterm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='property' declared_type='NSString*' index='1' type='@'/>
<arg name='ascending' declared_type='BOOL' index='2' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' variadic='true' selector='findFirstWithPredicate:sortedBy:ascending:andRetrieveAttributes:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='sortBy' declared_type='NSString*' index='1' type='@'/>
<arg name='ascending' declared_type='BOOL' index='2' type='B'/>
<arg name='attributes' declared_type='id' index='3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='findFirstWithPredicate:sortedBy:ascending:inContext:'>
<arg name='searchterm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='property' declared_type='NSString*' index='1' type='@'/>
<arg name='ascending' declared_type='BOOL' index='2' type='B'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' variadic='true' selector='findFirstWithPredicate:sortedBy:ascending:inContext:andRetrieveAttributes:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='sortBy' declared_type='NSString*' index='1' type='@'/>
<arg name='ascending' declared_type='BOOL' index='2' type='B'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='3' type='@'/>
<arg name='attributes' declared_type='id' index='4' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='handleErrors:'>
<arg name='error' declared_type='NSError*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='hasAtLeastOneEntity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='hasAtLeastOneEntityInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNew'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method class_method='true' selector='maxValueFor:'>
<arg name='property' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberOfEntities'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberOfEntitiesWithContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberOfEntitiesWithPredicate:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='numberOfEntitiesWithPredicate:inContext:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method class_method='true' selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='objectWithFetchRequest:'>
<arg name='fetchRequest' declared_type='NSFetchRequest*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='objectWithMinValueFor:'>
<arg name='property' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='objectWithMinValueFor:inContext:'>
<arg name='property' declared_type='NSString*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='objectWithPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='objectsWithFetchRequest:'>
<arg name='fetchRequest' declared_type='NSFetchRequest*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='objectsWithFetchRequests:'>
<arg name='fetchRequests' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='objectsWithPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='propertiesNamed:'>
<arg name='properties' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='requestAll'>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestAllInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestAllSortedBy:ascending:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestAllSortedBy:ascending:inContext:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestAllSortedBy:ascending:withPredicate:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='2' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestAllSortedBy:ascending:withPredicate:inContext:'>
<arg name='sortTerm' declared_type='NSString*' index='0' type='@'/>
<arg name='ascending' declared_type='BOOL' index='1' type='B'/>
<arg name='searchTerm' declared_type='NSPredicate*' index='2' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='3' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestAllWhere:isEqualTo:'>
<arg name='property' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestAllWhere:isEqualTo:inContext:'>
<arg name='property' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestFirstByAttribute:withValue:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestFirstByAttribute:withValue:inContext:'>
<arg name='attribute' declared_type='NSString*' index='0' type='@'/>
<arg name='searchValue' declared_type='id' index='1' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestFirstWithPredicate:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='requestFirstWithPredicate:inContext:'>
<arg name='searchTerm' declared_type='NSPredicate*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method class_method='true' selector='truncateAll'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='truncateAllInContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method class_method='true' selector='contextForCurrentThread'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method class_method='true' selector='defaultContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method class_method='true' selector='setDefaultContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectStore:'>
<arg name='managedObjectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='ContentTypeHTTPHeader'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='HTTPBody'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='HTTPBodyStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='HTTPHeaderValueForContentLength'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='HTTPHeaderValueForContentType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuthClient:didAcquireAccessToken:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='token' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailLoadingRequest:withError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailWithError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailWithInvalidClientError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailWithInvalidGrantError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailWithInvalidRequestError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailWithInvalidScopeError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailWithUnauthorizedClientError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='OAuthClient:didFailWithUnsupportedGrantTypeError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application'>
<retval declared_type='id' type='@'/>
</method>
<method selector='birthday'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cacheIndex:deleteFileWithName:'>
<arg name='cacheIndex' declared_type='FBCacheIndex*' index='0' type='@'/>
<arg name='name' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheIndex:writeFileWithName:data:'>
<arg name='cacheIndex' declared_type='FBCacheIndex*' index='0' type='@'/>
<arg name='name' declared_type='NSString*' index='1' type='@'/>
<arg name='data' declared_type='NSData*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='category'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='city'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='comments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='configureObjectLoader:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='configureRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='country'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='created_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dialog:didFailWithError:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialog:shouldOpenURLInExternalBrowser:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<arg name='url' declared_type='NSURL*' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dialogCompleteWithUrl:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialogDidComplete:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialogDidNotComplete:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dialogDidNotCompleteWithUrl:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didCreateObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didSeedObject:fromFile:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<arg name='fileName' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='end_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='expires_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='facebookViewControllerCancelWasPressed:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='facebookViewControllerDoneWasPressed:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fbDialogLogin:expirationDate:'>
<arg name='token' declared_type='NSString*' index='0' type='@'/>
<arg name='expirationDate' declared_type='NSDate*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fbDialogNotLogin:'>
<arg name='cancelled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fbDidExtendToken:expiresAt:'>
<arg name='accessToken' declared_type='NSString*' index='0' type='@'/>
<arg name='expiresAt' declared_type='NSDate*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fbDidLogin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fbDidLogout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fbDidNotLogin:'>
<arg name='cancelled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fbSessionInvalidated'>
<retval declared_type='void' type='v'/>
</method>
<method selector='findInstanceOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='1' type='@'/>
<arg name='primaryKeyValue' declared_type='id' index='2' type='@'/>
<arg name='managedObjectContext' declared_type='NSManagedObjectContext*' index='3' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='first_name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='friendPickerViewController:handleError:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='friendPickerViewController:shouldIncludeUser:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<arg name='user' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='friendPickerViewControllerDataDidChange:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='friendPickerViewControllerSelectionDidChange:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='from'>
<retval declared_type='id' type='@'/>
</method>
<method selector='graphObjectTableDataSource:customizeTableCell:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='cell' declared_type='FBGraphObjectTableCell*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='graphObjectTableDataSource:filterIncludesItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='item' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='graphObjectTableDataSource:pictureUrlOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='graphObjectTableDataSource:selectionIncludesItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='item' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='graphObjectTableDataSource:subtitleOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='graphObjectTableDataSource:titleOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='graphObjectTableDataSource:titleSuffixOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='graphObjectTableDataSourceNeedsData:triggeredByIndexPath:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='graphObjectTableSelectionDidChange:'>
<arg name='selection' declared_type='FBGraphObjectTableSelection*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gridView:cellForItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='gridView:didDeselectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gridView:didSelectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gridView:heightForFooterInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='gridView:heightForHeaderInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='gridView:numberOfItemsInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='gridView:sectionForSectionIndexTitle:atIndex:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='title' declared_type='NSString*' index='1' type='@'/>
<arg name='index' declared_type='NSInteger' index='2' type='i'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='gridView:titleForFooterInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='gridView:titleForHeaderInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='gridView:viewForFooterInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='gridView:viewForHeaderInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='gridView:viewForRow:inSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='row' declared_type='NSUInteger' index='1' type='I'/>
<arg name='section' declared_type='NSUInteger' index='2' type='I'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='gridView:willDeselectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='gridView:willDisplayCell:atIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='cell' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gridView:willSelectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='humanReadable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='id'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='imageCache:didFindImage:forKey:userInfo:'>
<arg name='imageCache' declared_type='SDImageCache*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='key' declared_type='NSString*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageCache:didNotFindImageForKey:userInfo:'>
<arg name='imageCache' declared_type='SDImageCache*' index='0' type='@'/>
<arg name='key' declared_type='NSString*' index='1' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageDecoder:didFinishDecodingImage:userInfo:'>
<arg name='decoder' declared_type='SDWebImageDecoder*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='userInfo' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageDownloader:didFailWithError:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageDownloader:didFinishWithImage:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageDownloader:didUpdatePartialImage:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageDownloaderDidFinish:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method selector='last_name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='latitude'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='likes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='link'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='location'>
<retval declared_type='id' type='@'/>
</method>
<method selector='loginViewController:receivedError:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loginViewControllerDidLogUserIn:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loginViewControllerDidLogUserOut:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loginViewControllerWillAttemptToLogUserIn:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loginViewControllerWillLogUserOut:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loginViewFetchedUserInfo:user:'>
<arg name='loginView' declared_type='FBLoginView*' index='0' type='@'/>
<arg name='user' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loginViewShowingLoggedInUser:'>
<arg name='loginView' declared_type='FBLoginView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loginViewShowingLoggedOutUser:'>
<arg name='loginView' declared_type='FBLoginView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='longitude'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='managedObjectStore:didFailToCopySeedDatabase:error:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='seedDatabase' declared_type='NSString*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectStore:didFailToCreatePersistentStoreCoordinatorWithError:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectStore:didFailToDeletePersistentStore:error:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='pathToStoreFile' declared_type='NSString*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectStore:didFailToSaveContext:error:exception:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<arg name='exception' declared_type='NSException*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='message'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='middle_name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfSectionsInGridView:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='objectForKey:'>
<arg name='aKey' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromString:error:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectLoader:didFailWithError:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectLoader:didLoadObject:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectLoader:didLoadObjectDictionary:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='dictionary' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectLoader:didLoadObjects:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='objects' declared_type='NSArray*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectLoader:didSerializeSourceObject:toSerialization:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='serialization' declared_type='id*' index='2' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectLoader:willMapData:'>
<arg name='loader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='mappableData' declared_type='id*' index='1' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectLoaderDidFinishLoading:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectLoaderDidLoadUnexpectedResponse:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapper:didAddError:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapper:didFailMappingFromObject:toObject:withError:atKeyPath:usingMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='destinationObject' declared_type='id' index='2' type='@'/>
<arg name='error' declared_type='NSError*' index='3' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='4' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='5' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapper:didFindMappableObject:atKeyPath:withMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapper:didMapFromObject:toObject:atKeyPath:usingMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='destinationObject' declared_type='id' index='2' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='3' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='4' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapper:didNotFindMappableObjectAtKeyPath:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapper:willMapFromObject:toObject:atKeyPath:usingMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='destinationObject' declared_type='id' index='2' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='3' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='4' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapperDidFinishMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMapperWillBeginMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMappingForData:'>
<arg name='data' declared_type='id' index='0' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='objectMappingOperation:didFailWithError:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMappingOperation:didFindMapping:forKeyPath:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='mapping' declared_type='RKObjectAttributeMapping*' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMappingOperation:didNotFindMappingForKeyPath:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='mapping' declared_type='RKObjectAttributeMapping*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectMappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='mapping' declared_type='RKObjectAttributeMapping*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectWithString:'>
<arg name='repr' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='paginator:didFailWithError:objectLoader:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<arg name='loader' declared_type='RKObjectLoader*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='paginator:didLoadObjects:forPage:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<arg name='objects' declared_type='NSArray*' index='1' type='@'/>
<arg name='page' declared_type='NSUInteger' index='2' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='paginator:willLoadPage:objectLoader:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<arg name='page' declared_type='NSUInteger' index='1' type='I'/>
<arg name='loader' declared_type='RKObjectLoader*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='paginatorDidLoadFirstPage:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='paginatorDidLoadLastPage:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pagingLoader:didLoadData:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<arg name='results' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pagingLoader:handleError:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pagingLoader:willLoadURL:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<arg name='url' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pagingLoaderDidFinishLoading:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pagingLoaderWasCancelled:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='place'>
<retval declared_type='id' type='@'/>
</method>
<method selector='placePickerViewController:handleError:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='placePickerViewController:shouldIncludePlace:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<arg name='place' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='placePickerViewControllerDataDidChange:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='placePickerViewControllerSelectionDidChange:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='proxyForJson'>
<retval declared_type='id' type='@'/>
</method>
<method selector='publish_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pullToRefreshDataSourceIsLoading:'>
<arg name='recognizer' declared_type='UIGestureRecognizer*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pullToRefreshDataSourceLastUpdated:'>
<arg name='recognizer' declared_type='UIGestureRecognizer*' index='0' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='ref'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeObjectForKey:'>
<arg name='aKey' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didFailLoadWithError:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didFailWithError:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didLoad:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='result' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didLoadRawResponse:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='data' declared_type='NSData*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didLoadResponse:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='response' declared_type='RKResponse*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didReceiveData:totalBytesReceived:totalBytesExpectedToReceive:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='bytesReceived' declared_type='NSInteger' index='1' type='i'/>
<arg name='totalBytesReceived' declared_type='NSInteger' index='2' type='i'/>
<arg name='totalBytesExpectedToReceive' declared_type='NSInteger' index='3' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didReceiveResponse:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='response' declared_type='NSURLResponse*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='bytesWritten' declared_type='NSInteger' index='1' type='i'/>
<arg name='totalBytesWritten' declared_type='NSInteger' index='2' type='i'/>
<arg name='totalBytesExpectedToWrite' declared_type='NSInteger' index='3' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDidCancelLoad:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDidStartLoad:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDidTimeout:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestLoading:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueue:didCancelRequest:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueue:didFailRequest:withError:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueue:didLoadResponse:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='response' declared_type='RKResponse*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueue:didSendRequest:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueue:willSendRequest:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueueDidBeginLoading:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueueDidFinishLoading:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueueWasSuspended:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestQueueWasUnsuspended:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestWillPrepareForSend:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resourcePathForObject:method:'>
<arg name='object' declared_type='NSObject*' index='0' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='1' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='searchableText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sectionIndexTitlesForGridView:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setApplication:'>
<arg name='application' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBirthday:'>
<arg name='birthday' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategory:'>
<arg name='category' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCity:'>
<arg name='city' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setComments:'>
<arg name='comments' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCountry:'>
<arg name='country' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCreated_time:'>
<arg name='created_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnd_time:'>
<arg name='end_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpires_time:'>
<arg name='expires_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFirst_name:'>
<arg name='first_name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrom:'>
<arg name='from' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHumanReadable:'>
<arg name='humanReadable' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setId:'>
<arg name='id' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg name='image' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLast_name:'>
<arg name='last_name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLatitude:'>
<arg name='latitude' declared_type='NSNumber*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLikes:'>
<arg name='likes' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLink:'>
<arg name='link' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocation:'>
<arg name='location' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongitude:'>
<arg name='longitude' declared_type='NSNumber*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessage:'>
<arg name='message' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiddle_name:'>
<arg name='middle_name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKey:'>
<arg name='anObject' declared_type='id' index='0' type='@'/>
<arg name='aKey' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlace:'>
<arg name='place' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublish_time:'>
<arg name='publish_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRef:'>
<arg name='ref' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortKeys:'>
<arg name='sortKeys' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStart_time:'>
<arg name='start_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg name='state' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStreet:'>
<arg name='street' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTags:'>
<arg name='tags' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg name='username' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZip:'>
<arg name='zip' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortKeys'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='start_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='state'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='street'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromObject:error:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringWithObject:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tableController:didDeleteObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didDeleteSectionAtIndex:'>
<arg name='tableController' declared_type='RKFetchedResultsTableController*' index='0' type='@'/>
<arg name='sectionIndex' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didEndEditing:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didFailLoadWithError:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didInsertObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didInsertSectionAtIndex:'>
<arg name='tableController' declared_type='RKFetchedResultsTableController*' index='0' type='@'/>
<arg name='sectionIndex' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didLoadObjects:inSection:'>
<arg name='tableController' declared_type='RKTableController*' index='0' type='@'/>
<arg name='objects' declared_type='NSArray*' index='1' type='@'/>
<arg name='section' declared_type='RKTableSection*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didLoadTableWithObjectLoader:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didSelectCell:forObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='1' type='@'/>
<arg name='object' declared_type='id' index='2' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:didUpdateObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:willAddSwipeView:toCell:forObject:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='swipeView' declared_type='UIView*' index='1' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='2' type='@'/>
<arg name='object' declared_type='id' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:willBeginEditing:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:willDisplayCell:forObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='1' type='@'/>
<arg name='object' declared_type='id' index='2' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:willLoadTableWithObjectLoader:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController:willRemoveSwipeView:fromCell:forObject:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='swipeView' declared_type='UIView*' index='1' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='2' type='@'/>
<arg name='object' declared_type='id' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableControllerDidBecomeEmpty:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableControllerDidBecomeOffline:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableControllerDidBecomeOnline:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableControllerDidCancelLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableControllerDidFinalizeLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableControllerDidFinishLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableControllerDidStartLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='webImageManager:didFailWithError:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webImageManager:didFailWithError:forURL:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webImageManager:didFailWithError:forURL:userInfo:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webImageManager:didFinishWithImage:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webImageManager:didFinishWithImage:forURL:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webImageManager:didFinishWithImage:forURL:userInfo:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webImageManager:didProgressWithPartialImage:forURL:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webImageManager:didProgressWithPartialImage:forURL:userInfo:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zip'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSString'>
<method selector='JSONData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONDataWithOptions:includeQuotes:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='includeQuotes' declared_type='BOOL' index='1' type='B'/>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='JSONString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='JSONStringWithOptions:includeQuotes:error:'>
<arg name='serializeOptions' declared_type='JKSerializeOptionFlags' index='0' type='I'/>
<arg name='includeQuotes' declared_type='BOOL' index='1' type='B'/>
<arg name='error' declared_type='NSError**' index='2' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='MD5'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='MIMETypeForPathExtension'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='appendQueryParams:'>
<arg name='queryParams' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='interpolateWithObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isIPAddress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mutableObjectFromJSONString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectFromJSONStringWithParseOptions:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableObjectFromJSONStringWithParseOptions:error:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromJSONString'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromJSONStringWithParseOptions:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectFromJSONStringWithParseOptions:error:'>
<arg name='parseOptionFlags' declared_type='JKParseOptionFlags' index='0' type='I'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pcen'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='queryParametersUsingArrays:encoding:'>
<arg name='shouldUseArrays' declared_type='BOOL' index='0' type='B'/>
<arg name='encoding' declared_type='NSStringEncoding' index='1' type='I'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='queryParametersUsingEncoding:'>
<arg name='encoding' declared_type='NSStringEncoding' index='0' type='I'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='stringByAddingURLEncoding'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByAppendingPathComponent:isDirectory:'>
<arg name='pathComponent' declared_type='NSString*' index='0' type='@'/>
<arg name='isDirectory' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByAppendingQueryParameters:'>
<arg name='queryParameters' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringByReplacingURLEncoding'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSURL'>
<method selector='MIMETypeForPathExtension'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hostAndPort'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKAbstractTableController'>
<method selector='addFooterRowForItem:'>
<arg name='tableItem' declared_type='RKTableItem*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addFooterRowWithMapping:'>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addHeaderRowForItem:'>
<arg name='tableItem' declared_type='RKTableItem*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addHeaderRowWithMapping:'>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSubviewOverTableView:'>
<arg name='view' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSwipeViewTo:withObject:direction:'>
<arg name='cell' declared_type='UITableViewCell*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='direction' declared_type='UISwipeGestureRecognizerDirection' index='2' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addToOverlayView:modally:'>
<arg name='view' declared_type='UIView*' index='0' type='@'/>
<arg name='modally' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animatingCellSwipe'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoRefreshFromNetwork'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoRefreshRate'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='autoResizesForKeyboard'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cache'>
<retval declared_type='RKCache*' type='@'/>
</method>
<method selector='canEditRows'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canMoveRows'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cellForObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='UITableViewCell*' type='@'/>
</method>
<method selector='cellForObjectAtIndexPath:'>
<arg name='indexPath' declared_type='NSIndexPath*' index='0' type='@'/>
<retval declared_type='UITableViewCell*' type='@'/>
</method>
<method selector='cellMappingForObjectAtIndexPath:'>
<arg name='indexPath' declared_type='NSIndexPath*' index='0' type='@'/>
<retval declared_type='RKTableViewCellMapping*' type='@'/>
</method>
<method selector='cellMappings'>
<retval declared_type='RKTableViewCellMappings*' type='@'/>
</method>
<method selector='cellSwipeView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='cellSwipeViewsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='defaultRowAnimation'>
<retval declared_type='UITableViewRowAnimation' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='didFailLoadWithError:'>
<arg name='error' declared_type='NSError*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFinishLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didStartLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='emptyItem'>
<retval declared_type='RKTableItem*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='footerItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='headerItems'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='imageForEmpty'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageForError'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageForOffline'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageForState:'>
<arg name='state' declared_type='RKTableControllerState' index='0' type='I'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='indexPathForObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='NSIndexPath*' type='@'/>
</method>
<method selector='initWithTableView:viewController:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<arg name='viewController' declared_type='UIViewController*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAutoRefreshNeeded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConsideredEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLoading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOffline'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnline'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadTableWithObjectLoader:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadingView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='mapObjectsWithClass:toTableCellsWithMapping:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapObjectsWithClassName:toTableCellsWithMapping:'>
<arg name='objectClassName' declared_type='NSString*' index='0' type='@'/>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfRowsInSection:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='objectForRowAtIndexPath:'>
<arg name='indexPath' declared_type='NSIndexPath*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectLoader'>
<retval declared_type='RKObjectLoader*' type='@'/>
</method>
<method selector='objectManager'>
<retval declared_type='RKObjectManager*' type='@'/>
</method>
<method selector='overlayFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='overlayImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='pullToRefreshEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pullToRefreshHeaderView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='pullToRefreshStateChanged:'>
<arg name='gesture' declared_type='UIGestureRecognizer*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadRowForObject:withRowAnimation:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='rowAnimation' declared_type='UITableViewRowAnimation' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllFooterRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllHeaderRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImageFromOverlay:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeImageOverlay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSwipeView:'>
<arg name='animated' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetOverlayView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetPullToRefreshRecognizer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='sectionCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setAutoRefreshFromNetwork:'>
<arg name='autoRefreshFromNetwork' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoRefreshRate:'>
<arg name='autoRefreshRate' declared_type='NSTimeInterval' index='0' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoResizesForKeyboard:'>
<arg name='autoResizesForKeyboard' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanEditRows:'>
<arg name='canEditRows' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanMoveRows:'>
<arg name='canMoveRows' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellMappings:'>
<arg name='cellMappings' declared_type='RKTableViewCellMappings*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellSwipeView:'>
<arg name='cellSwipeView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellSwipeViewsEnabled:'>
<arg name='cellSwipeViewsEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultRowAnimation:'>
<arg name='defaultRowAnimation' declared_type='UITableViewRowAnimation' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmptyItem:'>
<arg name='emptyItem' declared_type='RKTableItem*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg name='error' declared_type='NSError*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFooterItems:'>
<arg name='footerItems' declared_type='NSMutableArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderItems:'>
<arg name='headerItems' declared_type='NSMutableArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForEmpty:'>
<arg name='imageForEmpty' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForError:'>
<arg name='imageForError' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForOffline:'>
<arg name='imageForOffline' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoadingView:'>
<arg name='loadingView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectLoader:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectManager:'>
<arg name='objectManager' declared_type='RKObjectManager*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverlayFrame:'>
<arg name='overlayFrame' declared_type='CGRect' index='0' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPullToRefreshEnabled:'>
<arg name='pullToRefreshEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPullToRefreshHeaderView:'>
<arg name='pullToRefreshHeaderView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsFooterRowsWhenEmpty:'>
<arg name='showsFooterRowsWhenEmpty' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsHeaderRowsWhenEmpty:'>
<arg name='showsHeaderRowsWhenEmpty' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsOverlayImagesModally:'>
<arg name='showsOverlayImagesModally' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg name='state' declared_type='RKTableControllerState' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableView:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVariableHeightRows:'>
<arg name='variableHeightRows' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewController:'>
<arg name='viewController' declared_type='UIViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showImageInOverlay:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsFooterRowsWhenEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsHeaderRowsWhenEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsOverlayImagesModally'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='state'>
<retval declared_type='RKTableControllerState' type='I'/>
</method>
<method selector='stateOverlayImageView'>
<retval declared_type='UIImageView*' type='@'/>
</method>
<method selector='swipeCell'>
<retval declared_type='UITableViewCell*' type='@'/>
</method>
<method selector='swipeDirection'>
<retval declared_type='UISwipeGestureRecognizerDirection' type='I'/>
</method>
<method selector='swipeObject'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableControllerForTableViewController:'>
<arg name='tableViewController' declared_type='UITableViewController*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableControllerWithTableView:forViewController:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<arg name='viewController' declared_type='UIViewController*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='tableOverlayView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='tableView'>
<retval declared_type='UITableView*' type='@'/>
</method>
<method selector='variableHeightRows'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='viewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
</class>
<class name='RKBenchmark'>
<method class_method='true' selector='benchmarkWithName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='elapsedTime'>
<retval declared_type='CFTimeInterval' type='d'/>
</method>
<method selector='endTime'>
<retval declared_type='CFAbsoluteTime' type='d'/>
</method>
<method selector='initWithName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='instanceWithName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKBenchmark*' type='@'/>
</method>
<method selector='log'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='measureWithExecutionBlock:'>
<arg name='block' declared_type='void (^)(void)' index='0' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='CFTimeInterval' type='d'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='report:executionBlock:'>
<arg name='info' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='void (^)(void)' index='1' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='run:'>
<arg name='executionBlock' declared_type='void (^)(void)' index='0' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startTime'>
<retval declared_type='CFAbsoluteTime' type='d'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKCache'>
<method selector='cachePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dataForCacheKey:'>
<arg name='cacheKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dictionaryForCacheKey:'>
<arg name='cacheKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='hasEntry:'>
<arg name='cacheKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPath:subDirectories:'>
<arg name='cachePath' declared_type='NSString*' index='0' type='@'/>
<arg name='subDirectories' declared_type='NSArray*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidateAll'>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateEntry:'>
<arg name='cacheKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateSubDirectory:'>
<arg name='subDirectory' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeData:withCacheKey:'>
<arg name='data' declared_type='NSData*' index='0' type='@'/>
<arg name='cacheKey' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeDictionary:withCacheKey:'>
<arg name='dictionary' declared_type='NSDictionary*' index='0' type='@'/>
<arg name='cacheKey' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKClient'>
<method selector='HTTPHeaders'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='OAuth1AccessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth1AccessTokenSecret'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth1ConsumerKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth1ConsumerSecret'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth2AccessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth2RefreshToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='URLForResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForResourcePath:queryParams:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='queryParams' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLPathForResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addRootCertificate:'>
<arg name='cert' declared_type='SecCertificateRef' index='0' type='^{__SecCertificate=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='additionalRootCertificates'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='authenticationType'>
<retval declared_type='RKRequestAuthenticationType' type='i'/>
</method>
<method selector='baseURL'>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='cache'>
<retval declared_type='RKRequestCache*' type='@'/>
</method>
<method selector='cachePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cachePolicy'>
<retval declared_type='RKRequestCachePolicy' type='i'/>
</method>
<method selector='cacheTimeoutInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='clientWithBaseURL:'>
<arg name='baseURL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='RKClient*' type='@'/>
</method>
<method class_method='true' selector='clientWithBaseURL:username:password:'>
<arg name='baseURL' declared_type='NSString*' index='0' type='@'/>
<arg name='username' declared_type='NSString*' index='1' type='@'/>
<arg name='password' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='RKClient*' type='@'/>
</method>
<method class_method='true' selector='clientWithBaseURLString:'>
<arg name='baseURLString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKClient*' type='@'/>
</method>
<method selector='defaultHTTPEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='delete:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='NSObject*' index='1' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='delete:usingBlock:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='void (^)(RKRequest *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKRequest*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableCertificateValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='get:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='NSObject*' index='1' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='get:queryParameters:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='queryParameters' declared_type='NSDictionary*' index='1' type='@'/>
<arg name='delegate' declared_type='NSObject*' index='2' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='get:usingBlock:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='void (^)(RKRequest *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKRequest*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg name='baseURL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBaseURLString:'>
<arg name='baseURLString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isNetworkAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='post:params:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSObject*' index='1' type='@'/>
<arg name='delegate' declared_type='NSObject*' index='2' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='post:usingBlock:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='void (^)(RKRequest *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKRequest*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='put:params:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='params' declared_type='NSObject*' index='1' type='@'/>
<arg name='delegate' declared_type='NSObject*' index='2' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='put:usingBlock:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='void (^)(RKRequest *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKRequest*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='reachabilityObserver'>
<retval declared_type='RKReachabilityObserver*' type='@'/>
</method>
<method selector='requestCache'>
<retval declared_type='RKRequestCache*' type='@'/>
</method>
<method selector='requestQueue'>
<retval declared_type='RKRequestQueue*' type='@'/>
</method>
<method selector='requestWithResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='requestWithResourcePath:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='NSObject*' index='1' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='resourcePath:withQueryParams:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='queryParams' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='runLoopMode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='serviceUnavailableAlertEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='serviceUnavailableAlertMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='serviceUnavailableAlertTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAuthenticationType:'>
<arg name='authenticationType' declared_type='RKRequestAuthenticationType' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseURL:'>
<arg name='baseURL' declared_type='RKURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCache:'>
<arg name='cache' declared_type='RKRequestCache*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachePolicy:'>
<arg name='cachePolicy' declared_type='RKRequestCachePolicy' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheTimeoutInterval:'>
<arg name='cacheTimeoutInterval' declared_type='NSTimeInterval' index='0' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHTTPEncoding:'>
<arg name='defaultHTTPEncoding' declared_type='NSStringEncoding' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisableCertificateValidation:'>
<arg name='disableCertificateValidation' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1AccessToken:'>
<arg name='OAuth1AccessToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1AccessTokenSecret:'>
<arg name='OAuth1AccessTokenSecret' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1ConsumerKey:'>
<arg name='OAuth1ConsumerKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1ConsumerSecret:'>
<arg name='OAuth1ConsumerSecret' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth2AccessToken:'>
<arg name='OAuth2AccessToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth2RefreshToken:'>
<arg name='OAuth2RefreshToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg name='password' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityObserver:'>
<arg name='reachabilityObserver' declared_type='RKReachabilityObserver*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestCache:'>
<arg name='requestCache' declared_type='RKRequestCache*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestQueue:'>
<arg name='requestQueue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopMode:'>
<arg name='runLoopMode' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceUnavailableAlertEnabled:'>
<arg name='serviceUnavailableAlertEnabled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceUnavailableAlertMessage:'>
<arg name='serviceUnavailableAlertMessage' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceUnavailableAlertTitle:'>
<arg name='serviceUnavailableAlertTitle' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedClient:'>
<arg name='client' declared_type='RKClient*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeoutInterval:'>
<arg name='timeoutInterval' declared_type='NSTimeInterval' index='0' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg name='username' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg name='value' declared_type='NSString*' index='0' type='@'/>
<arg name='header' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedClient'>
<retval declared_type='RKClient*' type='@'/>
</method>
<method selector='timeoutInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKControlTableItem'>
<method selector='button'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='control'>
<retval declared_type='UIControl*' type='@'/>
</method>
<method selector='controlValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='setControl:'>
<arg name='control' declared_type='UIControl*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slider'>
<retval declared_type='UISlider*' type='@'/>
</method>
<method selector='switchControl'>
<retval declared_type='UISwitch*' type='@'/>
</method>
<method class_method='true' selector='tableItemWithControl:'>
<arg name='control' declared_type='UIControl*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textField'>
<retval declared_type='UITextField*' type='@'/>
</method>
</class>
<class name='RKControlTableViewCell'>
<method selector='control'>
<retval declared_type='UIControl*' type='@'/>
</method>
<method selector='setControl:'>
<arg name='control' declared_type='UIControl*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKDirectory'>
<method class_method='true' selector='applicationDataDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='cachesDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='ensureDirectoryExistsAtPath:error:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='dotNetDateFormatter'>
<retval declared_type='RKDotNetDateFormatter*' type='@'/>
</method>
<method class_method='true' selector='dotNetDateFormatterWithTimeZone:'>
<arg name='timeZone' declared_type='NSTimeZone*' index='0' type='@'/>
<retval declared_type='RKDotNetDateFormatter*' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg name='date' declared_type='NSDate*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKDynamicObjectMapping'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='dynamicMapping'>
<retval declared_type='RKDynamicObjectMapping*' type='@'/>
</method>
<method class_method='true' selector='dynamicMappingUsingBlock:'>
<arg name='block' declared_type='void (^)(RKDynamicObjectMapping *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKDynamicObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKDynamicObjectMapping*' type='@'/>
</method>
<method class_method='true' selector='dynamicMappingWithBlock:'>
<arg name='block' declared_type='void (^)(RKDynamicObjectMapping *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKDynamicObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKDynamicObjectMapping*' type='@'/>
</method>
<method selector='objectMappingForDataBlock'>
<retval declared_type='RKDynamicObjectMappingDelegateBlock' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</retval>
</method>
<method selector='objectMappingForDictionary:'>
<arg name='dictionary' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:whenValueOfKeyPath:isEqualTo:'>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='value' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMappingForDataBlock:'>
<arg name='objectMappingForDataBlock' declared_type='RKDynamicObjectMappingDelegateBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKDynamicObjectMappingMatcher'>
<method selector='initWithKey:value:objectMapping:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithKey:value:primaryKeyAttribute:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPrimaryKeyAttribute:evaluationBlock:'>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='BOOL (^)(id)' index='1' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='isMatchForData:'>
<arg name='data' declared_type='id' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='primaryKeyAttribute'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='containsObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsObjectWithAttributeValue:'>
<arg name='attributeValue' declared_type='id' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='countOfAttributeValues'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='countWithAttributeValue:'>
<arg name='attributeValue' declared_type='id' index='0' type='@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithEntity:attribute:managedObjectContext:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='attributeName' declared_type='NSString*' index='1' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='monitorsContextForChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectWithAttributeValue:'>
<arg name='attributeValue' declared_type='id' index='0' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsWithAttributeValue:'>
<arg name='attributeValue' declared_type='id' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg name='monitorsContextForChanges' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeCacheForEntity:attribute:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='attributeName' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='RKEntityByAttributeCache*' type='@'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cacheObjectsForEntity:byAttribute:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='attributeName' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg name='context' declared_type='NSManagedObjectContext*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntity:cachedByAttribute:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='attributeName' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='objectForEntity:withAttribute:value:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='attributeName' declared_type='NSString*' index='1' type='@'/>
<arg name='attributeValue' declared_type='id' index='2' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsForEntity:withAttribute:value:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='attributeName' declared_type='NSString*' index='1' type='@'/>
<arg name='attributeValue' declared_type='id' index='2' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setErrorMessage:'>
<arg name='errorMessage' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKFetchedResultsTableController'>
<method selector='cacheName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='fetchRequest'>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method selector='fetchedResultsController'>
<retval declared_type='NSFetchedResultsController*' type='@'/>
</method>
<method selector='heightForHeaderInSection'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='indexPathForObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='NSIndexPath*' type='@'/>
</method>
<method selector='loadTable'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadTableFromNetwork'>
<retval declared_type='void' type='v'/>
</method>
<method selector='onViewForHeaderInSection'>
<retval declared_type='RKFetchedResultsTableViewViewForHeaderInSectionBlock' function_pointer='true' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='UIView*' type='@'/>
</retval>
</method>
<method selector='predicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='resourcePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sectionNameKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setCacheName:'>
<arg name='cacheName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequest:'>
<arg name='fetchRequest' declared_type='NSFetchRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightForHeaderInSection:'>
<arg name='heightForHeaderInSection' declared_type='CGFloat' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMappingForClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnViewForHeaderInSection:'>
<arg name='onViewForHeaderInSection' declared_type='RKFetchedResultsTableViewViewForHeaderInSectionBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='UIView*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPredicate:'>
<arg name='predicate' declared_type='NSPredicate*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionNameKeyPath:'>
<arg name='sectionNameKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsSectionIndexTitles:'>
<arg name='showsSectionIndexTitles' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortComparator:'>
<arg name='sortComparator' declared_type='NSComparator' index='0' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='NSComparisonResult' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg name='sortDescriptors' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortSelector:'>
<arg name='sortSelector' declared_type='SEL' index='0' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsSectionIndexTitles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sortComparator'>
<retval declared_type='NSComparator' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='NSComparisonResult' type='i'/>
</retval>
</method>
<method selector='sortDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortSelector'>
<retval declared_type='SEL' type=':'/>
</method>
</class>
<class name='RKForm'>
<method selector='addRowForAttribute:withControlType:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlType' declared_type='RKFormControlType' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowForAttribute:withControlType:usingBlock:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlType' declared_type='RKFormControlType' index='1' type='i'/>
<arg name='block' declared_type='void (^)(RKControlTableItem *)' index='2' function_pointer='true' type='@?'>
<arg declared_type='RKControlTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onCellWithClass:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='cellKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='cellClass' declared_type='Class' index='2' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onCellWithClass:usingBlock:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='cellKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='cellClass' declared_type='Class' index='2' type='#'/>
<arg name='block' declared_type='void (^)(RKTableItem *)' index='3' function_pointer='true' type='@?'>
<arg declared_type='RKTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onControl:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='control' declared_type='UIControl*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onControl:usingBlock:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='control' declared_type='UIControl*' index='2' type='@'/>
<arg name='block' declared_type='void (^)(RKControlTableItem *)' index='3' function_pointer='true' type='@?'>
<arg declared_type='RKControlTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSection:'>
<arg name='section' declared_type='RKFormSection*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSectionUsingBlock:'>
<arg name='block' declared_type='void (^)(RKFormSection *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKFormSection*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTableItem:'>
<arg name='tableItem' declared_type='RKTableItem*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='commitValuesToObject'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='controlForAttribute:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='UIControl*' type='@'/>
</method>
<method selector='controlTableItemForAttribute:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKControlTableItem*' type='@'/>
</method>
<method selector='didLoadInTableController:'>
<arg name='tableController' declared_type='RKTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='formForObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='formForObject:usingBlock:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='block' declared_type='void (^)(RKForm *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKForm*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='formSection:didAddTableItem:forAttributeAtKeyPath:'>
<arg name='formSection' declared_type='RKFormSection*' index='0' type='@'/>
<arg name='tableItem' declared_type='RKTableItem*' index='1' type='@'/>
<arg name='attributeKeyPath' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='onSubmit'>
<retval declared_type='RKFormBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='sections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setOnSubmit:'>
<arg name='onSubmit' declared_type='RKFormBlock' index='0' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='submit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController'>
<retval declared_type='RKTableController*' type='@'/>
</method>
<method selector='tableItemForAttribute:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKTableItem*' type='@'/>
</method>
<method selector='tableItems'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='willLoadInTableController:'>
<arg name='tableController' declared_type='RKTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKFormSection'>
<method selector='addRowForAttribute:withControlType:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlType' declared_type='RKFormControlType' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowForAttribute:withControlType:usingBlock:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlType' declared_type='RKFormControlType' index='1' type='i'/>
<arg name='block' declared_type='void (^)(RKControlTableItem *)' index='2' function_pointer='true' type='@?'>
<arg declared_type='RKControlTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onCellWithClass:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='cellKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='cellClass' declared_type='Class' index='2' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onCellWithClass:usingBlock:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='cellKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='cellClass' declared_type='Class' index='2' type='#'/>
<arg name='block' declared_type='void (^)(RKTableItem *)' index='3' function_pointer='true' type='@?'>
<arg declared_type='RKTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onControl:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='control' declared_type='UIControl*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowMappingAttribute:toKeyPath:onControl:usingBlock:'>
<arg name='attributeKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='controlKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='control' declared_type='UIControl*' index='2' type='@'/>
<arg name='block' declared_type='void (^)(RKControlTableItem *)' index='3' function_pointer='true' type='@?'>
<arg declared_type='RKControlTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTableItem:'>
<arg name='tableItem' declared_type='RKTableItem*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='form'>
<retval declared_type='RKForm*' type='@'/>
</method>
<method selector='initWithForm:'>
<arg name='form' declared_type='RKForm*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='sectionInForm:'>
<arg name='form' declared_type='RKForm*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setForm:'>
<arg name='form' declared_type='RKForm*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectLoader'>
<method selector='initWithURL:mappingProvider:objectStore:'>
<arg name='URL' declared_type='RKURL*' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='loaderWithURL:mappingProvider:objectStore:'>
<arg name='URL' declared_type='RKURL*' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='setObjectStore:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectMapping'>
<method selector='connectRelationship:withObjectForPrimaryKeyAttribute:'>
<arg name='relationshipName' declared_type='NSString*' index='0' type='@'/>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectRelationship:withObjectForPrimaryKeyAttribute:usingEvaluationBlock:'>
<arg name='relationshipName' declared_type='NSString*' index='0' type='@'/>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='1' type='@'/>
<arg name='block' declared_type='BOOL (^)(id)' index='2' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectRelationship:withObjectForPrimaryKeyAttribute:whenValueOfKeyPath:isEqualTo:'>
<arg name='relationshipName' declared_type='NSString*' index='0' type='@'/>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='value' declared_type='id' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method sentinel='0' variadic='true' selector='connectRelationshipsWithObjectsForPrimaryKeyAttributes:'>
<arg name='firstRelationshipName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultValueForMissingAttribute:'>
<arg name='attributeName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='initWithEntity:inManagedObjectStore:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingForClass:inManagedObjectStore:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingForEntity:inManagedObjectStore:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='1' type='@'/>
<retval declared_type='RKManagedObjectMapping*' type='@'/>
</method>
<method class_method='true' selector='mappingForEntityWithName:inManagedObjectStore:'>
<arg name='entityName' declared_type='NSString*' index='0' type='@'/>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='1' type='@'/>
<retval declared_type='RKManagedObjectMapping*' type='@'/>
</method>
<method selector='objectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='primaryKeyAttribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='relationshipsAndPrimaryKeyAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setPrimaryKeyAttribute:'>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectSearchEngine'>
<method selector='mode'>
<retval declared_type='RKSearchMode' type='i'/>
</method>
<method selector='predicateForSearch:'>
<arg name='searchText' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method class_method='true' selector='searchEngine'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setMode:'>
<arg name='mode' declared_type='RKSearchMode' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='tokenizedNormalizedString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKManagedObjectSeeder'>
<method selector='delegate'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='finalizeSeedingAndExit'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' variadic='true' selector='generateSeedDatabaseWithObjectManager:fromFiles:'>
<arg name='objectManager' declared_type='RKObjectManager*' index='0' type='@'/>
<arg name='fileName' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='objectSeederWithObjectManager:'>
<arg name='objectManager' declared_type='RKObjectManager*' index='0' type='@'/>
<retval declared_type='RKManagedObjectSeeder*' type='@'/>
</method>
<method selector='pathToSeedDatabase'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='seedObjectsFromFile:withObjectMapping:'>
<arg name='fileName' declared_type='NSString*' index='0' type='@'/>
<arg name='nilOrObjectMapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seedObjectsFromFile:withObjectMapping:bundle:'>
<arg name='fileName' declared_type='NSString*' index='0' type='@'/>
<arg name='nilOrObjectMapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<arg name='nilOrBundle' declared_type='NSBundle*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' selector='seedObjectsFromFiles:'>
<arg name='fileName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='NSObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='cacheStrategy'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method class_method='true' selector='defaultObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='deletePersistentStore'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deletePersistentStoreUsingSeedDatabaseName:'>
<arg name='seedFile' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='deleteStoreAtPath:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='deleteStoreInApplicationDataDirectoryWithFilename:'>
<arg name='filename' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithStoreFilename:'>
<arg name='storeFilename' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContextForCurrentThread'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='newManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method class_method='true' selector='objectStoreWithStoreFilename:'>
<arg name='storeFilename' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method class_method='true' selector='objectStoreWithStoreFilename:inDirectory:usingSeedDatabaseName:managedObjectModel:delegate:'>
<arg name='storeFilename' declared_type='NSString*' index='0' type='@'/>
<arg name='directory' declared_type='NSString*' index='1' type='@'/>
<arg name='nilOrNameOfSeedDatabaseInMainBundle' declared_type='NSString*' index='2' type='@'/>
<arg name='nilOrManagedObjectModel' declared_type='NSManagedObjectModel*' index='3' type='@'/>
<arg name='delegate' declared_type='id' index='4' type='@'/>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method class_method='true' selector='objectStoreWithStoreFilename:usingSeedDatabaseName:managedObjectModel:delegate:'>
<arg name='storeFilename' declared_type='NSString*' index='0' type='@'/>
<arg name='nilOrNameOfSeedDatabaseInMainBundle' declared_type='NSString*' index='1' type='@'/>
<arg name='nilOrManagedObjectModel' declared_type='NSManagedObjectModel*' index='2' type='@'/>
<arg name='delegate' declared_type='id' index='3' type='@'/>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='objectWithID:'>
<arg name='objectID' declared_type='NSManagedObjectID*' index='0' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsWithIDs:'>
<arg name='objectIDs' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pathToStoreFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval declared_type='NSPersistentStoreCoordinator*' type='@'/>
</method>
<method selector='primaryManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='save:'>
<arg name='error' declared_type='NSError**' index='0' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCacheStrategy:'>
<arg name='cacheStrategy' declared_type='NSObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultObjectStore:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='NSObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeFilename'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKManagedObjectThreadSafeInvocation'>
<method selector='deserializeManagedObjectIDsForArgument:withKeyPaths:'>
<arg name='argument' declared_type='id' index='0' type='@'/>
<arg name='keyPaths' declared_type='NSSet*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='invocationWithMethodSignature:'>
<arg name='methodSignature' declared_type='NSMethodSignature*' index='0' type='@'/>
<retval declared_type='RKManagedObjectThreadSafeInvocation*' type='@'/>
</method>
<method selector='invokeOnMainThread'>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='serializeManagedObjectsForArgument:withKeyPaths:'>
<arg name='argument' declared_type='id' index='0' type='@'/>
<arg name='keyPaths' declared_type='NSSet*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectKeyPaths:forArgument:'>
<arg name='keyPaths' declared_type='NSSet*' index='0' type='@'/>
<arg name='index' declared_type='NSInteger' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectStore:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingOperationQueue'>
<method selector='addOperation:'>
<arg name='op' declared_type='NSOperation*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addOperationWithBlock:'>
<arg name='block' declared_type='void (^)(void)' index='0' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='operationCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='operations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='waitUntilAllOperationsAreFinished'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMutableBlockDictionary'>
<method selector='setValueWithBlock:forKey:'>
<arg name='block' declared_type='id (^)()' index='0' function_pointer='true' type='@?'>
<retval declared_type='id' type='@'/>
</arg>
<arg name='key' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKOAuthClient'>
<method selector='accessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='authorizationCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='authorizationURL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='callbackURL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='clientID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='clientSecret'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='clientWithClientID:secret:'>
<arg name='clientID' declared_type='NSString*' index='0' type='@'/>
<arg name='secret' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='RKOAuthClient*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithClientID:secret:'>
<arg name='clientID' declared_type='NSString*' index='0' type='@'/>
<arg name='secret' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAuthorizationCode:'>
<arg name='authorizationCode' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationURL:'>
<arg name='authorizationURL' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallbackURL:'>
<arg name='callbackURL' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientID:'>
<arg name='clientID' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientSecret:'>
<arg name='clientSecret' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validateAuthorizationCode'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectAttributeMapping'>
<method selector='destinationKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isMappingForKeyOfNestedDictionary'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='mappingFromKeyPath:toKeyPath:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='destinationKeyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='RKObjectAttributeMapping*' type='@'/>
</method>
<method selector='setDestinationKeyPath:'>
<arg name='destinationKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceKeyPath:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKObjectLoader'>
<method selector='client'>
<retval declared_type='RKClient*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='finalizeLoad:error:'>
<arg name='successful' declared_type='BOOL' index='0' type='B'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleResponseError'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleTargetObject'>
<retval declared_type='void' type='v'/>
</method>
<method selector='informDelegateOfObjectLoadWithResultDictionary:'>
<arg name='dictionary' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithResourcePath:objectManager:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='objectManager' declared_type='RKObjectManager*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:mappingProvider:'>
<arg name='URL' declared_type='RKURL*' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isResponseMappable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='loaderWithResourcePath:objectManager:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='objectManager' declared_type='RKObjectManager*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='loaderWithURL:mappingProvider:'>
<arg name='URL' declared_type='RKURL*' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingProvider'>
<retval declared_type='RKObjectMappingProvider*' type='@'/>
</method>
<method selector='mappingQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='onDidFailWithError'>
<retval declared_type='RKObjectLoaderDidFailWithErrorBlock' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onDidLoadObject'>
<retval declared_type='RKObjectLoaderDidLoadObjectBlock' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onDidLoadObjects'>
<retval declared_type='RKObjectLoaderDidLoadObjectsBlock' function_pointer='true' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onDidLoadObjectsDictionary'>
<retval declared_type='RKObjectLoaderDidLoadObjectsDictionaryBlock' function_pointer='true' type='@?'>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='performMappingOnBackgroundThread'>
<retval declared_type='void' type='v'/>
</method>
<method selector='response'>
<retval declared_type='RKResponse*' type='@'/>
</method>
<method selector='result'>
<retval declared_type='RKObjectMappingResult*' type='@'/>
</method>
<method selector='serializationMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='serializationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingProvider:'>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingQueue:'>
<arg name='mappingQueue' declared_type='dispatch_queue_t' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidFailWithError:'>
<arg name='onDidFailWithError' declared_type='RKObjectLoaderDidFailWithErrorBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidLoadObject:'>
<arg name='onDidLoadObject' declared_type='RKObjectLoaderDidLoadObjectBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidLoadObjects:'>
<arg name='onDidLoadObjects' declared_type='RKObjectLoaderDidLoadObjectsBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidLoadObjectsDictionary:'>
<arg name='onDidLoadObjectsDictionary' declared_type='RKObjectLoaderDidLoadObjectsDictionaryBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSerializationMIMEType:'>
<arg name='serializationMIMEType' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSerializationMapping:'>
<arg name='serializationMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceObject:'>
<arg name='sourceObject' declared_type='NSObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' declared_type='NSObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='NSObject*' type='@'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='acceptMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='client'>
<retval declared_type='RKClient*' type='@'/>
</method>
<method class_method='true' selector='defaultMappingQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='deleteObject:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteObject:mapResponseWith:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteObject:usingBlock:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='block' declared_type='RKObjectLoaderBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='fetchedResultsTableControllerForTableViewController:'>
<arg name='tableViewController' declared_type='UITableViewController*' index='0' type='@'/>
<retval declared_type='RKFetchedResultsTableController*' type='@'/>
</method>
<method selector='fetchedResultsTableControllerWithTableView:forViewController:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<arg name='viewController' declared_type='UIViewController*' index='1' type='@'/>
<retval declared_type='RKFetchedResultsTableController*' type='@'/>
</method>
<method selector='getObject:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObject:mapResponseWith:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObject:usingBlock:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='block' declared_type='RKObjectLoaderBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg name='baseURL' declared_type='RKURL*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOffline'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnline'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadObjectsAtResourcePath:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadObjectsAtResourcePath:objectMapping:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadObjectsAtResourcePath:usingBlock:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='RKObjectLoaderBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='loaderForObject:method:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='1' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loaderWithResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='loaderWithURL:'>
<arg name='URL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='managerWithBaseURL:'>
<arg name='baseURL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='managerWithBaseURLString:'>
<arg name='baseURLString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingProvider'>
<retval declared_type='RKObjectMappingProvider*' type='@'/>
</method>
<method selector='mappingQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='networkStatus'>
<retval declared_type='RKObjectManagerNetworkStatus' type='i'/>
</method>
<method selector='objectLoaderClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='objectLoaderForObject:method:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='1' type='i'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='RKObjectLoader*' type='@'/>
</method>
<method selector='objectLoaderWithResourcePath:delegate:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='RKObjectLoader*' type='@'/>
</method>
<method class_method='true' selector='objectManagerWithBaseURL:'>
<arg name='baseURL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='RKObjectManager*' type='@'/>
</method>
<method class_method='true' selector='objectManagerWithBaseURLString:'>
<arg name='baseURLString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectManager*' type='@'/>
</method>
<method selector='objectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='paginatorWithResourcePathPattern:'>
<arg name='resourcePathPattern' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectPaginator*' type='@'/>
</method>
<method selector='postObject:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postObject:mapResponseWith:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postObject:usingBlock:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='block' declared_type='RKObjectLoaderBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:mapResponseWith:delegate:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<arg name='delegate' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:usingBlock:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='block' declared_type='RKObjectLoaderBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestCache'>
<retval declared_type='RKRequestCache*' type='@'/>
</method>
<method selector='requestQueue'>
<retval declared_type='RKRequestQueue*' type='@'/>
</method>
<method selector='router'>
<retval declared_type='RKObjectRouter*' type='@'/>
</method>
<method selector='sendObject:toResourcePath:usingBlock:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<arg name='block' declared_type='RKObjectLoaderBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='serializationMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAcceptMIMEType:'>
<arg name='acceptMIMEType' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClient:'>
<arg name='client' declared_type='RKClient*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultMappingQueue:'>
<arg name='defaultMappingQueue' declared_type='dispatch_queue_t' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingProvider:'>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingQueue:'>
<arg name='mappingQueue' declared_type='dispatch_queue_t' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectStore:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouter:'>
<arg name='router' declared_type='RKObjectRouter*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSerializationMIMEType:'>
<arg name='serializationMIMEType' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedManager:'>
<arg name='manager' declared_type='RKObjectManager*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='RKObjectManager*' type='@'/>
</method>
<method selector='tableControllerForTableViewController:'>
<arg name='tableViewController' declared_type='UITableViewController*' index='0' type='@'/>
<retval declared_type='RKTableController*' type='@'/>
</method>
<method selector='tableControllerWithTableView:forViewController:'>
<arg name='tableView' declared_type='UITableView*' index='0' type='@'/>
<arg name='viewController' declared_type='UIViewController*' index='1' type='@'/>
<retval declared_type='RKTableController*' type='@'/>
</method>
</class>
<class name='RKObjectMapper'>
<method selector='context'>
<retval declared_type='RKObjectMappingProviderContext' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='errorCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='errors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithObject:mappingProvider:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapCollection:atKeyPath:usingMapping:'>
<arg name='mappableObjects' declared_type='NSArray*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mapFromObject:toObject:atKeyPath:usingMapping:'>
<arg name='mappableObject' declared_type='id' index='0' type='@'/>
<arg name='destinationObject' declared_type='id' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='3' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapObject:atKeyPath:usingMapping:'>
<arg name='mappableObject' declared_type='id' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mapperWithObject:mappingProvider:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingProvider'>
<retval declared_type='RKObjectMappingProvider*' type='@'/>
</method>
<method selector='objectWithMapping:andData:'>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='mappableData' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performMapping'>
<retval declared_type='RKObjectMappingResult*' type='@'/>
</method>
<method selector='setContext:'>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMapping:'>
<arg name='mapping' declared_type='RKObjectAttributeMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addDefaultDateFormatter:'>
<arg name='dateFormatter' declared_type='NSFormatter*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addDefaultDateFormatterForString:inTimeZone:'>
<arg name='dateFormatString' declared_type='NSString*' index='0' type='@'/>
<arg name='nilOrTimeZone' declared_type='NSTimeZone*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRelationshipMapping:'>
<arg name='mapping' declared_type='RKObjectRelationshipMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeMappingForKeyOfNestedDictionary'>
<retval declared_type='RKObjectAttributeMapping*' type='@'/>
</method>
<method selector='attributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classForProperty:'>
<arg name='propertyName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='dateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='defaultDateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForMissingAttribute:'>
<arg name='attributeName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasMany:withMapping:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasOne:withMapping:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ignoreUnknownKeyPaths'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inverseMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method sentinel='0' variadic='true' selector='mapAttributes:'>
<arg name='attributeKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapAttributesFromArray:'>
<arg name='set' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapAttributesFromSet:'>
<arg name='set' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapKeyOfNestedDictionaryToAttribute:'>
<arg name='attributeName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapKeyPath:toAttribute:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='destinationAttribute' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapKeyPath:toRelationship:withMapping:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='destinationRelationship' declared_type='NSString*' index='1' type='@'/>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapKeyPath:toRelationship:withMapping:serialize:'>
<arg name='relationshipKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<arg name='serialize' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method sentinel='0' variadic='true' selector='mapKeyPathsToAttributes:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapRelationship:withMapping:'>
<arg name='relationshipKey' declared_type='NSString*' index='0' type='@'/>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappableObjectForData:'>
<arg name='mappableData' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappedKeyPaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mappingForAttribute:'>
<arg name='attributeKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectAttributeMapping*' type='@'/>
</method>
<method class_method='true' selector='mappingForClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingForClass:block:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='block' declared_type='void (^)(RKObjectMapping *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingForClass:usingBlock:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='block' declared_type='void (^)(RKObjectMapping *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingForClass:withBlock:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='block' declared_type='void (^)(RKObjectMapping *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingForClassWithName:'>
<arg name='objectClassName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForDestinationKeyPath:'>
<arg name='destinationKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForKeyPath:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForRelationship:'>
<arg name='relationshipKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectRelationshipMapping*' type='@'/>
</method>
<method selector='mappingForSourceKeyPath:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='objectClassName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='performKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='relationshipMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeAllMappings'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMapping:'>
<arg name='attributeOrRelationshipMapping' declared_type='RKObjectAttributeMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMappingForKeyPath:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='serializationMapping'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='serializationMappingUsingBlock:'>
<arg name='block' declared_type='void (^)(RKObjectMapping *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='serializationMappingWithBlock:'>
<arg name='block' declared_type='void (^)(RKObjectMapping *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDateFormatters:'>
<arg name='dateFormatters' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultDateFormatters:'>
<arg name='dateFormatters' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoreUnknownKeyPaths:'>
<arg name='ignoreUnknownKeyPaths' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObjectClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClassName:'>
<arg name='objectClassName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg name='performKeyValueValidation' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPreferredDateFormatter:'>
<arg name='dateFormatter' declared_type='NSFormatter*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg name='preferredDateFormatter' declared_type='NSFormatter*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg name='setDefaultValueForMissingAttributes' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg name='setNilForMissingRelationships' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKObjectMappingDefinition'>
<method selector='forceCollectionMapping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rootKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg name='forceCollectionMapping' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRootKeyPath:'>
<arg name='rootKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectMappingOperation'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='destinationObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg name='sourceObject' declared_type='id' index='0' type='@'/>
<arg name='destinationObject' declared_type='id' index='1' type='@'/>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingOperationFromObject:toObject:withMapping:'>
<arg name='sourceObject' declared_type='id' index='0' type='@'/>
<arg name='destinationObject' declared_type='id' index='1' type='@'/>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='performMapping:'>
<arg name='error' declared_type='NSError**' index='0' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='queue'>
<retval declared_type='RKMappingOperationQueue*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueue:'>
<arg name='queue' declared_type='RKMappingOperationQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKObjectMappingProvider'>
<method selector='addMapping:context:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjectMapping:'>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='entryForPatternMatchingString:context:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='RKObjectMappingProviderContextEntry*' type='@'/>
</method>
<method selector='entryForResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectMappingProviderContextEntry*' type='@'/>
</method>
<method selector='errorMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='fetchRequestForResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</method>
<method selector='initializeContext:withValue:'>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='0' type='i'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingForContext:'>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='0' type='i'/>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method selector='mappingForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method selector='mappingForKeyPath:context:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method selector='mappingForPatternMatchingString:context:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method class_method='true' selector='mappingProvider'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingProviderUsingBlock:'>
<arg name='block' declared_type='void (^)(RKObjectMappingProvider *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKObjectMappingProvider*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingsByKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingsForContext:'>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='0' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectMappingForClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='objectMappingForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method selector='objectMappingForResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method class_method='true' selector='objectMappingProvider'>
<retval declared_type='RKObjectMappingProvider*' type='@'/>
</method>
<method selector='objectMappingsByKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectMappingsForClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='registerMapping:withRootKeyPath:'>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerObjectMapping:withRootKeyPath:'>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMapping:context:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMappingForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMappingForKeyPath:context:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectMappingForKeyPath:'>
<arg name='keyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='serializationMappingForClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setEntry:forPattern:context:'>
<arg name='entry' declared_type='RKObjectMappingProviderContextEntry*' index='0' type='@'/>
<arg name='pattern' declared_type='NSString*' index='1' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntry:forResourcePathPattern:'>
<arg name='entry' declared_type='RKObjectMappingProviderContextEntry*' index='0' type='@'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setErrorMapping:'>
<arg name='errorMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:context:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:forKeyPath:'>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:forKeyPath:context:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:forPattern:atIndex:context:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='pattern' declared_type='NSString*' index='1' type='@'/>
<arg name='index' declared_type='NSUInteger' index='2' type='I'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='3' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:forPattern:context:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='pattern' declared_type='NSString*' index='1' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:forKeyPath:'>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:forResourcePathPattern:'>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='resourcePathPattern' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:forResourcePathPattern:withFetchRequestBlock:'>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='resourcePathPattern' declared_type='NSString*' index='1' type='@'/>
<arg name='fetchRequestBlock' declared_type='RKObjectMappingProviderFetchRequestBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg name='paginationMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSerializationMapping:forClass:'>
<arg name='objectMapping' declared_type='RKObjectMapping*' index='0' type='@'/>
<arg name='objectClass' declared_type='Class' index='1' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forContext:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='1' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueForContext:'>
<arg name='context' declared_type='RKObjectMappingProviderContext' index='0' type='i'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKObjectMappingProviderContextEntry'>
<method class_method='true' selector='contextEntryWithMapping:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<retval declared_type='RKObjectMappingProviderContextEntry*' type='@'/>
</method>
<method class_method='true' selector='contextEntryWithMapping:userData:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<arg name='userData' declared_type='id' index='1' type='@'/>
<retval declared_type='RKObjectMappingProviderContextEntry*' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg name='userData' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userData'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKObjectMappingResult'>
<method selector='asCollection'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='asDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='asError'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='asObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg name='dictionary' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingResultWithDictionary:'>
<arg name='keyPathToMappedObjects' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='RKObjectMappingResult*' type='@'/>
</method>
</class>
<class name='RKObjectPaginator'>
<method selector='URL'>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='configurationDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='currentPage'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hasNextPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasObjectCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPageCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPreviousPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPatternURL:mappingProvider:'>
<arg name='patternURL' declared_type='RKURL*' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadNextPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPage:'>
<arg name='pageNumber' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPreviousPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingProvider'>
<retval declared_type='RKObjectMappingProvider*' type='@'/>
</method>
<method selector='objectCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='objectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='onDidFailWithError'>
<retval declared_type='RKObjectPaginatorDidFailWithErrorBlock' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onDidLoadObjectsForPage'>
<retval declared_type='RKObjectPaginatorDidLoadObjectsForPageBlock' function_pointer='true' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='pageCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='paginatorWithPatternURL:mappingProvider:'>
<arg name='patternURL' declared_type='RKURL*' index='0' type='@'/>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='patternURL'>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='perPage'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setConfigurationDelegate:'>
<arg name='configurationDelegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingProvider:'>
<arg name='mappingProvider' declared_type='RKObjectMappingProvider*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectStore:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidFailWithError:'>
<arg name='onDidFailWithError' declared_type='RKObjectPaginatorDidFailWithErrorBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidLoadObjectsForPage:'>
<arg name='onDidLoadObjectsForPage' declared_type='RKObjectPaginatorDidLoadObjectsForPageBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPatternURL:'>
<arg name='patternURL' declared_type='RKURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerPage:'>
<arg name='perPage' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectPropertyInspector'>
<method selector='propertyNamesAndTypesForClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyNamesAndTypesForEntity:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='propertyTypeFromAttributeString:'>
<arg name='attributeString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='sharedInspector'>
<retval declared_type='RKObjectPropertyInspector*' type='@'/>
</method>
<method selector='typeForProperty:ofClass:'>
<arg name='propertyName' declared_type='NSString*' index='0' type='@'/>
<arg name='objectClass' declared_type='Class' index='1' type='#'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='typeForProperty:ofEntity:'>
<arg name='propertyName' declared_type='NSString*' index='0' type='@'/>
<arg name='entity' declared_type='NSEntityDescription*' index='1' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
</class>
<class name='RKObjectRelationshipMapping'>
<method selector='mapping'>
<retval declared_type='RKObjectMappingDefinition*' type='@'/>
</method>
<method class_method='true' selector='mappingFromKeyPath:toKeyPath:withMapping:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='destinationKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<retval declared_type='RKObjectRelationshipMapping*' type='@'/>
</method>
<method class_method='true' selector='mappingFromKeyPath:toKeyPath:withMapping:reversible:'>
<arg name='sourceKeyPath' declared_type='NSString*' index='0' type='@'/>
<arg name='destinationKeyPath' declared_type='NSString*' index='1' type='@'/>
<arg name='objectOrDynamicMapping' declared_type='RKObjectMappingDefinition*' index='2' type='@'/>
<arg name='reversible' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='RKObjectRelationshipMapping*' type='@'/>
</method>
<method selector='reversible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReversible:'>
<arg name='reversible' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectRouter'>
<method selector='routeClass:toResourcePath:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeClass:toResourcePath:forMethod:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeClass:toResourcePath:forMethod:escapeRoutedPath:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='2' type='i'/>
<arg name='addEscapes' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeClass:toResourcePathPattern:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='resourcePathPattern' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeClass:toResourcePathPattern:forMethod:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='resourcePathPattern' declared_type='NSString*' index='1' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeClass:toResourcePathPattern:forMethod:escapeRoutedPath:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<arg name='resourcePathPattern' declared_type='NSString*' index='1' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='2' type='i'/>
<arg name='addEscapes' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectSerializer'>
<method selector='initWithObject:mapping:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='mapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='object'>
<retval declared_type='id' type='@'/>
</method>
<method selector='serializationForMIMEType:error:'>
<arg name='mimeType' declared_type='NSString*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='serializedObject:'>
<arg name='error' declared_type='NSError**' index='0' type='^@'/>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='serializedObjectForMIMEType:error:'>
<arg name='MIMEType' declared_type='NSString*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='serializerWithObject:mapping:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='mapping' declared_type='RKObjectMapping*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKOrderedDictionary'>
<method selector='insertObject:forKey:atIndex:'>
<arg name='anObject' declared_type='id' index='0' type='@'/>
<arg name='aKey' declared_type='id' index='1' type='@'/>
<arg name='anIndex' declared_type='NSUInteger' index='2' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyAtIndex:'>
<arg name='anIndex' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseKeyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
</class>
<class name='RKParams'>
<method selector='MD5'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attachments'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='dictionaryOfPlainTextParams'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg name='dictionary' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='RKParams*' type='@'/>
</method>
<method class_method='true' selector='params'>
<retval declared_type='RKParams*' type='@'/>
</method>
<method class_method='true' selector='paramsWithDictionary:'>
<arg name='dictionary' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='RKParams*' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:MIMEType:fileName:forParam:'>
<arg name='data' declared_type='NSData*' index='0' type='@'/>
<arg name='MIMEType' declared_type='NSString*' index='1' type='@'/>
<arg name='fileName' declared_type='NSString*' index='2' type='@'/>
<arg name='param' declared_type='NSString*' index='3' type='@'/>
<retval declared_type='RKParamsAttachment*' type='@'/>
</method>
<method selector='setData:MIMEType:forParam:'>
<arg name='data' declared_type='NSData*' index='0' type='@'/>
<arg name='MIMEType' declared_type='NSString*' index='1' type='@'/>
<arg name='param' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='RKParamsAttachment*' type='@'/>
</method>
<method selector='setData:forParam:'>
<arg name='data' declared_type='NSData*' index='0' type='@'/>
<arg name='param' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='RKParamsAttachment*' type='@'/>
</method>
<method selector='setFile:MIMEType:fileName:forParam:'>
<arg name='filePath' declared_type='NSString*' index='0' type='@'/>
<arg name='MIMEType' declared_type='NSString*' index='1' type='@'/>
<arg name='fileName' declared_type='NSString*' index='2' type='@'/>
<arg name='param' declared_type='NSString*' index='3' type='@'/>
<retval declared_type='RKParamsAttachment*' type='@'/>
</method>
<method selector='setFile:forParam:'>
<arg name='filePath' declared_type='NSString*' index='0' type='@'/>
<arg name='param' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='RKParamsAttachment*' type='@'/>
</method>
<method selector='setValue:forParam:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<arg name='param' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='RKParamsAttachment*' type='@'/>
</method>
</class>
<class name='RKParamsAttachment'>
<method selector='MD5'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='MIMEBoundary'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='MIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithName:data:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='data' declared_type='NSData*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithName:file:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='filePath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithName:value:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='length'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='open'>
<retval declared_type='void' type='v'/>
</method>
<method selector='read:maxLength:'>
<arg name='buffer' declared_type='uint8_t*' index='0' type='*'/>
<arg name='len' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setFileName:'>
<arg name='fileName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMIMEType:'>
<arg name='MIMEType' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKParserRegistry'>
<method selector='autoconfigure'>
<retval declared_type='void' type='v'/>
</method>
<method selector='parserClassForMIMEType:'>
<arg name='MIMEType' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='Class*' type='#'/>
</method>
<method selector='parserForMIMEType:'>
<arg name='MIMEType' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setParserClass:forMIMEType:'>
<arg name='parserClass' declared_type='Class*' index='0' type='#'/>
<arg name='MIMEType' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParserClass:forMIMETypeRegularExpression:'>
<arg name='parserClass' declared_type='Class*' index='0' type='#'/>
<arg name='MIMETypeRegex' declared_type='NSRegularExpression*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedRegistry:'>
<arg name='registry' declared_type='RKParserRegistry*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedRegistry'>
<retval declared_type='RKParserRegistry*' type='@'/>
</method>
</class>
<class name='RKPathMatcher'>
<method class_method='true' selector='matcherWithPath:'>
<arg name='pathString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKPathMatcher*' type='@'/>
</method>
<method class_method='true' selector='matcherWithPattern:'>
<arg name='patternString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKPathMatcher*' type='@'/>
</method>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg name='pathString' declared_type='NSString*' index='0' type='@'/>
<arg name='shouldTokenize' declared_type='BOOL' index='1' type='B'/>
<arg name='arguments' declared_type='NSDictionary**' index='2' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg name='patternString' declared_type='NSString*' index='0' type='@'/>
<arg name='shouldTokenize' declared_type='BOOL' index='1' type='B'/>
<arg name='arguments' declared_type='NSDictionary**' index='2' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathFromObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathFromObject:addingEscapes:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='addEscapes' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKPortCheck'>
<method selector='hasRun'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='host'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithHost:port:'>
<arg name='hostNameOrIPAddress' declared_type='NSString*' index='0' type='@'/>
<arg name='port' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='port'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='run'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKReachabilityObserver'>
<method selector='getFlags'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='host'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithAddress:'>
<arg name='address' declared_type='struct sockaddr*' index='0' type='^{sockaddr=CC[14c]}' const='true'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithHost:'>
<arg name='hostNameOrIPAddress' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isConnectionOnDemand'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConnectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterventionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMonitoringLocalWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachabilityDetermined'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='networkStatus'>
<retval declared_type='RKReachabilityNetworkStatus' type='i'/>
</method>
<method selector='reachabilityFlags'>
<retval declared_type='SCNetworkReachabilityFlags' type='I'/>
</method>
<method selector='reachabilityFlagsDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='reachabilityObserverForAddress:'>
<arg name='address' declared_type='struct sockaddr*' index='0' type='^{sockaddr=CC[14c]}' const='true'/>
<retval declared_type='RKReachabilityObserver*' type='@'/>
</method>
<method class_method='true' selector='reachabilityObserverForHost:'>
<arg name='hostNameOrIPAddress' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKReachabilityObserver*' type='@'/>
</method>
<method class_method='true' selector='reachabilityObserverForInternet'>
<retval declared_type='RKReachabilityObserver*' type='@'/>
</method>
<method class_method='true' selector='reachabilityObserverForInternetAddress:'>
<arg name='internetAddress' declared_type='in_addr_t' index='0' type='I'/>
<retval declared_type='RKReachabilityObserver*' type='@'/>
</method>
<method class_method='true' selector='reachabilityObserverForLocalWifi'>
<retval declared_type='RKReachabilityObserver*' type='@'/>
</method>
</class>
<class name='RKRefreshGestureRecognizer'>
<method selector='refreshState'>
<retval declared_type='RKRefreshState' type='i'/>
</method>
<method selector='scrollView'>
<retval declared_type='UIScrollView*' type='@'/>
</method>
<method selector='setRefreshState:'>
<arg name='refreshState' declared_type='RKRefreshState' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='triggerView'>
<retval declared_type='RKRefreshTriggerView*' type='@'/>
</method>
</class>
<class name='RKRefreshTriggerView'>
<method selector='activityIndicatorStyle'>
<retval declared_type='UIActivityIndicatorViewStyle' type='i'/>
</method>
<method selector='activityView'>
<retval declared_type='UIActivityIndicatorView*' type='@'/>
</method>
<method selector='arrowImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='arrowView'>
<retval declared_type='UIImageView*' type='@'/>
</method>
<method selector='lastUpdatedColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='lastUpdatedFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='lastUpdatedLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='refreshBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setActivityIndicatorStyle:'>
<arg name='activityIndicatorStyle' declared_type='UIActivityIndicatorViewStyle' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActivityView:'>
<arg name='activityView' declared_type='UIActivityIndicatorView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowImage:'>
<arg name='arrowImage' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowView:'>
<arg name='arrowView' declared_type='UIImageView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastUpdatedColor:'>
<arg name='lastUpdatedColor' declared_type='UIColor*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastUpdatedFont:'>
<arg name='lastUpdatedFont' declared_type='UIFont*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastUpdatedLabel:'>
<arg name='lastUpdatedLabel' declared_type='UILabel*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefreshBackgroundColor:'>
<arg name='refreshBackgroundColor' declared_type='UIColor*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleColor:'>
<arg name='titleColor' declared_type='UIColor*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleFont:'>
<arg name='titleFont' declared_type='UIFont*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLabel:'>
<arg name='titleLabel' declared_type='UILabel*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='titleColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='titleFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='titleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
</class>
<class name='RKRequest'>
<method selector='HTTPBody'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='HTTPBodyString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='HTTPMethod'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth1AccessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth1AccessTokenSecret'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth1ConsumerKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth1ConsumerSecret'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth2AccessToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='OAuth2RefreshToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLRequest'>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='additionalHTTPHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='additionalRootCertificates'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='authenticationType'>
<retval declared_type='RKRequestAuthenticationType' type='i'/>
</method>
<method selector='backgroundPolicy'>
<retval declared_type='RKRequestBackgroundPolicy' type='i'/>
</method>
<method selector='backgroundTaskIdentifier'>
<retval declared_type='UIBackgroundTaskIdentifier' type='I'/>
</method>
<method selector='cache'>
<retval declared_type='RKRequestCache*' type='@'/>
</method>
<method selector='cacheKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cachePolicy'>
<retval declared_type='RKRequestCachePolicy' type='i'/>
</method>
<method selector='cacheTimeoutInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='configurationDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='createTimeoutTimer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultHTTPEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='didFailLoadWithError:'>
<arg name='error' declared_type='NSError*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFinishLoad:'>
<arg name='response' declared_type='RKResponse*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableCertificateValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='finalizeLoad:'>
<arg name='successful' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='followRedirect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithURL:'>
<arg name='URL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:delegate:'>
<arg name='URL' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidateTimeoutTimer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isCacheable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCancelled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDELETE'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGET'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHEAD'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLoading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPOST'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPUT'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUnsent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i'/>
</method>
<method selector='onDidFailLoadWithError'>
<retval declared_type='RKRequestDidFailLoadWithErrorBlock' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onDidLoadResponse'>
<retval declared_type='RKRequestDidLoadResponseBlock' function_pointer='true' type='@?'>
<arg declared_type='RKResponse*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='params'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='password'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='prepareURLRequest'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='queue'>
<retval declared_type='RKRequestQueue*' type='@'/>
</method>
<method selector='reachabilityObserver'>
<retval declared_type='RKReachabilityObserver*' type='@'/>
</method>
<method class_method='true' selector='requestWithURL:'>
<arg name='URL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method class_method='true' selector='requestWithURL:delegate:'>
<arg name='URL' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resourcePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='RKResponse*' type='@'/>
</method>
<method selector='runLoopMode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='send'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendAsynchronously'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendSynchronously'>
<retval declared_type='RKResponse*' type='@'/>
</method>
<method selector='setAdditionalHTTPHeaders:'>
<arg name='additionalHTTPHeaders' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdditionalRootCertificates:'>
<arg name='additionalRootCertificates' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationType:'>
<arg name='authenticationType' declared_type='RKRequestAuthenticationType' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundPolicy:'>
<arg name='backgroundPolicy' declared_type='RKRequestBackgroundPolicy' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBody:forMIMEType:'>
<arg name='body' declared_type='NSDictionary*' index='0' type='@'/>
<arg name='MIMEType' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCache:'>
<arg name='cache' declared_type='RKRequestCache*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachePolicy:'>
<arg name='cachePolicy' declared_type='RKRequestCachePolicy' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheTimeoutInterval:'>
<arg name='cacheTimeoutInterval' declared_type='NSTimeInterval' index='0' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConfigurationDelegate:'>
<arg name='configurationDelegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHTTPEncoding:'>
<arg name='defaultHTTPEncoding' declared_type='NSStringEncoding' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisableCertificateValidation:'>
<arg name='disableCertificateValidation' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFollowRedirect:'>
<arg name='followRedirect' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPBody:'>
<arg name='HTTPBody' declared_type='NSData*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPBodyString:'>
<arg name='HTTPBodyString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMethod:'>
<arg name='method' declared_type='RKRequestMethod' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1AccessToken:'>
<arg name='OAuth1AccessToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1AccessTokenSecret:'>
<arg name='OAuth1AccessTokenSecret' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1ConsumerKey:'>
<arg name='OAuth1ConsumerKey' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth1ConsumerSecret:'>
<arg name='OAuth1ConsumerSecret' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth2AccessToken:'>
<arg name='OAuth2AccessToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOAuth2RefreshToken:'>
<arg name='OAuth2RefreshToken' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidFailLoadWithError:'>
<arg name='onDidFailLoadWithError' declared_type='RKRequestDidFailLoadWithErrorBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnDidLoadResponse:'>
<arg name='onDidLoadResponse' declared_type='RKRequestDidLoadResponseBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKResponse*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParams:'>
<arg name='params' declared_type='NSObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:'>
<arg name='password' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueue:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityObserver:'>
<arg name='reachabilityObserver' declared_type='RKReachabilityObserver*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopMode:'>
<arg name='runLoopMode' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeoutInterval:'>
<arg name='timeoutInterval' declared_type='NSTimeInterval' index='0' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg name='URL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg name='userData' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg name='username' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeoutInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='userData'>
<retval declared_type='id' type='@'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='wasSentToResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wasSentToResourcePath:method:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='1' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRequestCache'>
<method selector='cacheDateForRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='etagForRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasResponseForRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='headersForRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithPath:storagePolicy:'>
<arg name='cachePath' declared_type='NSString*' index='0' type='@'/>
<arg name='storagePolicy' declared_type='RKRequestCacheStoragePolicy' index='1' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidateAll'>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateWithStoragePolicy:'>
<arg name='storagePolicy' declared_type='RKRequestCacheStoragePolicy' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathForRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseForRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='RKResponse*' type='@'/>
</method>
<method class_method='true' selector='rfc1123DateFormatter'>
<retval declared_type='NSDateFormatter*' type='@'/>
</method>
<method selector='setCacheDate:forRequest:'>
<arg name='date' declared_type='NSDate*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStoragePolicy:'>
<arg name='storagePolicy' declared_type='RKRequestCacheStoragePolicy' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storagePolicy'>
<retval declared_type='RKRequestCacheStoragePolicy' type='i'/>
</method>
<method selector='storeResponse:forRequest:'>
<arg name='response' declared_type='RKResponse*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRequestQueue'>
<method selector='abortRequestsWithDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelAllRequests'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelRequestsWithDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='concurrentRequestsLimit'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='containsRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='loadingCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='newRequestQueueWithName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='requestQueue'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='requestQueueExistsWithName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='requestQueueWithName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='requestTimeout'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setConcurrentRequestsLimit:'>
<arg name='concurrentRequestsLimit' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestTimeout:'>
<arg name='requestTimeout' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedQueue:'>
<arg name='requestQueue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsNetworkActivityIndicatorWhenBusy:'>
<arg name='showsNetworkActivityIndicatorWhenBusy' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuspended:'>
<arg name='suspended' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedQueue'>
<retval declared_type='RKRequestQueue*' type='@'/>
</method>
<method selector='showsNetworkActivityIndicatorWhenBusy'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method selector='suspended'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRequestSerialization'>
<method selector='MIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='initWithData:MIMEType:'>
<arg name='data' declared_type='NSData*' index='0' type='@'/>
<arg name='MIMEType' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='serializationWithData:MIMEType:'>
<arg name='data' declared_type='NSData*' index='0' type='@'/>
<arg name='MIMEType' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKResponse'>
<method selector='MIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='allHeaderFields'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='body'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='bodyAsJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bodyAsString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bodyEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='bodyEncodingName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='contentLength'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='contentType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cookies'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='failureError'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='failureErrorDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRequest:body:headers:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='body' declared_type='NSData*' index='1' type='@'/>
<arg name='headers' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSynchronousRequest:URLResponse:body:error:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='URLResponse' declared_type='NSHTTPURLResponse*' index='1' type='@'/>
<arg name='body' declared_type='NSData*' index='2' type='@'/>
<arg name='error' declared_type='NSError*' index='3' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClientError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConflict'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCreated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFailure'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isForbidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGone'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHTML'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInformational'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInvalid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isJSON'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNoContent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNotFound'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNotModified'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOK'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRedirect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRedirection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isServerError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isServiceUnavailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSuccessful'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUnauthorized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUnprocessableEntity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isXHTML'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isXML'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedStatusCodeString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='location'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='parsedBody:'>
<arg name='error' declared_type='NSError**' index='0' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='request'>
<retval declared_type='RKRequest*' type='@'/>
</method>
<method selector='statusCode'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='wasLoadedFromCache'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKSearchEngine'>
<method selector='isCaseSensitive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mode'>
<retval declared_type='RKSearchMode' type='i'/>
</method>
<method class_method='true' selector='searchEngine'>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchFor:inCollection:'>
<arg name='searchText' declared_type='NSString*' index='0' type='@'/>
<arg name='collection' declared_type='NSArray*' index='1' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='searchFor:onProperties:inCollection:'>
<arg name='searchText' declared_type='NSString*' index='0' type='@'/>
<arg name='properties' declared_type='NSArray*' index='1' type='@'/>
<arg name='collection' declared_type='NSArray*' index='2' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setCaseSensitive:'>
<arg name='caseSensitive' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg name='mode' declared_type='RKSearchMode' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStripsWhitespace:'>
<arg name='stripsWhitespace' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTokenizeQuery:'>
<arg name='tokenizeQuery' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stripsWhitespace'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tokenizeQuery'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKSearchWord'>
<method selector='addSearchableManagedObjects:'>
<arg name='searchableManagedObjects' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSearchableManagedObjectsObject:'>
<arg name='searchableManagedObject' declared_type='RKSearchableManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSearchableManagedObjects:'>
<arg name='searchableManagedObjects' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSearchableManagedObjectsObject:'>
<arg name='searchableManagedObject' declared_type='RKSearchableManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchableManagedObjects'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setSearchableManagedObjects:'>
<arg name='searchableManagedObjects' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWord:'>
<arg name='word' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='word'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKSearchWordObserver'>
<method class_method='true' selector='sharedObserver'>
<retval declared_type='RKSearchWordObserver*' type='@'/>
</method>
</class>
<class name='RKSearchableManagedObject'>
<method selector='addSearchWords:'>
<arg name='searchWords' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSearchWordsObject:'>
<arg name='searchWord' declared_type='RKSearchWord*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='predicateForSearchWithText:searchMode:'>
<arg name='searchText' declared_type='NSString*' index='0' type='@'/>
<arg name='mode' declared_type='RKSearchMode' index='1' type='i'/>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='refreshSearchWords'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSearchWords:'>
<arg name='searchWords' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSearchWordsObject:'>
<arg name='searchWord' declared_type='RKSearchWord*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchWords'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='searchableAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setSearchWords:'>
<arg name='searchWords' declared_type='NSSet*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKTableController'>
<method selector='addSection:'>
<arg name='section' declared_type='RKTableSection*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='form'>
<retval declared_type='RKForm*' type='@'/>
</method>
<method selector='indexForSection:'>
<arg name='section' declared_type='RKTableSection*' index='0' type='@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='insertSection:atIndex:'>
<arg name='section' declared_type='RKTableSection*' index='0' type='@'/>
<arg name='index' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadEmpty'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadForm:'>
<arg name='form' declared_type='RKForm*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadObjects:'>
<arg name='objects' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadObjects:inSection:'>
<arg name='objects' declared_type='NSArray*' index='0' type='@'/>
<arg name='sectionIndex' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadTableFromResourcePath:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadTableFromResourcePath:usingBlock:'>
<arg name='resourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='void (^)(RKObjectLoader *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKObjectLoader*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadTableItems:'>
<arg name='tableItems' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadTableItems:inSection:'>
<arg name='tableItems' declared_type='NSArray*' index='0' type='@'/>
<arg name='sectionIndex' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadTableItems:inSection:withMapping:'>
<arg name='tableItems' declared_type='NSArray*' index='0' type='@'/>
<arg name='sectionIndex' declared_type='NSUInteger' index='1' type='I'/>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadTableItems:withMapping:'>
<arg name='tableItems' declared_type='NSArray*' index='0' type='@'/>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllSections'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllSections:'>
<arg name='recreateFirstSection' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSection:'>
<arg name='section' declared_type='RKTableSection*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSectionAtIndex:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sectionAtIndex:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='RKTableSection*' type='@'/>
</method>
<method selector='sectionNameKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sectionWithHeaderTitle:'>
<arg name='title' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKTableSection*' type='@'/>
</method>
<method selector='sections'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionNameKeyPath:'>
<arg name='sectionNameKeyPath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateTableViewUsingBlock:'>
<arg name='block' declared_type='void (^)()' index='0' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKTableItem'>
<method selector='URL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cellMapping'>
<retval declared_type='RKTableViewCellMapping*' type='@'/>
</method>
<method selector='detailText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='image'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setCellMapping:'>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailText:'>
<arg name='detailText' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg name='text' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg name='URL' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg name='userData' declared_type='RKMutableBlockDictionary*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='tableItem'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemUsingBlock:'>
<arg name='block' declared_type='void (^)(RKTableItem *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemWithCellClass:'>
<arg name='tableViewCellSubclass' declared_type='Class' index='0' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemWithCellMapping:'>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemWithText:'>
<arg name='text' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemWithText:URL:'>
<arg name='text' declared_type='NSString*' index='0' type='@'/>
<arg name='URL' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemWithText:detailText:'>
<arg name='text' declared_type='NSString*' index='0' type='@'/>
<arg name='detailText' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemWithText:detailText:image:'>
<arg name='text' declared_type='NSString*' index='0' type='@'/>
<arg name='detailText' declared_type='NSString*' index='1' type='@'/>
<arg name='image' declared_type='UIImage*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='tableItemWithText:usingBlock:'>
<arg name='text' declared_type='NSString*' index='0' type='@'/>
<arg name='block' declared_type='void (^)(RKTableItem *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='RKTableItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method sentinel='0' class_method='true' variadic='true' selector='tableItemsFromStrings:'>
<arg name='firstString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='text'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userData'>
<retval declared_type='RKMutableBlockDictionary*' type='@'/>
</method>
</class>
<class name='RKTableSection'>
<method selector='cellMappings'>
<retval declared_type='RKTableViewCellMappings*' type='@'/>
</method>
<method selector='footerHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='footerTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='footerView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='headerHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='headerTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='headerView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='insertObject:atIndex:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='index' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveObjectAtIndex:toIndex:'>
<arg name='sourceIndex' declared_type='NSUInteger' index='0' type='I'/>
<arg name='destinationIndex' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectAtIndex:'>
<arg name='rowIndex' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objects'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg name='index' declared_type='NSUInteger' index='0' type='I'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='section'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='sectionForObjects:withMappings:'>
<arg name='objects' declared_type='NSArray*' index='0' type='@'/>
<arg name='cellMappings' declared_type='RKTableViewCellMappings*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='sectionUsingBlock:'>
<arg name='block' declared_type='void (^)(RKTableSection *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKTableSection*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCellMappings:'>
<arg name='cellMappings' declared_type='RKTableViewCellMappings*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFooterHeight:'>
<arg name='footerHeight' declared_type='CGFloat' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFooterTitle:'>
<arg name='footerTitle' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFooterView:'>
<arg name='footerView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderHeight:'>
<arg name='headerHeight' declared_type='CGFloat' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderTitle:'>
<arg name='headerTitle' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderView:'>
<arg name='headerView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjects:'>
<arg name='objects' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableController:'>
<arg name='tableController' declared_type='RKTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableController'>
<retval declared_type='RKTableController*' type='@'/>
</method>
<method selector='tableView'>
<retval declared_type='UITableView*' type='@'/>
</method>
</class>
<class name='RKTableViewCellMapping'>
<method selector='accessoryType'>
<retval declared_type='UITableViewCellAccessoryType' type='i'/>
</method>
<method selector='addBlockAction:forControlEvents:toControlAtKeyPath:'>
<arg name='block' declared_type='void (^)(id)' index='0' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='controlEvents' declared_type='UIControlEvents' index='1' type='I'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addBlockAction:forTouchEventToControlAtKeyPath:'>
<arg name='block' declared_type='void (^)(id)' index='0' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDefaultMappings'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPrepareCellBlock:'>
<arg name='block' declared_type='void (^)(UITableViewCell *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTarget:action:forControlEvents:toControlAtKeyPath:'>
<arg name='target' declared_type='id' index='0' type='@'/>
<arg name='action' declared_type='SEL' index='1' type=':'/>
<arg name='controlEvents' declared_type='UIControlEvents' index='2' type='I'/>
<arg name='keyPath' declared_type='NSString*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTarget:action:forTouchEventToControlAtKeyPath:'>
<arg name='target' declared_type='id' index='0' type='@'/>
<arg name='action' declared_type='SEL' index='1' type=':'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cellClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='cellClassName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='cellMapping'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='cellMappingForReuseIdentifier:'>
<arg name='reuseIdentifier' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='cellMappingUsingBlock:'>
<arg name='block' declared_type='void (^)(RKTableViewCellMapping *)' index='0' function_pointer='true' type='@?'>
<arg declared_type='RKTableViewCellMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='defaultCellMapping'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deselectsRowOnSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='editingStyleForObjectAtIndexPath'>
<retval declared_type='RKTableViewEditingStyleForObjectAtIndexPathBlock' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='UITableViewCellEditingStyle' type='i'/>
</retval>
</method>
<method selector='heightOfCellForObjectAtIndexPath'>
<retval declared_type='RKTableViewHeightOfCellForObjectAtIndexPathBlock' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</retval>
</method>
<method selector='managesCellAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='onCellWillAppearForObjectAtIndexPath'>
<retval declared_type='RKTableViewCellForObjectAtIndexPathBlock' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onSelectCell'>
<retval declared_type='RKTableViewAnonymousBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onSelectCellForObjectAtIndexPath'>
<retval declared_type='RKTableViewCellForObjectAtIndexPathBlock' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='onTapAccessoryButtonForObjectAtIndexPath'>
<retval declared_type='RKTableViewAccessoryButtonTappedForObjectAtIndexPathBlock' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='reuseIdentifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rowHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='selectionStyle'>
<retval declared_type='UITableViewCellSelectionStyle' type='i'/>
</method>
<method selector='setAccessoryType:'>
<arg name='accessoryType' declared_type='UITableViewCellAccessoryType' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellClass:'>
<arg name='cellClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellClassName:'>
<arg name='cellClassName' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeselectsRowOnSelection:'>
<arg name='deselectsRowOnSelection' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditingStyleForObjectAtIndexPath:'>
<arg name='editingStyleForObjectAtIndexPath' declared_type='RKTableViewEditingStyleForObjectAtIndexPathBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='UITableViewCellEditingStyle' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightOfCellForObjectAtIndexPath:'>
<arg name='heightOfCellForObjectAtIndexPath' declared_type='RKTableViewHeightOfCellForObjectAtIndexPathBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagesCellAttributes:'>
<arg name='managesCellAttributes' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnCellWillAppearForObjectAtIndexPath:'>
<arg name='onCellWillAppearForObjectAtIndexPath' declared_type='RKTableViewCellForObjectAtIndexPathBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnSelectCell:'>
<arg name='onSelectCell' declared_type='RKTableViewAnonymousBlock' index='0' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnSelectCellForObjectAtIndexPath:'>
<arg name='onSelectCellForObjectAtIndexPath' declared_type='RKTableViewCellForObjectAtIndexPathBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnTapAccessoryButtonForObjectAtIndexPath:'>
<arg name='onTapAccessoryButtonForObjectAtIndexPath' declared_type='RKTableViewAccessoryButtonTappedForObjectAtIndexPathBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReuseIdentifier:'>
<arg name='reuseIdentifier' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowHeight:'>
<arg name='rowHeight' declared_type='CGFloat' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionStyle:'>
<arg name='selectionStyle' declared_type='UITableViewCellSelectionStyle' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyle:'>
<arg name='style' declared_type='UITableViewCellStyle' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetIndexPathForMove:'>
<arg name='targetIndexPathForMove' declared_type='RKTableViewTargetIndexPathForMoveBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='NSIndexPath*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleForDeleteButtonForObjectAtIndexPath:'>
<arg name='titleForDeleteButtonForObjectAtIndexPath' declared_type='RKTableViewTitleForDeleteButtonForObjectAtIndexPathBlock' index='0' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='UITableViewCellStyle' type='i'/>
</method>
<method selector='targetIndexPathForMove'>
<retval declared_type='RKTableViewTargetIndexPathForMoveBlock' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='NSIndexPath*' type='@'/>
</retval>
</method>
<method selector='titleForDeleteButtonForObjectAtIndexPath'>
<retval declared_type='RKTableViewTitleForDeleteButtonForObjectAtIndexPathBlock' function_pointer='true' type='@?'>
<arg declared_type='UITableViewCell*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSIndexPath*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</retval>
</method>
</class>
<class name='RKTableViewCellMappings'>
<method selector='cellMappingForClass:'>
<arg name='objectClass' declared_type='Class' index='0' type='#'/>
<retval declared_type='RKTableViewCellMapping*' type='@'/>
</method>
<method selector='cellMappingForObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='RKTableViewCellMapping*' type='@'/>
</method>
<method class_method='true' selector='cellMappings'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCellMapping:forClass:'>
<arg name='cellMapping' declared_type='RKTableViewCellMapping*' index='0' type='@'/>
<arg name='objectClass' declared_type='Class' index='1' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKURL'>
<method selector='URLByAppendingQueryParameters:'>
<arg name='theQueryParameters' declared_type='NSDictionary*' index='0' type='@'/>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='URLByAppendingResourcePath:'>
<arg name='theResourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='URLByAppendingResourcePath:queryParameters:'>
<arg name='theResourcePath' declared_type='NSString*' index='0' type='@'/>
<arg name='theQueryParameters' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='URLByInterpolatingResourcePathWithObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='RKURL*' type='@'/>
</method>
<method selector='URLByReplacingResourcePath:'>
<arg name='newResourcePath' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='RKURL*' type='@'/>
</method>
<method class_method='true' selector='URLWithBaseURL:'>
<arg name='baseURL' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='URLWithBaseURL:resourcePath:'>
<arg name='baseURL' declared_type='NSURL*' index='0' type='@'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='URLWithBaseURL:resourcePath:queryParameters:'>
<arg name='baseURL' declared_type='NSURL*' index='0' type='@'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<arg name='queryParameters' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='URLWithBaseURLString:'>
<arg name='baseURLString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='URLWithBaseURLString:resourcePath:'>
<arg name='baseURLString' declared_type='NSString*' index='0' type='@'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='URLWithBaseURLString:resourcePath:queryParameters:'>
<arg name='baseURLString' declared_type='NSString*' index='0' type='@'/>
<arg name='resourcePath' declared_type='NSString*' index='1' type='@'/>
<arg name='queryParameters' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:resourcePath:queryParameters:'>
<arg name='theBaseURL' declared_type='NSURL*' index='0' type='@'/>
<arg name='theResourcePath' declared_type='NSString*' index='1' type='@'/>
<arg name='theQueryParameters' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='resourcePath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='SDImageCache'>
<method selector='cleanDisk'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDisk'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearMemory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getDiskCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='getMemoryCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='getMemorySize'>
<retval declared_type='int' type='i'/>
</method>
<method selector='getSize'>
<retval declared_type='int' type='i'/>
</method>
<method selector='imageFromKey:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageFromKey:fromDisk:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='fromDisk' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='queryDiskCacheForKey:delegate:userInfo:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImageForKey:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImageForKey:fromDisk:'>
<arg name='key' declared_type='NSString*' index='0' type='@'/>
<arg name='fromDisk' declared_type='BOOL' index='1' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setMaxCacheAge:'>
<arg name='maxCacheAge' declared_type='NSInteger' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageCache'>
<retval declared_type='SDImageCache*' type='@'/>
</method>
<method selector='storeImage:forKey:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<arg name='key' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeImage:forKey:toDisk:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<arg name='key' declared_type='NSString*' index='1' type='@'/>
<arg name='toDisk' declared_type='BOOL' index='2' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeImage:imageData:forKey:toDisk:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<arg name='data' declared_type='NSData*' index='1' type='@'/>
<arg name='key' declared_type='NSString*' index='2' type='@'/>
<arg name='toDisk' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDWebImageDecoder'>
<method selector='decodeImage:withDelegate:userInfo:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageDecoder'>
<retval declared_type='SDWebImageDecoder*' type='@'/>
</method>
</class>
<class name='SDWebImageDownloader'>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='downloaderWithURL:delegate:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='downloaderWithURL:delegate:userInfo:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='userInfo' declared_type='id' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='downloaderWithURL:delegate:userInfo:lowPriority:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='userInfo' declared_type='id' index='2' type='@'/>
<arg name='lowPriority' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageData'>
<retval declared_type='NSMutableData*' type='@'/>
</method>
<method selector='lowPriority'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='progressive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageData:'>
<arg name='imageData' declared_type='NSMutableData*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLowPriority:'>
<arg name='lowPriority' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setMaxConcurrentDownloads:'>
<arg name='max' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressive:'>
<arg name='progressive' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUrl:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='start'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='SDWebImageManager'>
<method selector='cacheKeyFilter'>
<retval declared_type='CacheKeyFilter' function_pointer='true' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</retval>
</method>
<method selector='cancelForDelegate:'>
<arg name='delegate' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadWithURL:delegate:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadWithURL:delegate:options:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadWithURL:delegate:options:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='3' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='4' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadWithURL:delegate:options:userInfo:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadWithURL:delegate:options:userInfo:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='4' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='5' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadWithURL:delegate:retryFailed:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='retryFailed' declared_type='BOOL' index='2' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadWithURL:delegate:retryFailed:lowPriority:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='delegate' declared_type='id' index='1' type='@'/>
<arg name='retryFailed' declared_type='BOOL' index='2' type='B'/>
<arg name='lowPriority' declared_type='BOOL' index='3' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageWithURL:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setCacheKeyFilter:'>
<arg name='cacheKeyFilter' declared_type='CacheKeyFilter' index='0' function_pointer='true' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='SDWebImagePrefetcher'>
<method selector='cancelPrefetching'>
<retval declared_type='void' type='v'/>
</method>
<method selector='maxConcurrentDownloads'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='options'>
<retval declared_type='SDWebImageOptions' type='i'/>
</method>
<method selector='prefetchURLs:'>
<arg name='urls' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxConcurrentDownloads:'>
<arg name='maxConcurrentDownloads' declared_type='NSUInteger' index='0' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOptions:'>
<arg name='options' declared_type='SDWebImageOptions' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImagePrefetcher'>
<retval declared_type='SDWebImagePrefetcher*' type='@'/>
</method>
</class>
<class name='SJNotificationViewController'>
<method selector='backgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hide'>
<retval declared_type='void' type='v'/>
</method>
<method selector='parentView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg name='backgroundColor' declared_type='UIColor*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotificationLevel:'>
<arg name='level' declared_type='SJNotificationLevel' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotificationTitle:'>
<arg name='t' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentView:'>
<arg name='parentView' declared_type='UIView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowSpinner:'>
<arg name='b' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTapTarget:selector:'>
<arg name='target' declared_type='id' index='0' type='@'/>
<arg name='selector' declared_type='SEL' index='1' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg name='sourceString' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='patternWithString:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg name='selector' declared_type='SEL' index='0' type=':'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='sourceString' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromObject:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='block' declared_type='NSString *(^)(NSString *)' index='1' function_pointer='true' type='@?'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringMatches:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIApplication'>
<method selector='networkActivityCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='popNetworkActivity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushNetworkActivity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetNetworkActivity'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIButton'>
<method selector='cancelCurrentImageLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:placeholderImage:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:placeholderImage:options:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:placeholderImage:options:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='3' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='4' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:placeholderImage:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='3' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='3' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='4' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='3' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImage'>
<method class_method='true' selector='decodedImageWithImage:'>
<arg name='image' declared_type='UIImage*' index='0' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='imageWithContentsOfResolutionIndependentFile:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='initWithContentsOfResolutionIndependentFile:'>
<arg name='path' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelCurrentImageLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='options' declared_type='SDWebImageOptions' index='2' type='i'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='3' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='4' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='placeholder' declared_type='UIImage*' index='1' type='@'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='3' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:success:failure:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<arg name='success' declared_type='SDWebImageSuccessBlock' index='1' function_pointer='true' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' declared_type='SDWebImageFailureBlock' index='2' function_pointer='true' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIView'>
<method selector='findFirstResponder'>
<retval declared_type='UIView*' type='@'/>
</method>
</class>
<informal_protocol name='FBCacheIndexFileDelegate'>
<method type='v16@0:4@8@12' selector='cacheIndex:deleteFileWithName:'>
<arg name='cacheIndex' declared_type='FBCacheIndex*' index='0' type='@'/>
<arg name='name' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='cacheIndex:writeFileWithName:data:'>
<arg name='cacheIndex' declared_type='FBCacheIndex*' index='0' type='@'/>
<arg name='name' declared_type='NSString*' index='1' type='@'/>
<arg name='data' declared_type='NSData*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBDialogDelegate'>
<method type='v16@0:4@8@12' selector='dialog:didFailWithError:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B16@0:4@8@12' selector='dialog:shouldOpenURLInExternalBrowser:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<arg name='url' declared_type='NSURL*' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v12@0:4@8' selector='dialogCompleteWithUrl:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='dialogDidComplete:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='dialogDidNotComplete:'>
<arg name='dialog' declared_type='FBDialog*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='dialogDidNotCompleteWithUrl:'>
<arg name='url' declared_type='NSURL*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBFriendPickerDelegate'>
<method type='v16@0:4@8@12' selector='friendPickerViewController:handleError:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B16@0:4@8@12' selector='friendPickerViewController:shouldIncludeUser:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<arg name='user' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v12@0:4@8' selector='friendPickerViewControllerDataDidChange:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='friendPickerViewControllerSelectionDidChange:'>
<arg name='friendPicker' declared_type='FBFriendPickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphLocation'>
<method type='@8@0:4' selector='city'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='country'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='latitude'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method type='@8@0:4' selector='longitude'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method type='v12@0:4@8' selector='setCity:'>
<arg name='city' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setCountry:'>
<arg name='country' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setLatitude:'>
<arg name='latitude' declared_type='NSNumber*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setLongitude:'>
<arg name='longitude' declared_type='NSNumber*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setState:'>
<arg name='state' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setStreet:'>
<arg name='street' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setZip:'>
<arg name='zip' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='state'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='street'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='zip'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphObject'>
<method type='I8@0:4' selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method type='@8@0:4' selector='keyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
<method type='@12@0:4@8' selector='objectForKey:'>
<arg name='aKey' declared_type='id' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4@8' selector='removeObjectForKey:'>
<arg name='aKey' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='setObject:forKey:'>
<arg name='anObject' declared_type='id' index='0' type='@'/>
<arg name='aKey' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphObjectDataSourceDataNeededDelegate'>
<method type='v16@0:4@8@12' selector='graphObjectTableDataSourceNeedsData:triggeredByIndexPath:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphObjectPagingLoaderDelegate'>
<method type='v16@0:4@8@12' selector='pagingLoader:didLoadData:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<arg name='results' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='pagingLoader:handleError:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='pagingLoader:willLoadURL:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<arg name='url' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='pagingLoaderDidFinishLoading:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='pagingLoaderWasCancelled:'>
<arg name='pagingLoader' declared_type='FBGraphObjectPagingLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphObjectSelectionChangedDelegate'>
<method type='v12@0:4@8' selector='graphObjectTableSelectionDidChange:'>
<arg name='selection' declared_type='FBGraphObjectTableSelection*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphObjectSelectionQueryDelegate'>
<method type='B16@0:4@8@12' selector='graphObjectTableDataSource:selectionIncludesItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='item' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphObjectViewControllerDelegate'>
<method type='v16@0:4@8@12' selector='graphObjectTableDataSource:customizeTableCell:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='cell' declared_type='FBGraphObjectTableCell*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B16@0:4@8@12' selector='graphObjectTableDataSource:filterIncludesItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='item' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@16@0:4@8@12' selector='graphObjectTableDataSource:pictureUrlOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='graphObjectTableDataSource:subtitleOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='graphObjectTableDataSource:titleOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='graphObjectTableDataSource:titleSuffixOfItem:'>
<arg name='dataSource' declared_type='FBGraphObjectTableDataSource*' index='0' type='@'/>
<arg name='graphObject' declared_type='id' index='1' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphPlace'>
<method type='@8@0:4' selector='category'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='id'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='location'>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' selector='setCategory:'>
<arg name='category' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setId:'>
<arg name='id' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setLocation:'>
<arg name='location' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBGraphUser'>
<method type='@8@0:4' selector='birthday'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='first_name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='id'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='last_name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='link'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='location'>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='middle_name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' selector='setBirthday:'>
<arg name='birthday' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setFirst_name:'>
<arg name='first_name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setId:'>
<arg name='id' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setLast_name:'>
<arg name='last_name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setLink:'>
<arg name='link' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setLocation:'>
<arg name='location' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setMiddle_name:'>
<arg name='middle_name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setName:'>
<arg name='name' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setUsername:'>
<arg name='username' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='FBLoginDialogDelegate'>
<method type='v16@0:4@8@12' selector='fbDialogLogin:expirationDate:'>
<arg name='token' declared_type='NSString*' index='0' type='@'/>
<arg name='expirationDate' declared_type='NSDate*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' selector='fbDialogNotLogin:'>
<arg name='cancelled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBLoginViewDelegate'>
<method type='v16@0:4@8@12' selector='loginViewFetchedUserInfo:user:'>
<arg name='loginView' declared_type='FBLoginView*' index='0' type='@'/>
<arg name='user' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='loginViewShowingLoggedInUser:'>
<arg name='loginView' declared_type='FBLoginView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='loginViewShowingLoggedOutUser:'>
<arg name='loginView' declared_type='FBLoginView*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBOpenGraphAction'>
<method type='@8@0:4' selector='application'>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='comments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='created_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='end_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='expires_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='from'>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='id'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='image'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='likes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='message'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='place'>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='publish_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='ref'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' selector='setApplication:'>
<arg name='application' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setComments:'>
<arg name='comments' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setCreated_time:'>
<arg name='created_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setEnd_time:'>
<arg name='end_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setExpires_time:'>
<arg name='expires_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setFrom:'>
<arg name='from' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setId:'>
<arg name='id' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setImage:'>
<arg name='image' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setLikes:'>
<arg name='likes' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setMessage:'>
<arg name='message' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setPlace:'>
<arg name='place' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setPublish_time:'>
<arg name='publish_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setRef:'>
<arg name='ref' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setStart_time:'>
<arg name='start_time' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setTags:'>
<arg name='tags' declared_type='NSArray*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='start_time'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='tags'>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='FBPlacePickerDelegate'>
<method type='v16@0:4@8@12' selector='placePickerViewController:handleError:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B16@0:4@8@12' selector='placePickerViewController:shouldIncludePlace:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<arg name='place' declared_type='id' index='1' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v12@0:4@8' selector='placePickerViewControllerDataDidChange:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='placePickerViewControllerSelectionDidChange:'>
<arg name='placePicker' declared_type='FBPlacePickerViewController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBRequestDelegate'>
<method type='v16@0:4@8@12' selector='request:didFailWithError:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='request:didLoad:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='result' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='request:didLoadRawResponse:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='data' declared_type='NSData*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='request:didReceiveResponse:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='response' declared_type='NSURLResponse*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestLoading:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBSBJsonParser'>
<method type='@12@0:4@8' selector='objectWithString:'>
<arg name='repr' declared_type='NSString*' index='0' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='FBSBJsonWriter'>
<method type='B8@0:4' selector='humanReadable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v12@0:4B8' selector='setHumanReadable:'>
<arg name='humanReadable' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' selector='setSortKeys:'>
<arg name='sortKeys' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B8@0:4' selector='sortKeys'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@12@0:4@8' selector='stringWithObject:'>
<arg name='value' declared_type='id' index='0' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='FBSessionDelegate'>
<method type='v16@0:4@8@12' selector='fbDidExtendToken:expiresAt:'>
<arg name='accessToken' declared_type='NSString*' index='0' type='@'/>
<arg name='expiresAt' declared_type='NSDate*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='fbDidLogin'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='fbDidLogout'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' selector='fbDidNotLogin:'>
<arg name='cancelled' declared_type='BOOL' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='fbSessionInvalidated'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBUserSettingsDelegate'>
<method type='v16@0:4@8@12' selector='loginViewController:receivedError:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='loginViewControllerDidLogUserIn:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='loginViewControllerDidLogUserOut:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='loginViewControllerWillAttemptToLogUserIn:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='loginViewControllerWillLogUserOut:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='FBViewControllerDelegate'>
<method type='v12@0:4@8' selector='facebookViewControllerCancelWasPressed:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='facebookViewControllerDoneWasPressed:'>
<arg name='sender' declared_type='id' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='KKGridViewDataSource'>
<method type='@16@0:4@8@12' selector='gridView:cellForItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method type='f16@0:4@8I12' selector='gridView:heightForFooterInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method type='f16@0:4@8I12' selector='gridView:heightForHeaderInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method type='I16@0:4@8I12' selector='gridView:numberOfItemsInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method type='i20@0:4@8@12i16' selector='gridView:sectionForSectionIndexTitle:atIndex:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='title' declared_type='NSString*' index='1' type='@'/>
<arg name='index' declared_type='NSInteger' index='2' type='i'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method type='@16@0:4@8I12' selector='gridView:titleForFooterInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8I12' selector='gridView:titleForHeaderInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8I12' selector='gridView:viewForFooterInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method type='@16@0:4@8I12' selector='gridView:viewForHeaderInSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='section' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method type='@20@0:4@8I12I16' selector='gridView:viewForRow:inSection:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='row' declared_type='NSUInteger' index='1' type='I'/>
<arg name='section' declared_type='NSUInteger' index='2' type='I'/>
<retval declared_type='UIView*' type='@'/>
</method>
<method type='I12@0:4@8' selector='numberOfSectionsInGridView:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method type='@12@0:4@8' selector='sectionIndexTitlesForGridView:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='KKGridViewDelegate'>
<method type='v16@0:4@8@12' selector='gridView:didDeselectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='gridView:didSelectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@16@0:4@8@12' selector='gridView:willDeselectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method type='v20@0:4@8@12@16' selector='gridView:willDisplayCell:atIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='cell' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='id' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@16@0:4@8@12' selector='gridView:willSelectItemAtIndexPath:'>
<arg name='gridView' declared_type='KKGridView*' index='0' type='@'/>
<arg name='indexPath' declared_type='id' index='1' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKAbstractTableControllerDelegate'>
<method type='v20@0:4@8@12@16' selector='tableController:didDeleteObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='tableController:didEndEditing:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='tableController:didFailLoadWithError:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='tableController:didInsertObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='tableController:didLoadTableWithObjectLoader:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='tableController:didSelectCell:forObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='1' type='@'/>
<arg name='object' declared_type='id' index='2' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='tableController:didUpdateObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='tableController:willAddSwipeView:toCell:forObject:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='swipeView' declared_type='UIView*' index='1' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='2' type='@'/>
<arg name='object' declared_type='id' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='tableController:willBeginEditing:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='tableController:willDisplayCell:forObject:atIndexPath:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='1' type='@'/>
<arg name='object' declared_type='id' index='2' type='@'/>
<arg name='indexPath' declared_type='NSIndexPath*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='tableController:willLoadTableWithObjectLoader:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='tableController:willRemoveSwipeView:fromCell:forObject:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<arg name='swipeView' declared_type='UIView*' index='1' type='@'/>
<arg name='cell' declared_type='UITableViewCell*' index='2' type='@'/>
<arg name='object' declared_type='id' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='tableControllerDidBecomeEmpty:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='tableControllerDidBecomeOffline:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='tableControllerDidBecomeOnline:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='tableControllerDidCancelLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='tableControllerDidFinalizeLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='tableControllerDidFinishLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='tableControllerDidStartLoad:'>
<arg name='tableController' declared_type='RKAbstractTableController*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKConfigurationDelegate'>
<method type='v12@0:4@8' selector='configureObjectLoader:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='configureRequest:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKDynamicObjectMappingDelegate'>
<method type='@12@0:4@8' selector='objectMappingForData:'>
<arg name='data' declared_type='id' index='0' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKFetchedResultsTableControllerDelegate'>
<method type='v16@0:4@8I12' selector='tableController:didDeleteSectionAtIndex:'>
<arg name='tableController' declared_type='RKFetchedResultsTableController*' index='0' type='@'/>
<arg name='sectionIndex' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8I12' selector='tableController:didInsertSectionAtIndex:'>
<arg name='tableController' declared_type='RKFetchedResultsTableController*' index='0' type='@'/>
<arg name='sectionIndex' declared_type='NSUInteger' index='1' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method type='v12@0:4@8' selector='didCreateObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didDeleteObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didFetchObject:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@24@0:4@8@12@16@20' selector='findInstanceOfEntity:withPrimaryKeyAttribute:value:inManagedObjectContext:'>
<arg name='entity' declared_type='NSEntityDescription*' index='0' type='@'/>
<arg name='primaryKeyAttribute' declared_type='NSString*' index='1' type='@'/>
<arg name='primaryKeyValue' declared_type='id' index='2' type='@'/>
<arg name='managedObjectContext' declared_type='NSManagedObjectContext*' index='3' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectSeederDelegate'>
<method type='v16@0:4@8@12' selector='didSeedObject:fromFile:'>
<arg name='object' declared_type='NSManagedObject*' index='0' type='@'/>
<arg name='fileName' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectStoreDelegate'>
<method type='v20@0:4@8@12@16' selector='managedObjectStore:didFailToCopySeedDatabase:error:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='seedDatabase' declared_type='NSString*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='managedObjectStore:didFailToCreatePersistentStoreCoordinatorWithError:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='managedObjectStore:didFailToDeletePersistentStore:error:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='pathToStoreFile' declared_type='NSString*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='managedObjectStore:didFailToSaveContext:error:exception:'>
<arg name='objectStore' declared_type='RKManagedObjectStore*' index='0' type='@'/>
<arg name='context' declared_type='NSManagedObjectContext*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<arg name='exception' declared_type='NSException*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKOAuthClientDelegate'>
<method type='v16@0:4@8@12' selector='OAuthClient:didAcquireAccessToken:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='token' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='OAuthClient:didFailLoadingRequest:withError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='OAuthClient:didFailWithError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='OAuthClient:didFailWithInvalidClientError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='OAuthClient:didFailWithInvalidGrantError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='OAuthClient:didFailWithInvalidRequestError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='OAuthClient:didFailWithInvalidScopeError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='OAuthClient:didFailWithUnauthorizedClientError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='OAuthClient:didFailWithUnsupportedGrantTypeError:'>
<arg name='client' declared_type='RKOAuthClient*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKObjectLoaderDelegate'>
<method type='v16@0:4@8@12' selector='objectLoader:didFailWithError:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='objectLoader:didLoadObject:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='objectLoader:didLoadObjectDictionary:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='dictionary' declared_type='NSDictionary*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='objectLoader:didLoadObjects:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='objects' declared_type='NSArray*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12N^@16' selector='objectLoader:didSerializeSourceObject:toSerialization:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='serialization' declared_type='id*' index='2' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8N^@12' selector='objectLoader:willMapData:'>
<arg name='loader' declared_type='RKObjectLoader*' index='0' type='@'/>
<arg name='mappableData' declared_type='id*' index='1' type='^@' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='objectLoaderDidFinishLoading:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='objectLoaderDidLoadUnexpectedResponse:'>
<arg name='objectLoader' declared_type='RKObjectLoader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKObjectMapperDelegate'>
<method type='v16@0:4@8@12' selector='objectMapper:didAddError:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v32@0:4@8@12@16@20@24@28' selector='objectMapper:didFailMappingFromObject:toObject:withError:atKeyPath:usingMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='destinationObject' declared_type='id' index='2' type='@'/>
<arg name='error' declared_type='NSError*' index='3' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='4' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='5' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='objectMapper:didFindMappableObject:atKeyPath:withMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='object' declared_type='id' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='mapping' declared_type='RKObjectMappingDefinition*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v28@0:4@8@12@16@20@24' selector='objectMapper:didMapFromObject:toObject:atKeyPath:usingMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='destinationObject' declared_type='id' index='2' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='3' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='4' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='objectMapper:didNotFindMappableObjectAtKeyPath:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v28@0:4@8@12@16@20@24' selector='objectMapper:willMapFromObject:toObject:atKeyPath:usingMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<arg name='sourceObject' declared_type='id' index='1' type='@'/>
<arg name='destinationObject' declared_type='id' index='2' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='3' type='@'/>
<arg name='objectMapping' declared_type='RKObjectMappingDefinition*' index='4' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='objectMapperDidFinishMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='objectMapperWillBeginMapping:'>
<arg name='objectMapper' declared_type='RKObjectMapper*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKObjectMappingOperationDelegate'>
<method type='v16@0:4@8@12' selector='objectMappingOperation:didFailWithError:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='objectMappingOperation:didFindMapping:forKeyPath:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='mapping' declared_type='RKObjectAttributeMapping*' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='objectMappingOperation:didNotFindMappingForKeyPath:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='objectMappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='mapping' declared_type='RKObjectAttributeMapping*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='objectMappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg name='operation' declared_type='RKObjectMappingOperation*' index='0' type='@'/>
<arg name='value' declared_type='id' index='1' type='@'/>
<arg name='keyPath' declared_type='NSString*' index='2' type='@'/>
<arg name='mapping' declared_type='RKObjectAttributeMapping*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKObjectPaginatorDelegate'>
<method type='v20@0:4@8@12@16' selector='paginator:didFailWithError:objectLoader:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<arg name='loader' declared_type='RKObjectLoader*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12I16' selector='paginator:didLoadObjects:forPage:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<arg name='objects' declared_type='NSArray*' index='1' type='@'/>
<arg name='page' declared_type='NSUInteger' index='2' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8I12@16' selector='paginator:willLoadPage:objectLoader:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<arg name='page' declared_type='NSUInteger' index='1' type='I'/>
<arg name='loader' declared_type='RKObjectLoader*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='paginatorDidLoadFirstPage:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='paginatorDidLoadLastPage:'>
<arg name='paginator' declared_type='RKObjectPaginator*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKParser'>
<method type='@16@0:4@8^@12' selector='objectFromString:error:'>
<arg name='string' declared_type='NSString*' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method type='@16@0:4@8^@12' selector='stringFromObject:error:'>
<arg name='object' declared_type='id' index='0' type='@'/>
<arg name='error' declared_type='NSError**' index='1' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKRefreshTriggerProtocol'>
<method type='B12@0:4@8' selector='pullToRefreshDataSourceIsLoading:'>
<arg name='recognizer' declared_type='UIGestureRecognizer*' index='0' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@12@0:4@8' selector='pullToRefreshDataSourceLastUpdated:'>
<arg name='recognizer' declared_type='UIGestureRecognizer*' index='0' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKRequestDelegate'>
<method type='v16@0:4@8@12' selector='request:didFailLoadWithError:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='request:didLoadResponse:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='response' declared_type='RKResponse*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8i12i16i20' selector='request:didReceiveData:totalBytesReceived:totalBytesExpectedToReceive:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='bytesReceived' declared_type='NSInteger' index='1' type='i'/>
<arg name='totalBytesReceived' declared_type='NSInteger' index='2' type='i'/>
<arg name='totalBytesExpectedToReceive' declared_type='NSInteger' index='3' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='request:didReceiveResponse:'>
<arg name='request' declared_type='FBRequest*' index='0' type='@'/>
<arg name='response' declared_type='NSURLResponse*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8i12i16i20' selector='request:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<arg name='bytesWritten' declared_type='NSInteger' index='1' type='i'/>
<arg name='totalBytesWritten' declared_type='NSInteger' index='2' type='i'/>
<arg name='totalBytesExpectedToWrite' declared_type='NSInteger' index='3' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestDidCancelLoad:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestDidStartLoad:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestDidTimeout:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestWillPrepareForSend:'>
<arg name='request' declared_type='RKRequest*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKRequestQueueDelegate'>
<method type='v16@0:4@8@12' selector='requestQueue:didCancelRequest:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='requestQueue:didFailRequest:withError:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<arg name='error' declared_type='NSError*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='requestQueue:didLoadResponse:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='response' declared_type='RKResponse*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='requestQueue:didSendRequest:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='requestQueue:willSendRequest:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<arg name='request' declared_type='RKRequest*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestQueueDidBeginLoading:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestQueueDidFinishLoading:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestQueueWasSuspended:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='requestQueueWasUnsuspended:'>
<arg name='queue' declared_type='RKRequestQueue*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKRequestSerializable'>
<method type='@8@0:4' selector='ContentTypeHTTPHeader'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='HTTPBody'>
<retval declared_type='NSData*' type='@'/>
</method>
<method type='@8@0:4' selector='HTTPBodyStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method type='I8@0:4' selector='HTTPHeaderValueForContentLength'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method type='@8@0:4' selector='HTTPHeaderValueForContentType'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKRouter'>
<method type='@16@0:4@8i12' selector='resourcePathForObject:method:'>
<arg name='object' declared_type='NSObject*' index='0' type='@'/>
<arg name='method' declared_type='RKRequestMethod' index='1' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKSearchable'>
<method type='@8@0:4' selector='searchableText'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKTableControllerDelegate'>
<method type='v20@0:4@8@12@16' selector='tableController:didLoadObjects:inSection:'>
<arg name='tableController' declared_type='RKTableController*' index='0' type='@'/>
<arg name='objects' declared_type='NSArray*' index='1' type='@'/>
<arg name='section' declared_type='RKTableSection*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SBProxyForJson'>
<method type='@8@0:4' selector='proxyForJson'>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='SDImageCacheDelegate'>
<method type='v24@0:4@8@12@16@20' selector='imageCache:didFindImage:forKey:userInfo:'>
<arg name='imageCache' declared_type='SDImageCache*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='key' declared_type='NSString*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='imageCache:didNotFindImageForKey:userInfo:'>
<arg name='imageCache' declared_type='SDImageCache*' index='0' type='@'/>
<arg name='key' declared_type='NSString*' index='1' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImageDecoderDelegate'>
<method type='v20@0:4@8@12@16' selector='imageDecoder:didFinishDecodingImage:userInfo:'>
<arg name='decoder' declared_type='SDWebImageDecoder*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='userInfo' declared_type='NSDictionary*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImageDownloaderDelegate'>
<method type='v16@0:4@8@12' selector='imageDownloader:didFailWithError:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='imageDownloader:didFinishWithImage:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='imageDownloader:didUpdatePartialImage:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='imageDownloaderDidFinish:'>
<arg name='downloader' declared_type='SDWebImageDownloader*' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImageManagerDelegate'>
<method type='v16@0:4@8@12' selector='webImageManager:didFailWithError:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='webImageManager:didFailWithError:forURL:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='webImageManager:didFailWithError:forURL:userInfo:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='error' declared_type='NSError*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='webImageManager:didFinishWithImage:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='webImageManager:didFinishWithImage:forURL:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='webImageManager:didFinishWithImage:forURL:userInfo:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='webImageManager:didProgressWithPartialImage:forURL:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='webImageManager:didProgressWithPartialImage:forURL:userInfo:'>
<arg name='imageManager' declared_type='SDWebImageManager*' index='0' type='@'/>
<arg name='image' declared_type='UIImage*' index='1' type='@'/>
<arg name='url' declared_type='NSURL*' index='2' type='@'/>
<arg name='info' declared_type='NSDictionary*' index='3' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
